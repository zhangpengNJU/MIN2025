/**
 * Returns the pixel bounds of this <code>GlyphVector</code> when
 * rendered in a graphics with the given
 * <code>FontRenderContext</code> at the given location.  The
 * renderFRC need not be the same as the
 * <code>FontRenderContext</code> of this
 * <code>GlyphVector</code>, and can be null.  If it is null, the
 * <code>FontRenderContext</code> of this <code>GlyphVector</code>
 * is used.  The default implementation returns the visual bounds,
 * offset to x, y and rounded out to the next integer value (i.e. returns an
 * integer rectangle which encloses the visual bounds) and
 * ignores the FRC.  Subclassers should override this method.
 * @param renderFRC the <code>FontRenderContext</code> of the <code>Graphics</code>.
 * @param x the x-coordinate at which to render this <code>GlyphVector</code>.
 * @param y the y-coordinate at which to render this <code>GlyphVector</code>.
 * @return a <code>Rectangle</code> bounding the pixels that would be affected.
 * @since 1.4
 */
public Rectangle getPixelBounds(FontRenderContext renderFRC, float x, float y) {
    Rectangle2D rect = getVisualBounds();
    int l = (int) Math.floor(rect.getX() + x);
    int t = (int) Math.floor(rect.getY() + y);
    int r = (int) Math.ceil(rect.getMaxX() + x);
    int b = (int) Math.ceil(rect.getMaxY() + y);
    return new Rectangle(l, t, r - l, b - t);
}