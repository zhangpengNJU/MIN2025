/**
 * Gets the singleton instance of the system selection as a
 * <code>Clipboard</code> object. This allows an application to read and
 * modify the current, system-wide selection.
 * <p>
 * An application is responsible for updating the system selection whenever
 * the user selects text, using either the mouse or the keyboard.
 * Typically, this is implemented by installing a
 * <code>FocusListener</code> on all <code>Component</code>s which support
 * text selection, and, between <code>FOCUS_GAINED</code> and
 * <code>FOCUS_LOST</code> events delivered to that <code>Component</code>,
 * updating the system selection <code>Clipboard</code> when the selection
 * changes inside the <code>Component</code>. Properly updating the system
 * selection ensures that a Java application will interact correctly with
 * native applications and other Java applications running simultaneously
 * on the system. Note that <code>java.awt.TextComponent</code> and
 * <code>javax.swing.text.JTextComponent</code> already adhere to this
 * policy. When using these classes, and their subclasses, developers need
 * not write any additional code.
 * <p>
 * Some platforms do not support a system selection <code>Clipboard</code>.
 * On those platforms, this method will return <code>null</code>. In such a
 * case, an application is absolved from its responsibility to update the
 * system selection <code>Clipboard</code> as described above.
 * <p>
 * Each actual implementation of this method should first check if there
 * is a security manager installed. If there is, the method should call
 * the security manager's {@link SecurityManager#checkPermission
 * checkPermission} method to check {@code AWTPermission("accessClipboard")}.
 *
 * @return the system selection as a <code>Clipboard</code>, or
 *         <code>null</code> if the native platform does not support a
 *         system selection <code>Clipboard</code>
 * @exception HeadlessException if GraphicsEnvironment.isHeadless()
 *            returns true
 *
 * @see java.awt.datatransfer.Clipboard
 * @see java.awt.event.FocusListener
 * @see java.awt.event.FocusEvent#FOCUS_GAINED
 * @see java.awt.event.FocusEvent#FOCUS_LOST
 * @see TextComponent
 * @see javax.swing.text.JTextComponent
 * @see AWTPermission
 * @see GraphicsEnvironment#isHeadless
 * @since 1.4
 */
public Clipboard getSystemSelection() throws HeadlessException {
    GraphicsEnvironment.checkHeadless();
    if (this != Toolkit.getDefaultToolkit()) {
        return Toolkit.getDefaultToolkit().getSystemSelection();
    } else {
        GraphicsEnvironment.checkHeadless();
        return null;
    }
}