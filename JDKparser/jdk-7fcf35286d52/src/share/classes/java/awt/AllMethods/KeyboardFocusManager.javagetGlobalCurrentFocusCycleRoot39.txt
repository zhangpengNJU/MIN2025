/**
 * Returns the current focus cycle root, even if the calling thread is in a
 * different context than the current focus cycle root. If the focus owner
 * is itself a focus cycle root, then it may be ambiguous as to which
 * Components represent the next and previous Components to focus during
 * normal focus traversal. In that case, the current focus cycle root is
 * used to differentiate among the possibilities.
 *
 * @return the current focus cycle root, or null if the current focus cycle
 *         root is not a member of the calling thread's context
 * @see #getCurrentFocusCycleRoot
 * @see #setGlobalCurrentFocusCycleRoot
 * @throws SecurityException if this KeyboardFocusManager is not the
 *         current KeyboardFocusManager for the calling thread's context
 *         and if the calling thread does not have "replaceKeyboardFocusManager"
 *         permission
 */
protected Container getGlobalCurrentFocusCycleRoot() throws SecurityException {
    synchronized (KeyboardFocusManager.class) {
        checkKFMSecurity();
        return currentFocusCycleRoot;
    }
}