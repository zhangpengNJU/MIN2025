/**
 * Returns the coordinates and type of the current path segment in
 * the iteration.
 * The return value is the path segment type:
 * SEG_MOVETO, SEG_LINETO, SEG_QUADTO, SEG_CUBICTO, or SEG_CLOSE.
 * A double array of length 6 must be passed in and may be used to
 * store the coordinates of the point(s).
 * Each point is stored as a pair of double x,y coordinates.
 * SEG_MOVETO and SEG_LINETO types will return one point,
 * SEG_QUADTO will return two points,
 * SEG_CUBICTO will return 3 points
 * and SEG_CLOSE will not return any points.
 * @see #SEG_MOVETO
 * @see #SEG_LINETO
 * @see #SEG_QUADTO
 * @see #SEG_CUBICTO
 * @see #SEG_CLOSE
 */
public int currentSegment(double[] coords) {
    if (isDone()) {
        throw new NoSuchElementException("cubic iterator iterator out of bounds");
    }
    int type;
    if (index == 0) {
        coords[0] = cubic.getX1();
        coords[1] = cubic.getY1();
        type = SEG_MOVETO;
    } else {
        coords[0] = cubic.getCtrlX1();
        coords[1] = cubic.getCtrlY1();
        coords[2] = cubic.getCtrlX2();
        coords[3] = cubic.getCtrlY2();
        coords[4] = cubic.getX2();
        coords[5] = cubic.getY2();
        type = SEG_CUBICTO;
    }
    if (affine != null) {
        affine.transform(coords, 0, coords, 0, index == 0 ? 1 : 3);
    }
    return type;
}