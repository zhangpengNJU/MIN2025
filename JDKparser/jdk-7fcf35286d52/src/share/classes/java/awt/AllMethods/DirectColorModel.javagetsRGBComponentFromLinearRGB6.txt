private int getsRGBComponentFromLinearRGB(int pixel, int idx) {
    int c = ((pixel & maskArray[idx]) >>> maskOffsets[idx]);
    if (isAlphaPremultiplied) {
        float factor = (float) ((1 << lRGBprecision) - 1);
        int a = ((pixel & maskArray[3]) >>> maskOffsets[3]);
        c = (a == 0) ? 0 : (int) (((c * scaleFactors[idx]) * factor / (a * scaleFactors[3])) + 0.5f);
    } else if (nBits[idx] != lRGBprecision) {
        if (lRGBprecision == 16) {
            c = (int) ((c * scaleFactors[idx] * 257.0f) + 0.5f);
        } else {
            c = (int) ((c * scaleFactors[idx]) + 0.5f);
        }
    }
    // now range of c is 0-255 or 0-65535, depending on lRGBprecision
    return tosRGB8LUT[c] & 0xff;
}