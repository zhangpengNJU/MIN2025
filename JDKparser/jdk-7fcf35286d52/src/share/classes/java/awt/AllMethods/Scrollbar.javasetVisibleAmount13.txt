/**
 * Sets the visible amount of this scroll bar.
 * <p>
 * When a scroll bar is used to select a range of values,
 * the visible amount is used to represent the range of values
 * that are currently visible.  The size of the scroll bar's
 * bubble (also called a thumb or scroll box), usually gives a
 * visual representation of the relationship of the visible
 * amount to the range of the scroll bar.
 * Note that depending on platform, the value of the visible amount property
 * may not be visually indicated by the size of the bubble.
 * <p>
 * The scroll bar's bubble may not be displayed when it is not
 * moveable (e.g. when it takes up the entire length of the
 * scroll bar's track, or when the scroll bar is disabled).
 * Whether the bubble is displayed or not will not affect
 * the value returned by <code>getVisibleAmount</code>.
 * <p>
 * If the visible amount supplied is less than <code>one</code>
 * or greater than the current <code>maximum - minimum</code>,
 * then either <code>one</code> or <code>maximum - minimum</code>
 * is substituted, as appropriate.
 * <p>
 * Normally, a program should change a scroll bar's
 * value only by calling <code>setValues</code>.
 * The <code>setValues</code> method simultaneously
 * and synchronously sets the minimum, maximum, visible amount,
 * and value properties of a scroll bar, so that they are
 * mutually consistent.
 *
 * @param       newAmount the new visible amount
 * @see         java.awt.Scrollbar#getVisibleAmount
 * @see         java.awt.Scrollbar#setValues
 * @since       JDK1.1
 */
public void setVisibleAmount(int newAmount) {
    // Use setValues so that a consistent policy relating
    // minimum, maximum, visible amount, and value is enforced.
    setValues(value, newAmount, minimum, maximum);
}