/**
 * Generate components for the paragraph.  fChars, fBidi should have been
 * initialized already.
 */
private void generateComponents(int startingAt, int endingAt) {
    if (collectStats) {
        formattedChars += (endingAt - startingAt);
    }
    // no extra info yet, bidi determines run and line direction
    int layoutFlags = 0;
    TextLabelFactory factory = new TextLabelFactory(fFrc, fChars, fBidi, layoutFlags);
    int[] charsLtoV = null;
    if (fBidi != null) {
        fLevels = BidiUtils.getLevels(fBidi);
        int[] charsVtoL = BidiUtils.createVisualToLogicalMap(fLevels);
        charsLtoV = BidiUtils.createInverseMap(charsVtoL);
        fIsDirectionLTR = fBidi.baseIsLeftToRight();
    } else {
        fLevels = null;
        fIsDirectionLTR = true;
    }
    try {
        fComponents = TextLine.getComponents(fParagraph, fChars, startingAt, endingAt, charsLtoV, fLevels, factory);
    } catch (IllegalArgumentException e) {
        System.out.println("startingAt=" + startingAt + "; endingAt=" + endingAt);
        System.out.println("fComponentLimit=" + fComponentLimit);
        throw e;
    }
    fComponentStart = startingAt;
    fComponentLimit = endingAt;
// debugFormatCount += (endingAt-startingAt);
}