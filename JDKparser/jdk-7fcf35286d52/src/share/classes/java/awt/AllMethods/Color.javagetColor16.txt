/**
 * Finds a color in the system properties.
 * <p>
 * The first argument is treated as the name of a system property to
 * be obtained. The string value of this property is then interpreted
 * as an integer which is then converted to a <code>Color</code>
 * object.
 * <p>
 * If the specified property is not found or could not be parsed as
 * an integer then the integer value <code>v</code> is used instead,
 * and is converted to a <code>Color</code> object.
 * @param    nm  the name of the color property
 * @param    v   the default color value, as an integer
 * @return   the <code>Color</code> converted from the system
 *          property or the <code>Color</code> converted from
 *          the specified integer.
 * @see      java.lang.System#getProperty(java.lang.String)
 * @see      java.lang.Integer#getInteger(java.lang.String)
 * @see      java.awt.Color#Color(int)
 * @since    JDK1.0
 */
public static Color getColor(String nm, int v) {
    Integer intval = Integer.getInteger(nm);
    int i = (intval != null) ? intval.intValue() : v;
    return new Color((i >> 16) & 0xFF, (i >> 8) & 0xFF, (i >> 0) & 0xFF);
}