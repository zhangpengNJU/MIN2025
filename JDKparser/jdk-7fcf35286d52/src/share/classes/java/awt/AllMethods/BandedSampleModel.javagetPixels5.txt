/**
 * Returns all samples for the specified rectangle of pixels in
 * an int array, one sample per data array element.
 * ArrayIndexOutOfBoundsException may be thrown if the coordinates are
 * not in bounds.
 * @param x         The X coordinate of the upper left pixel location
 * @param y         The Y coordinate of the upper left pixel location
 * @param w         The width of the pixel rectangle
 * @param h         The height of the pixel rectangle
 * @param iArray    If non-null, returns the samples in this array
 * @param data      The DataBuffer containing the image data
 * @return the samples for the pixels within the specified region.
 * @see #setPixels(int, int, int, int, int[], DataBuffer)
 */
public int[] getPixels(int x, int y, int w, int h, int[] iArray, DataBuffer data) {
    int x1 = x + w;
    int y1 = y + h;
    if (x < 0 || x >= width || w > width || x1 < 0 || x1 > width || y < 0 || y >= height || h > height || y1 < 0 || y1 > height) {
        throw new ArrayIndexOutOfBoundsException("Coordinate out of bounds!");
    }
    int[] pixels;
    if (iArray != null) {
        pixels = iArray;
    } else {
        pixels = new int[w * h * numBands];
    }
    for (int k = 0; k < numBands; k++) {
        int lineOffset = y * scanlineStride + x + bandOffsets[k];
        int srcOffset = k;
        int bank = bankIndices[k];
        for (int i = 0; i < h; i++) {
            int pixelOffset = lineOffset;
            for (int j = 0; j < w; j++) {
                pixels[srcOffset] = data.getElem(bank, pixelOffset++);
                srcOffset += numBands;
            }
            lineOffset += scanlineStride;
        }
    }
    return pixels;
}