/**
 * Prepares an image for rendering on this component at the
 * specified width and height.
 * <p>
 * The image data is downloaded asynchronously in another thread,
 * and an appropriately scaled screen representation of the image is
 * generated.
 * @param     image    the instance of <code>Image</code>
 *            for which to prepare a screen representation
 * @param     width    the width of the desired screen representation
 * @param     height   the height of the desired screen representation
 * @param     observer   the <code>ImageObserver</code> object
 *            to be notified as the image is being prepared
 * @return    <code>true</code> if the image has already been fully
 *          prepared; <code>false</code> otherwise
 * @see       java.awt.image.ImageObserver
 * @since     JDK1.0
 */
public boolean prepareImage(Image image, int width, int height, ImageObserver observer) {
    ComponentPeer peer = this.peer;
    if (peer instanceof LightweightPeer) {
        return (parent != null) ? parent.prepareImage(image, width, height, observer) : getToolkit().prepareImage(image, width, height, observer);
    } else {
        return (peer != null) ? peer.prepareImage(image, width, height, observer) : getToolkit().prepareImage(image, width, height, observer);
    }
}