/**
 * Adds the specified hierarchy listener to receive hierarchy changed
 * events from this component when the hierarchy to which this container
 * belongs changes.
 * If listener <code>l</code> is <code>null</code>,
 * no exception is thrown and no action is performed.
 * <p>Refer to <a href="doc-files/AWTThreadIssues.html#ListenersThreads"
 * >AWT Threading Issues</a> for details on AWT's threading model.
 *
 * @param    l   the hierarchy listener
 * @see      java.awt.event.HierarchyEvent
 * @see      java.awt.event.HierarchyListener
 * @see      #removeHierarchyListener
 * @see      #getHierarchyListeners
 * @since    1.3
 */
public void addHierarchyListener(HierarchyListener l) {
    if (l == null) {
        return;
    }
    boolean notifyAncestors;
    synchronized (this) {
        notifyAncestors = (hierarchyListener == null && (eventMask & AWTEvent.HIERARCHY_EVENT_MASK) == 0);
        hierarchyListener = AWTEventMulticaster.add(hierarchyListener, l);
        notifyAncestors = (notifyAncestors && hierarchyListener != null);
        newEventsOnly = true;
    }
    if (notifyAncestors) {
        synchronized (getTreeLock()) {
            adjustListeningChildrenOnParent(AWTEvent.HIERARCHY_EVENT_MASK, 1);
        }
    }
}