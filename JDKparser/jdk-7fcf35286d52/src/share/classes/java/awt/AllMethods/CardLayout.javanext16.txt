/**
 * Flips to the next card of the specified container. If the
 * currently visible card is the last one, this method flips to the
 * first card in the layout.
 * @param     parent   the parent container in which to do the layout
 * @see       java.awt.CardLayout#previous
 */
public void next(Container parent) {
    synchronized (parent.getTreeLock()) {
        checkLayout(parent);
        int ncomponents = parent.getComponentCount();
        for (int i = 0; i < ncomponents; i++) {
            Component comp = parent.getComponent(i);
            if (comp.isVisible()) {
                comp.setVisible(false);
                currentCard = (i + 1) % ncomponents;
                comp = parent.getComponent(currentCard);
                comp.setVisible(true);
                parent.validate();
                return;
            }
        }
        showDefaultComponent(parent);
    }
}