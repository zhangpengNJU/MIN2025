/**
 * Returns an iteration object that defines the boundary of this
 * flattened <code>Line2D</code>.
 * The iterator for this class is not multi-threaded safe,
 * which means that this <code>Line2D</code> class does not
 * guarantee that modifications to the geometry of this
 * <code>Line2D</code> object do not affect any iterations of that
 * geometry that are already in process.
 * @param at the specified <code>AffineTransform</code>
 * @param flatness the maximum amount that the control points for a
 *          given curve can vary from colinear before a subdivided
 *          curve is replaced by a straight line connecting the
 *          end points.  Since a <code>Line2D</code> object is
 *          always flat, this parameter is ignored.
 * @return a <code>PathIterator</code> that defines the boundary of the
 *                  flattened <code>Line2D</code>
 * @since 1.2
 */
public PathIterator getPathIterator(AffineTransform at, double flatness) {
    return new LineIterator(this, at);
}