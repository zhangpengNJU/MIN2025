/**
 * Removes the specified hierarchy bounds listener so that it no longer
 * receives hierarchy bounds events from this component. This method
 * performs no function, nor does it throw an exception, if the listener
 * specified by the argument was not previously added to this component.
 * If listener <code>l</code> is <code>null</code>,
 * no exception is thrown and no action is performed.
 * <p>Refer to <a href="doc-files/AWTThreadIssues.html#ListenersThreads"
 * >AWT Threading Issues</a> for details on AWT's threading model.
 *
 * @param    l   the hierarchy bounds listener
 * @see      java.awt.event.HierarchyEvent
 * @see      java.awt.event.HierarchyBoundsListener
 * @see      #addHierarchyBoundsListener
 * @see      #getHierarchyBoundsListeners
 * @since    1.3
 */
public void removeHierarchyBoundsListener(HierarchyBoundsListener l) {
    if (l == null) {
        return;
    }
    boolean notifyAncestors;
    synchronized (this) {
        notifyAncestors = (hierarchyBoundsListener != null && (eventMask & AWTEvent.HIERARCHY_BOUNDS_EVENT_MASK) == 0);
        hierarchyBoundsListener = AWTEventMulticaster.remove(hierarchyBoundsListener, l);
        notifyAncestors = (notifyAncestors && hierarchyBoundsListener == null);
    }
    if (notifyAncestors) {
        synchronized (getTreeLock()) {
            adjustListeningChildrenOnParent(AWTEvent.HIERARCHY_BOUNDS_EVENT_MASK, -1);
        }
    }
}