/**
 * Returns the size of the data buffer (in data elements) needed
 * for a data buffer that matches this ComponentSampleModel.
 */
private int getBufferSize() {
    int maxBandOff = bandOffsets[0];
    for (int i = 1; i < bandOffsets.length; i++) {
        maxBandOff = Math.max(maxBandOff, bandOffsets[i]);
    }
    if (maxBandOff < 0 || maxBandOff > (Integer.MAX_VALUE - 1)) {
        throw new IllegalArgumentException("Invalid band offset");
    }
    if (pixelStride < 0 || pixelStride > (Integer.MAX_VALUE / width)) {
        throw new IllegalArgumentException("Invalid pixel stride");
    }
    if (scanlineStride < 0 || scanlineStride > (Integer.MAX_VALUE / height)) {
        throw new IllegalArgumentException("Invalid scanline stride");
    }
    int size = maxBandOff + 1;
    int val = pixelStride * (width - 1);
    if (val > (Integer.MAX_VALUE - size)) {
        throw new IllegalArgumentException("Invalid pixel stride");
    }
    size += val;
    val = scanlineStride * (height - 1);
    if (val > (Integer.MAX_VALUE - size)) {
        throw new IllegalArgumentException("Invalid scan stride");
    }
    size += val;
    return size;
}