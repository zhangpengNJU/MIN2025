/**
 * Overwrites the Transform in the <code>Graphics2D</code> context.
 * WARNING: This method should <b>never</b> be used to apply a new
 * coordinate transform on top of an existing transform because the
 * <code>Graphics2D</code> might already have a transform that is
 * needed for other purposes, such as rendering Swing
 * components or applying a scaling transformation to adjust for the
 * resolution of a printer.
 * <p>To add a coordinate transform, use the
 * <code>transform</code>, <code>rotate</code>, <code>scale</code>,
 * or <code>shear</code> methods.  The <code>setTransform</code>
 * method is intended only for restoring the original
 * <code>Graphics2D</code> transform after rendering, as shown in this
 * example:
 * <pre>
 * // Get the current transform
 * AffineTransform saveAT = g2.getTransform();
 * // Perform transformation
 * g2d.transform(...);
 * // Render
 * g2d.draw(...);
 * // Restore original transform
 * g2d.setTransform(saveAT);
 * </pre>
 *
 * @param Tx the <code>AffineTransform</code> that was retrieved
 *           from the <code>getTransform</code> method
 * @see #transform
 * @see #getTransform
 * @see AffineTransform
 */
public abstract void setTransform(AffineTransform Tx);