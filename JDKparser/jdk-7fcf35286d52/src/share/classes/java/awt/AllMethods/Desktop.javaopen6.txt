/**
 * Launches the associated application to open the file.
 *
 * <p> If the specified file is a directory, the file manager of
 * the current platform is launched to open it.
 *
 * @param file the file to be opened with the associated application
 * @throws NullPointerException if {@code file} is {@code null}
 * @throws IllegalArgumentException if the specified file doesn't
 * exist
 * @throws UnsupportedOperationException if the current platform
 * does not support the {@link Desktop.Action#OPEN} action
 * @throws IOException if the specified file has no associated
 * application or the associated application fails to be launched
 * @throws SecurityException if a security manager exists and its
 * {@link java.lang.SecurityManager#checkRead(java.lang.String)}
 * method denies read access to the file, or it denies the
 * <code>AWTPermission("showWindowWithoutWarningBanner")</code>
 * permission, or the calling thread is not allowed to create a
 * subprocess
 * @see java.awt.AWTPermission
 */
public void open(File file) throws IOException {
    file = new File(file.getPath());
    checkAWTPermission();
    checkExec();
    checkActionSupport(Action.OPEN);
    checkFileValidation(file);
    peer.open(file);
}