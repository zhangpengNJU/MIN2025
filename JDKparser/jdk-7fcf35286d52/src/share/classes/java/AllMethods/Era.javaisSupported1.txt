// -----------------------------------------------------------------------
/**
 * Checks if the specified field is supported.
 * <p>
 * This checks if this era can be queried for the specified field.
 * If false, then calling the {@link #range(TemporalField) range} and
 * {@link #get(TemporalField) get} methods will throw an exception.
 * <p>
 * If the field is a {@link ChronoField} then the query is implemented here.
 * The {@code ERA} field returns true.
 * All other {@code ChronoField} instances will return false.
 * <p>
 * If the field is not a {@code ChronoField}, then the result of this method
 * is obtained by invoking {@code TemporalField.isSupportedBy(TemporalAccessor)}
 * passing {@code this} as the argument.
 * Whether the field is supported is determined by the field.
 *
 * @param field  the field to check, null returns false
 * @return true if the field is supported on this era, false if not
 */
@Override
default boolean isSupported(TemporalField field) {
    if (field instanceof ChronoField) {
        return field == ERA;
    }
    return field != null && field.isSupportedBy(this);
}