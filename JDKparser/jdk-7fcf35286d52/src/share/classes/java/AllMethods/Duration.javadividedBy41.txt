/**
 * Returns a copy of this duration divided by the specified value.
 * <p>
 * This instance is immutable and unaffected by this method call.
 *
 * @param divisor  the value to divide the duration by, positive or negative, not zero
 * @return a {@code Duration} based on this duration divided by the specified divisor, not null
 * @throws ArithmeticException if the divisor is zero or if numeric overflow occurs
 */
public Duration dividedBy(long divisor) {
    if (divisor == 0) {
        throw new ArithmeticException("Cannot divide by zero");
    }
    if (divisor == 1) {
        return this;
    }
    return create(toSeconds().divide(BigDecimal.valueOf(divisor), RoundingMode.DOWN));
}