/**
 * Returns a {@code Byte} object holding the value
 * given by the specified {@code String}. The argument is
 * interpreted as representing a signed decimal {@code byte},
 * exactly as if the argument were given to the {@link
 * #parseByte(java.lang.String)} method. The result is a
 * {@code Byte} object that represents the {@code byte}
 * value specified by the string.
 *
 * <p> In other words, this method returns a {@code Byte} object
 * equal to the value of:
 *
 * <blockquote>
 * {@code new Byte(Byte.parseByte(s))}
 * </blockquote>
 *
 * @param s         the string to be parsed
 * @return          a {@code Byte} object holding the value
 *                  represented by the string argument
 * @throws          NumberFormatException If the {@code String} does
 *                  not contain a parsable {@code byte}.
 */
public static Byte valueOf(String s) throws NumberFormatException {
    return valueOf(s, 10);
}