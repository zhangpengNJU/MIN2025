/**
 * Returns the number of bytes that can be read from this input
 * stream without blocking.
 * <p>
 * Note that if the underlying input stream is able to supply
 * <i>k</i> input characters without blocking, the
 * {@code LineNumberInputStream} can guarantee only to provide
 * <i>k</i>/2 characters without blocking, because the
 * <i>k</i> characters from the underlying input stream might
 * consist of <i>k</i>/2 pairs of {@code '\u005Cr'} and
 * {@code '\u005Cn'}, which are converted to just
 * <i>k</i>/2 {@code '\u005Cn'} characters.
 *
 * @return     the number of bytes that can be read from this input stream
 *             without blocking.
 * @exception  IOException  if an I/O error occurs.
 * @see        java.io.FilterInputStream#in
 */
public int available() throws IOException {
    return (pushBack == -1) ? super.available() / 2 : super.available() / 2 + 1;
}