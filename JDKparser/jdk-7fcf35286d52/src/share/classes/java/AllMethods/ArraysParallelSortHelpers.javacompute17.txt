public final void compute() {
    CountedCompleter<?> s = this;
    // localize all params
    double[] a = this.a, w = this.w;
    int b = this.base, n = this.size, wb = this.wbase, g = this.gran;
    while (n > g) {
        // quartiles
        int h = n >>> 1, q = h >>> 1, u = h + q;
        Relay fc = new Relay(new Merger(s, w, a, wb, h, wb + h, n - h, b, g));
        Relay rc = new Relay(new Merger(fc, a, w, b + h, q, b + u, n - u, wb + h, g));
        new Sorter(rc, a, w, b + u, n - u, wb + u, g).fork();
        new Sorter(rc, a, w, b + h, q, wb + h, g).fork();
        ;
        Relay bc = new Relay(new Merger(fc, a, w, b, q, b + q, h - q, wb, g));
        new Sorter(bc, a, w, b + q, h - q, wb + q, g).fork();
        s = new EmptyCompleter(bc);
        n = q;
    }
    DualPivotQuicksort.sort(a, b, b + n - 1, w, wb, n);
    s.tryComplete();
}