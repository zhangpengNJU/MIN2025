/**
 * Reads into an array of bytes.  This method will block until some input
 * is available. Consider using java.io.DataInputStream.readFully to read
 * exactly 'length' bytes.
 *
 * @param   buf the buffer into which the data is read
 * @param   off the start offset of the data
 * @param   len the maximum number of bytes read
 * @return  the actual number of bytes read, -1 is returned when the end of
 *          the stream is reached.
 * @throws  IOException If an I/O error has occurred.
 * @see java.io.DataInputStream#readFully(byte[],int,int)
 */
public int read(byte[] buf, int off, int len) throws IOException {
    if (buf == null) {
        throw new NullPointerException();
    }
    int endoff = off + len;
    if (off < 0 || len < 0 || endoff > buf.length || endoff < 0) {
        throw new IndexOutOfBoundsException();
    }
    return bin.read(buf, off, len, false);
}