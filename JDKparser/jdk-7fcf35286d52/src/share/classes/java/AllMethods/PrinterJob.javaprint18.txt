/**
 * Prints a set of pages using the settings in the attribute
 * set. The default implementation ignores the attribute set.
 * <p>
 * Note that some attributes may be set directly on the PrinterJob
 * by equivalent method calls, (for example), copies:
 * <code>setcopies(int)</code>, job name: <code>setJobName(String)</code>
 * and specifying media size and orientation though the
 * <code>PageFormat</code> object.
 * <p>
 * If a supported attribute-value is specified in this attribute set,
 * it will take precedence over the API settings for this print()
 * operation only.
 * The following behaviour is specified for PageFormat:
 * If a client uses the Printable interface, then the
 * <code>attributes</code> parameter to this method is examined
 * for attributes which specify media (by size), orientation, and
 * imageable area, and those are used to construct a new PageFormat
 * which is passed to the Printable object's print() method.
 * See {@link Printable} for an explanation of the required
 * behaviour of a Printable to ensure optimal printing via PrinterJob.
 * For clients of the Pageable interface, the PageFormat will always
 * be as supplied by that interface, on a per page basis.
 * <p>
 * These behaviours allow an application to directly pass the
 * user settings returned from
 * <code>printDialog(PrintRequestAttributeSet attributes</code> to
 * this print() method.
 * <p>
 *
 * @param attributes a set of attributes for the job
 * @exception PrinterException an error in the print system
 *            caused the job to be aborted.
 * @see Book
 * @see Pageable
 * @see Printable
 * @since 1.4
 */
public void print(PrintRequestAttributeSet attributes) throws PrinterException {
    print();
}