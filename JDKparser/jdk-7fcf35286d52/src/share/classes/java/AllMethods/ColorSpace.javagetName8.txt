/**
 * Returns the name of the component given the component index.
 *
 * @param idx the component index
 * @return the name of the component at the specified index
 * @throws IllegalArgumentException if <code>idx</code> is
 *         less than 0 or greater than numComponents - 1
 */
public String getName(int idx) {
    /* REMIND - handle common cases here */
    if ((idx < 0) || (idx > numComponents - 1)) {
        throw new IllegalArgumentException("Component index out of range: " + idx);
    }
    if (compName == null) {
        switch(type) {
            case ColorSpace.TYPE_XYZ:
                compName = new String[] { "X", "Y", "Z" };
                break;
            case ColorSpace.TYPE_Lab:
                compName = new String[] { "L", "a", "b" };
                break;
            case ColorSpace.TYPE_Luv:
                compName = new String[] { "L", "u", "v" };
                break;
            case ColorSpace.TYPE_YCbCr:
                compName = new String[] { "Y", "Cb", "Cr" };
                break;
            case ColorSpace.TYPE_Yxy:
                compName = new String[] { "Y", "x", "y" };
                break;
            case ColorSpace.TYPE_RGB:
                compName = new String[] { "Red", "Green", "Blue" };
                break;
            case ColorSpace.TYPE_GRAY:
                compName = new String[] { "Gray" };
                break;
            case ColorSpace.TYPE_HSV:
                compName = new String[] { "Hue", "Saturation", "Value" };
                break;
            case ColorSpace.TYPE_HLS:
                compName = new String[] { "Hue", "Lightness", "Saturation" };
                break;
            case ColorSpace.TYPE_CMYK:
                compName = new String[] { "Cyan", "Magenta", "Yellow", "Black" };
                break;
            case ColorSpace.TYPE_CMY:
                compName = new String[] { "Cyan", "Magenta", "Yellow" };
                break;
            default:
                String[] tmp = new String[numComponents];
                for (int i = 0; i < tmp.length; i++) {
                    tmp[i] = "Unnamed color component(" + i + ")";
                }
                compName = tmp;
        }
    }
    return compName[idx];
}