/**
 * Convert a location relative to the path to a point in user
 * coordinates.  The path might bend abruptly or be disjoint at
 * the location's advance.  If this is the case, the value of
 * 'preceding' is used to disambiguate the portion of the path
 * whose location and slope is to be used to interpret the offset.
 * @param location a <code>Point2D</code> representing the advance (in x) and
 * offset (in y) of a location relative to the path.  If location
 * is not the same object as point, location will remain
 * unmodified by this call.
 * @param preceding if true, the portion preceding the advance
 * should be used, if false the portion after should be used.
 * This has no effect if the path does not break or bend sharply
 * at the advance.
 * @param point a <code>Point2D</code> to hold the returned point.  It can be
 * the same object as location.
 * @throws NullPointerException if location or point is null
 * @since 1.6
 */
public abstract void pathToPoint(Point2D location, boolean preceding, Point2D point);