// -----------------------------------------------------------------------
/**
 * Appends the chronology ID, such as 'ISO' or 'ThaiBuddhist', to the formatter.
 * <p>
 * This appends an instruction to format/parse the chronology ID to the builder.
 * <p>
 * During formatting, the chronology is obtained using a mechanism equivalent
 * to querying the temporal with {@link TemporalQueries#chronology()}.
 * It will be printed using the result of {@link Chronology#getId()}.
 * If the chronology cannot be obtained then an exception is thrown unless the
 * section of the formatter is optional.
 * <p>
 * During parsing, the chronology is parsed and must match one of the chronologies
 * in {@link Chronology#getAvailableChronologies()}.
 * If the chronology cannot be parsed then an exception is thrown unless the
 * section of the formatter is optional.
 * The parser uses the {@linkplain #parseCaseInsensitive() case sensitive} setting.
 *
 * @return this, for chaining, not null
 */
public DateTimeFormatterBuilder appendChronologyId() {
    appendInternal(new ChronoPrinterParser(null));
    return this;
}