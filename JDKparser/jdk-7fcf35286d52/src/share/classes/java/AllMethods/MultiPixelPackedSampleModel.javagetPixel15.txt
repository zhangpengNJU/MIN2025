/**
 * Returns the specified single band pixel in the first element
 * of an <code>int</code> array.
 * <code>ArrayIndexOutOfBoundsException</code> is thrown if the
 * coordinates are not in bounds.
 * @param x the X coordinate of the specified pixel
 * @param y the Y coordinate of the specified pixel
 * @param iArray the array containing the pixel to be returned or
 *  <code>null</code>
 * @param data the <code>DataBuffer</code> where image data is stored
 * @return an array containing the specified pixel.
 * @exception ArrayIndexOutOfBoundsException if the coordinates
 *  are not in bounds
 * @see #setPixel(int, int, int[], DataBuffer)
 */
public int[] getPixel(int x, int y, int[] iArray, DataBuffer data) {
    if ((x < 0) || (y < 0) || (x >= width) || (y >= height)) {
        throw new ArrayIndexOutOfBoundsException("Coordinate out of bounds!");
    }
    int[] pixels;
    if (iArray != null) {
        pixels = iArray;
    } else {
        pixels = new int[numBands];
    }
    int bitnum = dataBitOffset + x * pixelBitStride;
    int element = data.getElem(y * scanlineStride + bitnum / dataElementSize);
    int shift = dataElementSize - (bitnum & (dataElementSize - 1)) - pixelBitStride;
    pixels[0] = (element >> shift) & bitMask;
    return pixels;
}