/**
 * Returns an array of {@code Class} objects reflecting all the
 * classes and interfaces declared as members of the class represented by
 * this {@code Class} object. This includes public, protected, default
 * (package) access, and private classes and interfaces declared by the
 * class, but excludes inherited classes and interfaces.  This method
 * returns an array of length 0 if the class declares no classes or
 * interfaces as members, or if this {@code Class} object represents a
 * primitive type, an array class, or void.
 *
 * @return the array of {@code Class} objects representing all the
 *         declared members of this class
 * @throws SecurityException
 *         If a security manager, <i>s</i>, is present and any of the
 *         following conditions is met:
 *
 *         <ul>
 *
 *         <li> the caller's class loader is not the same as the
 *         class loader of this class and invocation of
 *         {@link SecurityManager#checkPermission
 *         s.checkPermission} method with
 *         {@code RuntimePermission("accessDeclaredMembers")}
 *         denies access to the declared classes within this class
 *
 *         <li> the caller's class loader is not the same as or an
 *         ancestor of the class loader for the current class and
 *         invocation of {@link SecurityManager#checkPackageAccess
 *         s.checkPackageAccess()} denies access to the package
 *         of this class
 *
 *         </ul>
 *
 * @since JDK1.1
 */
@CallerSensitive
public Class<?>[] getDeclaredClasses() throws SecurityException {
    checkMemberAccess(Member.DECLARED, Reflection.getCallerClass(), false);
    return getDeclaredClasses0();
}