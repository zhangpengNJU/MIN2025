/**
 * Returns a new character sequence that is a subsequence of this sequence.
 *
 * <p> An invocation of this method of the form
 *
 * <pre>{@code
 * sb.subSequence(begin,&nbsp;end)}</pre>
 *
 * behaves in exactly the same way as the invocation
 *
 * <pre>{@code
 * sb.substring(begin,&nbsp;end)}</pre>
 *
 * This method is provided so that this class can
 * implement the {@link CharSequence} interface.
 *
 * @param      start   the start index, inclusive.
 * @param      end     the end index, exclusive.
 * @return     the specified subsequence.
 *
 * @throws  IndexOutOfBoundsException
 *          if {@code start} or {@code end} are negative,
 *          if {@code end} is greater than {@code length()},
 *          or if {@code start} is greater than {@code end}
 * @spec JSR-51
 */
@Override
public CharSequence subSequence(int start, int end) {
    return substring(start, end);
}