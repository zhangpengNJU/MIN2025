/**
 * Register an object to be validated before the graph is returned.  While
 * similar to resolveObject these validations are called after the entire
 * graph has been reconstituted.  Typically, a readObject method will
 * register the object with the stream so that when all of the objects are
 * restored a final set of validations can be performed.
 *
 * @param   obj the object to receive the validation callback.
 * @param   prio controls the order of callbacks;zero is a good default.
 *          Use higher numbers to be called back earlier, lower numbers for
 *          later callbacks. Within a priority, callbacks are processed in
 *          no particular order.
 * @throws  NotActiveException The stream is not currently reading objects
 *          so it is invalid to register a callback.
 * @throws  InvalidObjectException The validation object is null.
 */
public void registerValidation(ObjectInputValidation obj, int prio) throws NotActiveException, InvalidObjectException {
    if (depth == 0) {
        throw new NotActiveException("stream inactive");
    }
    vlist.register(obj, prio);
}