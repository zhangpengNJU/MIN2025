/**
 * Exports the remote object to make it available to receive incoming
 * calls using an anonymous port. This method will always return a
 * statically generated stub.
 *
 * <p>The object is exported with a server socket
 * created using the {@link RMISocketFactory} class.
 *
 * @param obj the remote object to be exported
 * @return remote object stub
 * @exception RemoteException if export fails
 * @since JDK1.1
 * @deprecated This method is deprecated because it supports only static stubs.
 * Use {@link #exportObject(Remote, int) exportObject(Remote, port)} or
 * {@link #exportObject(Remote, int, RMIClientSocketFactory, RMIServerSocketFactory)
 * exportObject(Remote, port, csf, ssf)}
 * instead.
 */
@Deprecated
public static RemoteStub exportObject(Remote obj) throws RemoteException {
    /*
         * Use UnicastServerRef constructor passing the boolean value true
         * to indicate that only a generated stub class should be used.  A
         * generated stub class must be used instead of a dynamic proxy
         * because the return value of this method is RemoteStub which a
         * dynamic proxy class cannot extend.
         */
    return (RemoteStub) exportObject(obj, new UnicastServerRef(true));
}