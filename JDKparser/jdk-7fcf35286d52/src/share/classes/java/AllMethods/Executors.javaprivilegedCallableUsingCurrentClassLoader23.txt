/**
 * Returns a {@link Callable} object that will, when called,
 * execute the given {@code callable} under the current access
 * control context, with the current context class loader as the
 * context class loader. This method should normally be invoked
 * within an
 * {@link AccessController#doPrivileged AccessController.doPrivileged}
 * action to create callables that will, if possible, execute
 * under the selected permission settings holding within that
 * action; or if not possible, throw an associated {@link
 * AccessControlException}.
 *
 * @param callable the underlying task
 * @param <T> the type of the callable's result
 * @return a callable object
 * @throws NullPointerException if callable null
 * @throws AccessControlException if the current access control
 * context does not have permission to both set and get context
 * class loader
 */
public static <T> Callable<T> privilegedCallableUsingCurrentClassLoader(Callable<T> callable) {
    if (callable == null)
        throw new NullPointerException();
    return new PrivilegedCallableUsingCurrentClassLoader<T>(callable);
}