/**
 * If the lock state matches the given stamp, releases the
 * corresponding mode of the lock.
 *
 * @param stamp a stamp returned by a lock operation
 * @throws IllegalMonitorStateException if the stamp does
 * not match the current state of this lock
 */
public void unlock(long stamp) {
    long a = stamp & ABITS, m, s;
    WNode h;
    while (((s = state) & SBITS) == (stamp & SBITS)) {
        if ((m = s & ABITS) == 0L)
            break;
        else if (m == WBIT) {
            if (a != m)
                break;
            state = (s += WBIT) == 0L ? ORIGIN : s;
            if ((h = whead) != null && h.status != 0)
                release(h);
            return;
        } else if (a == 0L || a >= WBIT)
            break;
        else if (m < RFULL) {
            if (U.compareAndSwapLong(this, STATE, s, s - RUNIT)) {
                if (m == RUNIT && (h = whead) != null && h.status != 0)
                    release(h);
                return;
            }
        } else if (tryDecReaderOverflow(s) != 0L)
            return;
    }
    throw new IllegalMonitorStateException();
}