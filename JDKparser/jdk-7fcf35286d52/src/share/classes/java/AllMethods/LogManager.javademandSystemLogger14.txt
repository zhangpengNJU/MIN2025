Logger demandSystemLogger(String name, String resourceBundleName) {
    // Add a system logger in the system context's namespace
    final Logger sysLogger = getSystemContext().demandLogger(name, resourceBundleName);
    // Add the system logger to the LogManager's namespace if not exist
    // so that there is only one single logger of the given name.
    // System loggers are visible to applications unless a logger of
    // the same name has been added.
    Logger logger;
    do {
        // First attempt to call addLogger instead of getLogger
        // This would avoid potential bug in custom LogManager.getLogger
        // implementation that adds a logger if does not exist
        if (addLogger(sysLogger)) {
            // successfully added the new system logger
            logger = sysLogger;
        } else {
            logger = getLogger(name);
        }
    } while (logger == null);
    // LogManager will set the sysLogger's handlers via LogManager.addLogger method.
    if (logger != sysLogger && sysLogger.accessCheckedHandlers().length == 0) {
        // if logger already exists but handlers not set
        final Logger l = logger;
        AccessController.doPrivileged(new PrivilegedAction<Void>() {

            @Override
            public Void run() {
                for (Handler hdl : l.accessCheckedHandlers()) {
                    sysLogger.addHandler(hdl);
                }
                return null;
            }
        });
    }
    return sysLogger;
}