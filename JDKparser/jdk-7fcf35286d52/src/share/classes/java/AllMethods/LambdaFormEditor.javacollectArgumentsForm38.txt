LambdaForm collectArgumentsForm(int pos, MethodType collectorType) {
    int collectorArity = collectorType.parameterCount();
    boolean dropResult = (collectorType.returnType() == void.class);
    if (collectorArity == 1 && !dropResult) {
        return filterArgumentForm(pos, basicType(collectorType.parameterType(0)));
    }
    BasicType[] newTypes = BasicType.basicTypes(collectorType.parameterList());
    Transform.Kind kind = (dropResult ? Transform.Kind.COLLECT_ARGS_TO_VOID : Transform.Kind.COLLECT_ARGS);
    // pure side effect
    if (dropResult && collectorArity == 0)
        pos = 1;
    Transform key = Transform.of(kind, pos, collectorArity, BasicType.basicTypesOrd(newTypes));
    LambdaForm form = getInCache(key);
    if (form != null) {
        assert (form.arity == lambdaForm.arity - (dropResult ? 0 : 1) + collectorArity);
        return form;
    }
    form = makeArgumentCombinationForm(pos, collectorType, false, dropResult);
    return putInCache(key, form);
}