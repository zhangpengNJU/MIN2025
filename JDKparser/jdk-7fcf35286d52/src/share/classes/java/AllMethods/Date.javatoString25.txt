/**
 * Converts this <code>Date</code> object to a <code>String</code>
 * of the form:
 * <blockquote><pre>
 * dow mon dd hh:mm:ss zzz yyyy</pre></blockquote>
 * where:<ul>
 * <li><tt>dow</tt> is the day of the week (<tt>Sun, Mon, Tue, Wed,
 *     Thu, Fri, Sat</tt>).
 * <li><tt>mon</tt> is the month (<tt>Jan, Feb, Mar, Apr, May, Jun,
 *     Jul, Aug, Sep, Oct, Nov, Dec</tt>).
 * <li><tt>dd</tt> is the day of the month (<tt>01</tt> through
 *     <tt>31</tt>), as two decimal digits.
 * <li><tt>hh</tt> is the hour of the day (<tt>00</tt> through
 *     <tt>23</tt>), as two decimal digits.
 * <li><tt>mm</tt> is the minute within the hour (<tt>00</tt> through
 *     <tt>59</tt>), as two decimal digits.
 * <li><tt>ss</tt> is the second within the minute (<tt>00</tt> through
 *     <tt>61</tt>, as two decimal digits.
 * <li><tt>zzz</tt> is the time zone (and may reflect daylight saving
 *     time). Standard time zone abbreviations include those
 *     recognized by the method <tt>parse</tt>. If time zone
 *     information is not available, then <tt>zzz</tt> is empty -
 *     that is, it consists of no characters at all.
 * <li><tt>yyyy</tt> is the year, as four decimal digits.
 * </ul>
 *
 * @return  a string representation of this date.
 * @see     java.util.Date#toLocaleString()
 * @see     java.util.Date#toGMTString()
 */
public String toString() {
    // "EEE MMM dd HH:mm:ss zzz yyyy";
    BaseCalendar.Date date = normalize();
    StringBuilder sb = new StringBuilder(28);
    int index = date.getDayOfWeek();
    if (index == BaseCalendar.SUNDAY) {
        index = 8;
    }
    // EEE
    convertToAbbr(sb, wtb[index]).append(' ');
    // MMM
    convertToAbbr(sb, wtb[date.getMonth() - 1 + 2 + 7]).append(' ');
    // dd
    CalendarUtils.sprintf0d(sb, date.getDayOfMonth(), 2).append(' ');
    // HH
    CalendarUtils.sprintf0d(sb, date.getHours(), 2).append(':');
    // mm
    CalendarUtils.sprintf0d(sb, date.getMinutes(), 2).append(':');
    // ss
    CalendarUtils.sprintf0d(sb, date.getSeconds(), 2).append(' ');
    TimeZone zi = date.getZone();
    if (zi != null) {
        // zzz
        sb.append(zi.getDisplayName(date.isDaylightTime(), TimeZone.SHORT, Locale.US));
    } else {
        sb.append("GMT");
    }
    // yyyy
    sb.append(' ').append(date.getYear());
    return sb.toString();
}