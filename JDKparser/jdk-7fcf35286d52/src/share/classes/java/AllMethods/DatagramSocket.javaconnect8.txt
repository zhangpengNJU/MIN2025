/**
 * Connects this socket to a remote socket address (IP address + port number).
 *
 * <p> If given an {@link InetSocketAddress InetSocketAddress}, this method
 * behaves as if invoking {@link #connect(InetAddress,int) connect(InetAddress,int)}
 * with the the given socket addresses IP address and port number.
 *
 * @param   addr    The remote address.
 *
 * @throws  SocketException
 *          if the connect fails
 *
 * @throws IllegalArgumentException
 *         if {@code addr} is {@code null}, or {@code addr} is a SocketAddress
 *         subclass not supported by this socket
 *
 * @throws SecurityException
 *         if a security manager has been installed and it does
 *         not permit access to the given remote address
 *
 * @since 1.4
 */
public void connect(SocketAddress addr) throws SocketException {
    if (addr == null)
        throw new IllegalArgumentException("Address can't be null");
    if (!(addr instanceof InetSocketAddress))
        throw new IllegalArgumentException("Unsupported address type");
    InetSocketAddress epoint = (InetSocketAddress) addr;
    if (epoint.isUnresolved())
        throw new SocketException("Unresolved address");
    connectInternal(epoint.getAddress(), epoint.getPort());
}