/**
 * Returns the {@code RoundingMode} object corresponding to a
 * legacy integer rounding mode constant in {@link BigDecimal}.
 *
 * @param  rm legacy integer rounding mode to convert
 * @return {@code RoundingMode} corresponding to the given integer.
 * @throws IllegalArgumentException integer is out of range
 */
public static RoundingMode valueOf(int rm) {
    switch(rm) {
        case BigDecimal.ROUND_UP:
            return UP;
        case BigDecimal.ROUND_DOWN:
            return DOWN;
        case BigDecimal.ROUND_CEILING:
            return CEILING;
        case BigDecimal.ROUND_FLOOR:
            return FLOOR;
        case BigDecimal.ROUND_HALF_UP:
            return HALF_UP;
        case BigDecimal.ROUND_HALF_DOWN:
            return HALF_DOWN;
        case BigDecimal.ROUND_HALF_EVEN:
            return HALF_EVEN;
        case BigDecimal.ROUND_UNNECESSARY:
            return UNNECESSARY;
        default:
            throw new IllegalArgumentException("argument out of range");
    }
}