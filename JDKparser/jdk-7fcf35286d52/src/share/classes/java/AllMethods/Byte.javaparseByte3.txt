/**
 * Parses the string argument as a signed decimal {@code
 * byte}. The characters in the string must all be decimal digits,
 * except that the first character may be an ASCII minus sign
 * {@code '-'} ({@code '\u005Cu002D'}) to indicate a negative
 * value or an ASCII plus sign {@code '+'}
 * ({@code '\u005Cu002B'}) to indicate a positive value. The
 * resulting {@code byte} value is returned, exactly as if the
 * argument and the radix 10 were given as arguments to the {@link
 * #parseByte(java.lang.String, int)} method.
 *
 * @param s         a {@code String} containing the
 *                  {@code byte} representation to be parsed
 * @return          the {@code byte} value represented by the
 *                  argument in decimal
 * @throws          NumberFormatException if the string does not
 *                  contain a parsable {@code byte}.
 */
public static byte parseByte(String s) throws NumberFormatException {
    return parseByte(s, 10);
}