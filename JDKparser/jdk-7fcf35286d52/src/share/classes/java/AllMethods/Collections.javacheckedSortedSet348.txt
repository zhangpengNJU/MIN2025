/**
 * Returns a dynamically typesafe view of the specified sorted set.
 * Any attempt to insert an element of the wrong type will result in an
 * immediate {@link ClassCastException}.  Assuming a sorted set
 * contains no incorrectly typed elements prior to the time a
 * dynamically typesafe view is generated, and that all subsequent
 * access to the sorted set takes place through the view, it is
 * <i>guaranteed</i> that the sorted set cannot contain an incorrectly
 * typed element.
 *
 * <p>A discussion of the use of dynamically typesafe views may be
 * found in the documentation for the {@link #checkedCollection
 * checkedCollection} method.
 *
 * <p>The returned sorted set will be serializable if the specified sorted
 * set is serializable.
 *
 * <p>Since {@code null} is considered to be a value of any reference
 * type, the returned sorted set permits insertion of null elements
 * whenever the backing sorted set does.
 *
 * @param <E> the class of the objects in the set
 * @param s the sorted set for which a dynamically typesafe view is to be
 *          returned
 * @param type the type of element that {@code s} is permitted to hold
 * @return a dynamically typesafe view of the specified sorted set
 * @since 1.5
 */
public static <E> SortedSet<E> checkedSortedSet(SortedSet<E> s, Class<E> type) {
    return new CheckedSortedSet<>(s, type);
}