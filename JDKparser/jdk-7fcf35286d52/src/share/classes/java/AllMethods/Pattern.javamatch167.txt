boolean match(Matcher matcher, int i, CharSequence seq) {
    int rmaxChars = countChars(seq, i, -rmax);
    int rminChars = countChars(seq, i, -rmin);
    int savedFrom = matcher.from;
    int savedLBT = matcher.lookbehindTo;
    boolean conditionMatched = false;
    int startIndex = (!matcher.transparentBounds) ? matcher.from : 0;
    int from = Math.max(i - rmaxChars, startIndex);
    matcher.lookbehindTo = i;
    // Relax transparent region boundaries for lookbehind
    if (matcher.transparentBounds)
        matcher.from = 0;
    for (int j = i - rminChars; !conditionMatched && j >= from; j -= j > from ? countChars(seq, j, -1) : 1) {
        conditionMatched = cond.match(matcher, j, seq);
    }
    // Reinstate region boundaries
    matcher.from = savedFrom;
    matcher.lookbehindTo = savedLBT;
    return !conditionMatched && next.match(matcher, i, seq);
}