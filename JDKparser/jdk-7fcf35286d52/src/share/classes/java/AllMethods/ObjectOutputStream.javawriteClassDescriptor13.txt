/**
 * Write the specified class descriptor to the ObjectOutputStream.  Class
 * descriptors are used to identify the classes of objects written to the
 * stream.  Subclasses of ObjectOutputStream may override this method to
 * customize the way in which class descriptors are written to the
 * serialization stream.  The corresponding method in ObjectInputStream,
 * <code>readClassDescriptor</code>, should then be overridden to
 * reconstitute the class descriptor from its custom stream representation.
 * By default, this method writes class descriptors according to the format
 * defined in the Object Serialization specification.
 *
 * <p>Note that this method will only be called if the ObjectOutputStream
 * is not using the old serialization stream format (set by calling
 * ObjectOutputStream's <code>useProtocolVersion</code> method).  If this
 * serialization stream is using the old format
 * (<code>PROTOCOL_VERSION_1</code>), the class descriptor will be written
 * internally in a manner that cannot be overridden or customized.
 *
 * @param   desc class descriptor to write to the stream
 * @throws  IOException If an I/O error has occurred.
 * @see java.io.ObjectInputStream#readClassDescriptor()
 * @see #useProtocolVersion(int)
 * @see java.io.ObjectStreamConstants#PROTOCOL_VERSION_1
 * @since 1.3
 */
protected void writeClassDescriptor(ObjectStreamClass desc) throws IOException {
    desc.writeNonProxy(this);
}