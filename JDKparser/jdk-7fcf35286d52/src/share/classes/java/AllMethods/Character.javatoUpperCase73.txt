/**
 * Converts the character argument to uppercase using case mapping
 * information from the UnicodeData file.
 * <p>
 * Note that
 * {@code Character.isUpperCase(Character.toUpperCase(ch))}
 * does not always return {@code true} for some ranges of
 * characters, particularly those that are symbols or ideographs.
 *
 * <p>In general, {@link String#toUpperCase()} should be used to map
 * characters to uppercase. {@code String} case mapping methods
 * have several benefits over {@code Character} case mapping methods.
 * {@code String} case mapping methods can perform locale-sensitive
 * mappings, context-sensitive mappings, and 1:M character mappings, whereas
 * the {@code Character} case mapping methods cannot.
 *
 * <p><b>Note:</b> This method cannot handle <a
 * href="#supplementary"> supplementary characters</a>. To support
 * all Unicode characters, including supplementary characters, use
 * the {@link #toUpperCase(int)} method.
 *
 * @param   ch   the character to be converted.
 * @return  the uppercase equivalent of the character, if any;
 *          otherwise, the character itself.
 * @see     Character#isUpperCase(char)
 * @see     String#toUpperCase()
 */
public static char toUpperCase(char ch) {
    return (char) toUpperCase((int) ch);
}