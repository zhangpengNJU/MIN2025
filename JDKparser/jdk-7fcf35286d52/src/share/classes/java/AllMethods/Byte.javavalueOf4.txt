/**
 * Returns a {@code Byte} object holding the value
 * extracted from the specified {@code String} when parsed
 * with the radix given by the second argument. The first argument
 * is interpreted as representing a signed {@code byte} in
 * the radix specified by the second argument, exactly as if the
 * argument were given to the {@link #parseByte(java.lang.String,
 * int)} method. The result is a {@code Byte} object that
 * represents the {@code byte} value specified by the string.
 *
 * <p> In other words, this method returns a {@code Byte} object
 * equal to the value of:
 *
 * <blockquote>
 * {@code new Byte(Byte.parseByte(s, radix))}
 * </blockquote>
 *
 * @param s         the string to be parsed
 * @param radix     the radix to be used in interpreting {@code s}
 * @return          a {@code Byte} object holding the value
 *                  represented by the string argument in the
 *                  specified radix.
 * @throws          NumberFormatException If the {@code String} does
 *                  not contain a parsable {@code byte}.
 */
public static Byte valueOf(String s, int radix) throws NumberFormatException {
    return valueOf(parseByte(s, radix));
}