private void doProperty(Class<?> type, PropertyDescriptor pd, Object oldInstance, Object newInstance, Encoder out) throws Exception {
    Method getter = pd.getReadMethod();
    Method setter = pd.getWriteMethod();
    if (getter != null && setter != null) {
        Expression oldGetExp = new Expression(oldInstance, getter.getName(), new Object[] {});
        Expression newGetExp = new Expression(newInstance, getter.getName(), new Object[] {});
        Object oldValue = oldGetExp.getValue();
        Object newValue = newGetExp.getValue();
        out.writeExpression(oldGetExp);
        if (!Objects.equals(newValue, out.get(oldValue))) {
            // Search for a static constant with this value;
            Object e = (Object[]) pd.getValue("enumerationValues");
            if (e instanceof Object[] && Array.getLength(e) % 3 == 0) {
                Object[] a = (Object[]) e;
                for (int i = 0; i < a.length; i = i + 3) {
                    try {
                        Field f = type.getField((String) a[i]);
                        if (f.get(null).equals(oldValue)) {
                            out.remove(oldValue);
                            out.writeExpression(new Expression(oldValue, f, "get", new Object[] { null }));
                        }
                    } catch (Exception ex) {
                    }
                }
            }
            invokeStatement(oldInstance, setter.getName(), new Object[] { oldValue }, out);
        }
    }
}