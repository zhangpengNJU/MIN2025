/**
 * Returns a <code>String</code> describing the modifier key(s),
 * such as "Shift", or "Ctrl+Shift".  These strings can be
 * localized by changing the <code>awt.properties</code> file.
 * <p>
 * Note that <code>InputEvent.ALT_MASK</code> and
 * <code>InputEvent.BUTTON2_MASK</code> have the same value,
 * so the string "Alt" is returned for both modifiers.  Likewise,
 * <code>InputEvent.META_MASK</code> and
 * <code>InputEvent.BUTTON3_MASK</code> have the same value,
 * so the string "Meta" is returned for both modifiers.
 *
 * @return string a text description of the combination of modifier
 *                keys that were held down during the event
 * @see InputEvent#getModifiersExText(int)
 */
public static String getKeyModifiersText(int modifiers) {
    StringBuilder buf = new StringBuilder();
    if ((modifiers & InputEvent.META_MASK) != 0) {
        buf.append(Toolkit.getProperty("AWT.meta", "Meta"));
        buf.append("+");
    }
    if ((modifiers & InputEvent.CTRL_MASK) != 0) {
        buf.append(Toolkit.getProperty("AWT.control", "Ctrl"));
        buf.append("+");
    }
    if ((modifiers & InputEvent.ALT_MASK) != 0) {
        buf.append(Toolkit.getProperty("AWT.alt", "Alt"));
        buf.append("+");
    }
    if ((modifiers & InputEvent.SHIFT_MASK) != 0) {
        buf.append(Toolkit.getProperty("AWT.shift", "Shift"));
        buf.append("+");
    }
    if ((modifiers & InputEvent.ALT_GRAPH_MASK) != 0) {
        buf.append(Toolkit.getProperty("AWT.altGraph", "Alt Graph"));
        buf.append("+");
    }
    if ((modifiers & InputEvent.BUTTON1_MASK) != 0) {
        buf.append(Toolkit.getProperty("AWT.button1", "Button1"));
        buf.append("+");
    }
    if (buf.length() > 0) {
        // remove trailing '+'
        buf.setLength(buf.length() - 1);
    }
    return buf.toString();
}