/**
 * Returns the number of bits in the two's complement representation
 * of this BigInteger that differ from its sign bit.  This method is
 * useful when implementing bit-vector style sets atop BigIntegers.
 *
 * @return number of bits in the two's complement representation
 *         of this BigInteger that differ from its sign bit.
 */
public int bitCount() {
    @SuppressWarnings("deprecation")
    int bc = bitCount - 1;
    if (bc == -1) {
        // bitCount not initialized yet
        // offset by one to initialize
        bc = 0;
        // Count the bits in the magnitude
        for (int i = 0; i < mag.length; i++) bc += Integer.bitCount(mag[i]);
        if (signum < 0) {
            // Count the trailing zeros in the magnitude
            int magTrailingZeroCount = 0, j;
            for (j = mag.length - 1; mag[j] == 0; j--) magTrailingZeroCount += 32;
            magTrailingZeroCount += Integer.numberOfTrailingZeros(mag[j]);
            bc += magTrailingZeroCount - 1;
        }
        bitCount = bc + 1;
    }
    return bc;
}