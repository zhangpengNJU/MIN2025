/**
 * Returns a {@link Collection} view of the values contained in this map.
 * The collection is backed by the map, so changes to the map are
 * reflected in the collection, and vice-versa.  The collection
 * supports element removal, which removes the corresponding
 * mapping from this map, via the {@code Iterator.remove},
 * {@code Collection.remove}, {@code removeAll},
 * {@code retainAll}, and {@code clear} operations.  It does not
 * support the {@code add} or {@code addAll} operations.
 *
 * <p>The view's iterators and spliterators are
 * <a href="package-summary.html#Weakly"><i>weakly consistent</i></a>.
 *
 * <p>The view's {@code spliterator} reports {@link Spliterator#CONCURRENT}
 * and {@link Spliterator#NONNULL}.
 *
 * @return the collection view
 */
public Collection<V> values() {
    ValuesView<K, V> vs;
    return (vs = values) != null ? vs : (values = new ValuesView<K, V>(this));
}