/**
 * Find a package by name in the callers {@code ClassLoader} instance.
 * The callers {@code ClassLoader} instance is used to find the package
 * instance corresponding to the named class. If the callers
 * {@code ClassLoader} instance is null then the set of packages loaded
 * by the system {@code ClassLoader} instance is searched to find the
 * named package. <p>
 *
 * Packages have attributes for versions and specifications only if the class
 * loader created the package instance with the appropriate attributes. Typically,
 * those attributes are defined in the manifests that accompany the classes.
 *
 * @param name a package name, for example, java.lang.
 * @return the package of the requested name. It may be null if no package
 *          information is available from the archive or codebase.
 */
@CallerSensitive
public static Package getPackage(String name) {
    ClassLoader l = ClassLoader.getClassLoader(Reflection.getCallerClass());
    if (l != null) {
        return l.getPackage(name);
    } else {
        return getSystemPackage(name);
    }
}