/**
 * Converts the specified local date-time to the local date-time actually
 * seen on a wall clock.
 * <p>
 * This method converts using the type of this enum.
 * The output is defined relative to the 'before' offset of the transition.
 * <p>
 * The UTC type uses the UTC offset.
 * The STANDARD type uses the standard offset.
 * The WALL type returns the input date-time.
 * The result is intended for use with the wall-offset.
 *
 * @param dateTime  the local date-time, not null
 * @param standardOffset  the standard offset, not null
 * @param wallOffset  the wall offset, not null
 * @return the date-time relative to the wall/before offset, not null
 */
public LocalDateTime createDateTime(LocalDateTime dateTime, ZoneOffset standardOffset, ZoneOffset wallOffset) {
    switch(this) {
        case UTC:
            {
                int difference = wallOffset.getTotalSeconds() - ZoneOffset.UTC.getTotalSeconds();
                return dateTime.plusSeconds(difference);
            }
        case STANDARD:
            {
                int difference = wallOffset.getTotalSeconds() - standardOffset.getTotalSeconds();
                return dateTime.plusSeconds(difference);
            }
        default:
            // WALL
            return dateTime;
    }
}