/**
 * Attempts to make a database connection to the given URL.
 * The driver should return "null" if it realizes it is the wrong kind
 * of driver to connect to the given URL.  This will be common, as when
 * the JDBC driver manager is asked to connect to a given URL it passes
 * the URL to each loaded driver in turn.
 *
 * <P>The driver should throw an <code>SQLException</code> if it is the right
 * driver to connect to the given URL but has trouble connecting to
 * the database.
 *
 * <P>The {@code Properties} argument can be used to pass
 * arbitrary string tag/value pairs as connection arguments.
 * Normally at least "user" and "password" properties should be
 * included in the {@code Properties} object.
 * <p>
 * <B>Note:</B> If a property is specified as part of the {@code url} and
 * is also specified in the {@code Properties} object, it is
 * implementation-defined as to which value will take precedence. For
 * maximum portability, an application should only specify a property once.
 *
 * @param url the URL of the database to which to connect
 * @param info a list of arbitrary string tag/value pairs as
 * connection arguments. Normally at least a "user" and
 * "password" property should be included.
 * @return a <code>Connection</code> object that represents a
 *         connection to the URL
 * @exception SQLException if a database access error occurs or the url is
 * {@code null}
 */
Connection connect(String url, java.util.Properties info) throws SQLException;