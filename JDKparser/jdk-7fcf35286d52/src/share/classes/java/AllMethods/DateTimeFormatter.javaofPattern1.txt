/**
 * Creates a formatter using the specified pattern and locale.
 * <p>
 * This method will create a formatter based on a simple
 * <a href="#patterns">pattern of letters and symbols</a>
 * as described in the class documentation.
 * For example, {@code d MMM uuuu} will format 2011-12-03 as '3 Dec 2011'.
 * <p>
 * The formatter will use the specified locale.
 * This can be changed using {@link DateTimeFormatter#withLocale(Locale)} on the returned formatter
 * <p>
 * The returned formatter has no override chronology or zone.
 * It uses {@link ResolverStyle#SMART SMART} resolver style.
 *
 * @param pattern  the pattern to use, not null
 * @param locale  the locale to use, not null
 * @return the formatter based on the pattern, not null
 * @throws IllegalArgumentException if the pattern is invalid
 * @see DateTimeFormatterBuilder#appendPattern(String)
 */
public static DateTimeFormatter ofPattern(String pattern, Locale locale) {
    return new DateTimeFormatterBuilder().appendPattern(pattern).toFormatter(locale);
}