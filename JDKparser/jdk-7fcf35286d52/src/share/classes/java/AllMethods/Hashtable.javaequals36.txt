// Comparison and hashing
/**
 * Compares the specified Object with this Map for equality,
 * as per the definition in the Map interface.
 *
 * @param  o object to be compared for equality with this hashtable
 * @return true if the specified Object is equal to this Map
 * @see Map#equals(Object)
 * @since 1.2
 */
public synchronized boolean equals(Object o) {
    if (o == this)
        return true;
    if (!(o instanceof Map))
        return false;
    Map<?, ?> t = (Map<?, ?>) o;
    if (t.size() != size())
        return false;
    try {
        Iterator<Map.Entry<K, V>> i = entrySet().iterator();
        while (i.hasNext()) {
            Map.Entry<K, V> e = i.next();
            K key = e.getKey();
            V value = e.getValue();
            if (value == null) {
                if (!(t.get(key) == null && t.containsKey(key)))
                    return false;
            } else {
                if (!value.equals(t.get(key)))
                    return false;
            }
        }
    } catch (ClassCastException unused) {
        return false;
    } catch (NullPointerException unused) {
        return false;
    }
    return true;
}