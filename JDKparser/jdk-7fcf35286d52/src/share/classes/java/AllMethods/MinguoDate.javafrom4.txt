/**
 * Obtains a {@code MinguoDate} from a temporal object.
 * <p>
 * This obtains a date in the Minguo calendar system based on the specified temporal.
 * A {@code TemporalAccessor} represents an arbitrary set of date and time information,
 * which this factory converts to an instance of {@code MinguoDate}.
 * <p>
 * The conversion typically uses the {@link ChronoField#EPOCH_DAY EPOCH_DAY}
 * field, which is standardized across calendar systems.
 * <p>
 * This method matches the signature of the functional interface {@link TemporalQuery}
 * allowing it to be used as a query via method reference, {@code MinguoDate::from}.
 *
 * @param temporal  the temporal object to convert, not null
 * @return the date in Minguo calendar system, not null
 * @throws DateTimeException if unable to convert to a {@code MinguoDate}
 */
public static MinguoDate from(TemporalAccessor temporal) {
    return MinguoChronology.INSTANCE.date(temporal);
}