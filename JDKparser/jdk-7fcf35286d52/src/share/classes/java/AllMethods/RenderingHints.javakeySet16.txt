/**
 * Returns a <code>Set</code> view of the Keys contained in this
 * <code>RenderingHints</code>.  The Set is backed by the
 * <code>RenderingHints</code>, so changes to the
 * <code>RenderingHints</code> are reflected in the <code>Set</code>,
 * and vice-versa.  If the <code>RenderingHints</code> is modified
 * while an iteration over the <code>Set</code> is in progress,
 * the results of the iteration are undefined.  The <code>Set</code>
 * supports element removal, which removes the corresponding
 * mapping from the <code>RenderingHints</code>, via the
 * <code>Iterator.remove</code>, <code>Set.remove</code>,
 * <code>removeAll</code> <code>retainAll</code>, and
 * <code>clear</code> operations.  It does not support
 * the <code>add</code> or <code>addAll</code> operations.
 *
 * @return a <code>Set</code> view of the keys contained
 * in this <code>RenderingHints</code>.
 */
public Set<Object> keySet() {
    return hintmap.keySet();
}