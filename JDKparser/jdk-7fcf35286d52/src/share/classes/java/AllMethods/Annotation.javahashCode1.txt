/**
 * Returns the hash code of this annotation, as defined below:
 *
 * <p>The hash code of an annotation is the sum of the hash codes
 * of its members (including those with default values), as defined
 * below:
 *
 * The hash code of an annotation member is (127 times the hash code
 * of the member-name as computed by {@link String#hashCode()}) XOR
 * the hash code of the member-value, as defined below:
 *
 * <p>The hash code of a member-value depends on its type:
 * <ul>
 * <li>The hash code of a primitive value <tt><i>v</i></tt> is equal to
 *     <tt><i>WrapperType</i>.valueOf(<i>v</i>).hashCode()</tt>, where
 *     <tt><i>WrapperType</i></tt> is the wrapper type corresponding
 *     to the primitive type of <tt><i>v</i></tt> ({@link Byte},
 *     {@link Character}, {@link Double}, {@link Float}, {@link Integer},
 *     {@link Long}, {@link Short}, or {@link Boolean}).
 *
 * <li>The hash code of a string, enum, class, or annotation member-value
 *     I     <tt><i>v</i></tt> is computed as by calling
 *     <tt><i>v</i>.hashCode()</tt>.  (In the case of annotation
 *     member values, this is a recursive definition.)
 *
 * <li>The hash code of an array member-value is computed by calling
 *     the appropriate overloading of
 *     {@link java.util.Arrays#hashCode(long[]) Arrays.hashCode}
 *     on the value.  (There is one overloading for each primitive
 *     type, and one for object reference types.)
 * </ul>
 *
 * @return the hash code of this annotation
 */
int hashCode();