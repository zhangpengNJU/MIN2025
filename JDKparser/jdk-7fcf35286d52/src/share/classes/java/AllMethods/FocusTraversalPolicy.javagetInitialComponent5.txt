/**
 * Returns the Component that should receive the focus when a Window is
 * made visible for the first time. Once the Window has been made visible
 * by a call to <code>show()</code> or <code>setVisible(true)</code>, the
 * initial Component will not be used again. Instead, if the Window loses
 * and subsequently regains focus, or is made invisible or undisplayable
 * and subsequently made visible and displayable, the Window's most
 * recently focused Component will become the focus owner. The default
 * implementation of this method returns the default Component.
 *
 * @param window the Window whose initial Component is to be returned
 * @return the Component that should receive the focus when window is made
 *         visible for the first time, or null if no suitable Component can
 *         be found
 * @see #getDefaultComponent
 * @see Window#getMostRecentFocusOwner
 * @throws IllegalArgumentException if window is null
 */
public Component getInitialComponent(Window window) {
    if (window == null) {
        throw new IllegalArgumentException("window cannot be equal to null.");
    }
    Component def = getDefaultComponent(window);
    if (def == null && window.isFocusableWindow()) {
        def = window;
    }
    return def;
}