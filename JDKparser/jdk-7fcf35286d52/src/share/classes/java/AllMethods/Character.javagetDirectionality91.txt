/**
 * Returns the Unicode directionality property for the given
 * character.  Character directionality is used to calculate the
 * visual ordering of text. The directionality value of undefined
 * {@code char} values is {@code DIRECTIONALITY_UNDEFINED}.
 *
 * <p><b>Note:</b> This method cannot handle <a
 * href="#supplementary"> supplementary characters</a>. To support
 * all Unicode characters, including supplementary characters, use
 * the {@link #getDirectionality(int)} method.
 *
 * @param  ch {@code char} for which the directionality property
 *            is requested.
 * @return the directionality property of the {@code char} value.
 *
 * @see Character#DIRECTIONALITY_UNDEFINED
 * @see Character#DIRECTIONALITY_LEFT_TO_RIGHT
 * @see Character#DIRECTIONALITY_RIGHT_TO_LEFT
 * @see Character#DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC
 * @see Character#DIRECTIONALITY_EUROPEAN_NUMBER
 * @see Character#DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR
 * @see Character#DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR
 * @see Character#DIRECTIONALITY_ARABIC_NUMBER
 * @see Character#DIRECTIONALITY_COMMON_NUMBER_SEPARATOR
 * @see Character#DIRECTIONALITY_NONSPACING_MARK
 * @see Character#DIRECTIONALITY_BOUNDARY_NEUTRAL
 * @see Character#DIRECTIONALITY_PARAGRAPH_SEPARATOR
 * @see Character#DIRECTIONALITY_SEGMENT_SEPARATOR
 * @see Character#DIRECTIONALITY_WHITESPACE
 * @see Character#DIRECTIONALITY_OTHER_NEUTRALS
 * @see Character#DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING
 * @see Character#DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE
 * @see Character#DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING
 * @see Character#DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE
 * @see Character#DIRECTIONALITY_POP_DIRECTIONAL_FORMAT
 * @since 1.4
 */
public static byte getDirectionality(char ch) {
    return getDirectionality((int) ch);
}