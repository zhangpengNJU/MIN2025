/**
 * Obtains a {@code Duration} representing a number of standard hours.
 * <p>
 * The seconds are calculated based on the standard definition of an hour,
 * where each hour is 3600 seconds.
 * The nanosecond in second field is set to zero.
 *
 * @param hours  the number of hours, positive or negative
 * @return a {@code Duration}, not null
 * @throws ArithmeticException if the input hours exceeds the capacity of {@code Duration}
 */
public static Duration ofHours(long hours) {
    return create(Math.multiplyExact(hours, SECONDS_PER_HOUR), 0);
}