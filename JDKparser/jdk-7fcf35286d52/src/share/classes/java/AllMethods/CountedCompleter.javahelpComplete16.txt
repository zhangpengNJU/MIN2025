/**
 * If this task has not completed, attempts to process at most the
 * given number of other unprocessed tasks for which this task is
 * on the completion path, if any are known to exist.
 *
 * @param maxTasks the maximum number of tasks to process.  If
 *                 less than or equal to zero, then no tasks are
 *                 processed.
 */
public final void helpComplete(int maxTasks) {
    Thread t;
    ForkJoinWorkerThread wt;
    if (maxTasks > 0 && status >= 0) {
        if ((t = Thread.currentThread()) instanceof ForkJoinWorkerThread)
            (wt = (ForkJoinWorkerThread) t).pool.helpComplete(wt.workQueue, this, maxTasks);
        else
            ForkJoinPool.common.externalHelpComplete(this, maxTasks);
    }
}