// -- Miscellenous --
/**
 * Reads the target of a symbolic link <i>(optional operation)</i>.
 *
 * <p> If the file system supports <a href="package-summary.html#links">symbolic
 * links</a> then this method is used to read the target of the link, failing
 * if the file is not a symbolic link. The target of the link need not exist.
 * The returned {@code Path} object will be associated with the same file
 * system as {@code link}.
 *
 * @param   link
 *          the path to the symbolic link
 *
 * @return  a {@code Path} object representing the target of the link
 *
 * @throws  UnsupportedOperationException
 *          if the implementation does not support symbolic links
 * @throws  NotLinkException
 *          if the target could otherwise not be read because the file
 *          is not a symbolic link <i>(optional specific exception)</i>
 * @throws  IOException
 *          if an I/O error occurs
 * @throws  SecurityException
 *          In the case of the default provider, and a security manager
 *          is installed, it checks that {@code FilePermission} has been
 *          granted with the "{@code readlink}" action to read the link.
 */
public static Path readSymbolicLink(Path link) throws IOException {
    return provider(link).readSymbolicLink(link);
}