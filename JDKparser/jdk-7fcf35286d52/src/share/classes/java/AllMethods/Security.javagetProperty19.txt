/**
 * Gets a security property value.
 *
 * <p>First, if there is a security manager, its
 * {@code checkPermission}  method is called with a
 * {@code java.security.SecurityPermission("getProperty."+key)}
 * permission to see if it's ok to retrieve the specified
 * security property value..
 *
 * @param key the key of the property being retrieved.
 *
 * @return the value of the security property corresponding to key.
 *
 * @throws  SecurityException
 *          if a security manager exists and its {@link
 *          java.lang.SecurityManager#checkPermission} method
 *          denies
 *          access to retrieve the specified security property value
 * @throws  NullPointerException is key is null
 *
 * @see #setProperty
 * @see java.security.SecurityPermission
 */
public static String getProperty(String key) {
    SecurityManager sm = System.getSecurityManager();
    if (sm != null) {
        sm.checkPermission(new SecurityPermission("getProperty." + key));
    }
    String name = props.getProperty(key);
    if (name != null)
        // could be a class name with trailing ws
        name = name.trim();
    return name;
}