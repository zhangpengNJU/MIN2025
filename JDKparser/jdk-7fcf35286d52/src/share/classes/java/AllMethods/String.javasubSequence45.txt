/**
 * Returns a character sequence that is a subsequence of this sequence.
 *
 * <p> An invocation of this method of the form
 *
 * <blockquote><pre>
 * str.subSequence(begin,&nbsp;end)</pre></blockquote>
 *
 * behaves in exactly the same way as the invocation
 *
 * <blockquote><pre>
 * str.substring(begin,&nbsp;end)</pre></blockquote>
 *
 * @apiNote
 * This method is defined so that the {@code String} class can implement
 * the {@link CharSequence} interface.
 *
 * @param   beginIndex   the begin index, inclusive.
 * @param   endIndex     the end index, exclusive.
 * @return  the specified subsequence.
 *
 * @throws  IndexOutOfBoundsException
 *          if {@code beginIndex} or {@code endIndex} is negative,
 *          if {@code endIndex} is greater than {@code length()},
 *          or if {@code beginIndex} is greater than {@code endIndex}
 *
 * @since 1.4
 * @spec JSR-51
 */
public CharSequence subSequence(int beginIndex, int endIndex) {
    return this.substring(beginIndex, endIndex);
}