/**
 * Returns the UnicodeScript constant with the given Unicode script
 * name or the script name alias. Script names and their aliases are
 * determined by The Unicode Standard. The files Scripts&lt;version&gt;.txt
 * and PropertyValueAliases&lt;version&gt;.txt define script names
 * and the script name aliases for a particular version of the
 * standard. The {@link Character} class specifies the version of
 * the standard that it supports.
 * <p>
 * Character case is ignored for all of the valid script names.
 * The en_US locale's case mapping rules are used to provide
 * case-insensitive string comparisons for script name validation.
 * <p>
 *
 * @param scriptName A {@code UnicodeScript} name.
 * @return The {@code UnicodeScript} constant identified
 *         by {@code scriptName}
 * @throws IllegalArgumentException if {@code scriptName} is an
 *         invalid name
 * @throws NullPointerException if {@code scriptName} is null
 */
public static final UnicodeScript forName(String scriptName) {
    scriptName = scriptName.toUpperCase(Locale.ENGLISH);
    // .replace(' ', '_'));
    UnicodeScript sc = aliases.get(scriptName);
    if (sc != null)
        return sc;
    return valueOf(scriptName);
}