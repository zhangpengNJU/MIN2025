/*non-public*/
boolean isConvertibleTo(MethodType newType) {
    MethodTypeForm oldForm = this.form();
    MethodTypeForm newForm = newType.form();
    if (oldForm == newForm)
        // same parameter count, same primitive/object mix
        return true;
    if (!canConvert(returnType(), newType.returnType()))
        return false;
    Class<?>[] srcTypes = newType.ptypes;
    Class<?>[] dstTypes = ptypes;
    if (srcTypes == dstTypes)
        return true;
    int argc;
    if ((argc = srcTypes.length) != dstTypes.length)
        return false;
    if (argc <= 1) {
        if (argc == 1 && !canConvert(srcTypes[0], dstTypes[0]))
            return false;
        return true;
    }
    if ((oldForm.primitiveParameterCount() == 0 && oldForm.erasedType == this) || (newForm.primitiveParameterCount() == 0 && newForm.erasedType == newType)) {
        // Somewhat complicated test to avoid a loop of 2 or more trips.
        // If either type has only Object parameters, we know we can convert.
        assert (canConvertParameters(srcTypes, dstTypes));
        return true;
    }
    return canConvertParameters(srcTypes, dstTypes);
}