/**
 * Gets the local address to which the socket is bound.
 * <p>
 * If there is a security manager set, its {@code checkConnect} method is
 * called with the local address and {@code -1} as its arguments to see
 * if the operation is allowed. If the operation is not allowed,
 * the {@link InetAddress#getLoopbackAddress loopback} address is returned.
 *
 * @return the local address to which the socket is bound,
 *         the loopback address if denied by the security manager, or
 *         the wildcard address if the socket is closed or not bound yet.
 * @since   JDK1.1
 *
 * @see SecurityManager#checkConnect
 */
public InetAddress getLocalAddress() {
    // This is for backward compatibility
    if (!isBound())
        return InetAddress.anyLocalAddress();
    InetAddress in = null;
    try {
        in = (InetAddress) getImpl().getOption(SocketOptions.SO_BINDADDR);
        SecurityManager sm = System.getSecurityManager();
        if (sm != null)
            sm.checkConnect(in.getHostAddress(), -1);
        if (in.isAnyLocalAddress()) {
            in = InetAddress.anyLocalAddress();
        }
    } catch (SecurityException e) {
        in = InetAddress.getLoopbackAddress();
    } catch (Exception e) {
        // "0.0.0.0"
        in = InetAddress.anyLocalAddress();
    }
    return in;
}