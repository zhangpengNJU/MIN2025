/**
 * Removes the {@code key} property (and its corresponding
 * {@code value}).
 *
 * <p>If a security manager is enabled, its {@code checkSecurityAccess}
 * method is called with the string {@code "removeProviderProperty."+name},
 * where {@code name} is the provider name, to see if it's ok to remove this
 * provider's properties.
 *
 * @throws  SecurityException
 *          if a security manager exists and its {@link
 *          java.lang.SecurityManager#checkSecurityAccess} method
 *          denies access to remove this provider's properties.
 *
 * @since 1.2
 */
@Override
public synchronized Object remove(Object key) {
    check("removeProviderProperty." + name);
    if (debug != null) {
        debug.println("Remove " + name + " provider property " + key);
    }
    return implRemove(key);
}