// -----------------------------------------------------------------------
/**
 * Compares this date-time to another date-time.
 * <p>
 * The comparison is primarily based on the date-time, from earliest to latest.
 * It is "consistent with equals", as defined by {@link Comparable}.
 * <p>
 * If all the date-times being compared are instances of {@code LocalDateTime},
 * then the comparison will be entirely based on the date-time.
 * If some dates being compared are in different chronologies, then the
 * chronology is also considered, see {@link ChronoLocalDateTime#compareTo}.
 *
 * @param other  the other date-time to compare to, not null
 * @return the comparator value, negative if less, positive if greater
 */
// override for Javadoc and performance
@Override
public int compareTo(ChronoLocalDateTime<?> other) {
    if (other instanceof LocalDateTime) {
        return compareTo0((LocalDateTime) other);
    }
    return ChronoLocalDateTime.super.compareTo(other);
}