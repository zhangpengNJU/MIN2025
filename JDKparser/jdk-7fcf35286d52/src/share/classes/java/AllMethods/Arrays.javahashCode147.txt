/**
 * Returns a hash code based on the contents of the specified array.  If
 * the array contains other arrays as elements, the hash code is based on
 * their identities rather than their contents.  It is therefore
 * acceptable to invoke this method on an array that contains itself as an
 * element,  either directly or indirectly through one or more levels of
 * arrays.
 *
 * <p>For any two arrays <tt>a</tt> and <tt>b</tt> such that
 * <tt>Arrays.equals(a, b)</tt>, it is also the case that
 * <tt>Arrays.hashCode(a) == Arrays.hashCode(b)</tt>.
 *
 * <p>The value returned by this method is equal to the value that would
 * be returned by <tt>Arrays.asList(a).hashCode()</tt>, unless <tt>a</tt>
 * is <tt>null</tt>, in which case <tt>0</tt> is returned.
 *
 * @param a the array whose content-based hash code to compute
 * @return a content-based hash code for <tt>a</tt>
 * @see #deepHashCode(Object[])
 * @since 1.5
 */
public static int hashCode(Object[] a) {
    if (a == null)
        return 0;
    int result = 1;
    for (Object element : a) result = 31 * result + (element == null ? 0 : element.hashCode());
    return result;
}