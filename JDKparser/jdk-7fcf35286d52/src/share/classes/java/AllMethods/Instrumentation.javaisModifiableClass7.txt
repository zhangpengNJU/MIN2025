/**
 * Determines whether a class is modifiable by
 * {@linkplain #retransformClasses retransformation}
 * or {@linkplain #redefineClasses redefinition}.
 * If a class is modifiable then this method returns <code>true</code>.
 * If a class is not modifiable then this method returns <code>false</code>.
 * <P>
 * For a class to be retransformed, {@link #isRetransformClassesSupported} must also be true.
 * But the value of <code>isRetransformClassesSupported()</code> does not influence the value
 * returned by this function.
 * For a class to be redefined, {@link #isRedefineClassesSupported} must also be true.
 * But the value of <code>isRedefineClassesSupported()</code> does not influence the value
 * returned by this function.
 * <P>
 * Primitive classes (for example, <code>java.lang.Integer.TYPE</code>)
 * and array classes are never modifiable.
 *
 * @param theClass the class to check for being modifiable
 * @return whether or not the argument class is modifiable
 * @throws java.lang.NullPointerException if the specified class is <code>null</code>.
 *
 * @see #retransformClasses
 * @see #isRetransformClassesSupported
 * @see #redefineClasses
 * @see #isRedefineClassesSupported
 * @since 1.6
 */
boolean isModifiableClass(Class<?> theClass);