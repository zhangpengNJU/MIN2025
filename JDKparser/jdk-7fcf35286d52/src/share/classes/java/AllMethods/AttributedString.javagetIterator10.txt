/**
 * Creates an AttributedCharacterIterator instance that provides access to
 * selected contents of this string.
 * Information about attributes not listed in attributes that the
 * implementor may have need not be made accessible through the iterator.
 * If the list is null, all available attribute information should be made
 * accessible.
 *
 * @param attributes a list of attributes that the client is interested in
 * @param beginIndex the index of the first character
 * @param endIndex the index of the character following the last character
 * @return an iterator providing access to the text and its attributes
 * @exception IllegalArgumentException if beginIndex is less then 0,
 * endIndex is greater than the length of the string, or beginIndex is
 * greater than endIndex.
 */
public AttributedCharacterIterator getIterator(Attribute[] attributes, int beginIndex, int endIndex) {
    return new AttributedStringIterator(attributes, beginIndex, endIndex);
}