/**
 * Returns the largest (closest to positive infinity)
 * {@code int} value that is less than or equal to the algebraic quotient.
 * There is one special case, if the dividend is the
 * {@linkplain Integer#MIN_VALUE Integer.MIN_VALUE} and the divisor is {@code -1},
 * then integer overflow occurs and
 * the result is equal to the {@code Integer.MIN_VALUE}.
 * <p>
 * See {@link Math#floorDiv(int, int) Math.floorDiv} for examples and
 * a comparison to the integer division {@code /} operator.
 *
 * @param x the dividend
 * @param y the divisor
 * @return the largest (closest to positive infinity)
 * {@code int} value that is less than or equal to the algebraic quotient.
 * @throws ArithmeticException if the divisor {@code y} is zero
 * @see Math#floorDiv(int, int)
 * @see Math#floor(double)
 * @since 1.8
 */
public static int floorDiv(int x, int y) {
    return Math.floorDiv(x, y);
}