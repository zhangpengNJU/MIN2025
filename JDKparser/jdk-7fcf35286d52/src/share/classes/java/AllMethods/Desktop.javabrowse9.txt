/**
 * Launches the default browser to display a {@code URI}.
 * If the default browser is not able to handle the specified
 * {@code URI}, the application registered for handling
 * {@code URIs} of the specified type is invoked. The application
 * is determined from the protocol and path of the {@code URI}, as
 * defined by the {@code URI} class.
 * <p>
 * If the calling thread does not have the necessary permissions,
 * and this is invoked from within an applet,
 * {@code AppletContext.showDocument()} is used. Similarly, if the calling
 * does not have the necessary permissions, and this is invoked from within
 * a Java Web Started application, {@code BasicService.showDocument()}
 * is used.
 *
 * @param uri the URI to be displayed in the user default browser
 * @throws NullPointerException if {@code uri} is {@code null}
 * @throws UnsupportedOperationException if the current platform
 * does not support the {@link Desktop.Action#BROWSE} action
 * @throws IOException if the user default browser is not found,
 * or it fails to be launched, or the default handler application
 * failed to be launched
 * @throws SecurityException if a security manager exists and it
 * denies the
 * <code>AWTPermission("showWindowWithoutWarningBanner")</code>
 * permission, or the calling thread is not allowed to create a
 * subprocess; and not invoked from within an applet or Java Web Started
 * application
 * @throws IllegalArgumentException if the necessary permissions
 * are not available and the URI can not be converted to a {@code URL}
 * @see java.net.URI
 * @see java.awt.AWTPermission
 * @see java.applet.AppletContext
 */
public void browse(URI uri) throws IOException {
    SecurityException securityException = null;
    try {
        checkAWTPermission();
        checkExec();
    } catch (SecurityException e) {
        securityException = e;
    }
    checkActionSupport(Action.BROWSE);
    if (uri == null) {
        throw new NullPointerException();
    }
    if (securityException == null) {
        peer.browse(uri);
        return;
    }
    // Calling thread doesn't have necessary priviledges.
    // Delegate to DesktopBrowse so that it can work in
    // applet/webstart.
    URL url = null;
    try {
        url = uri.toURL();
    } catch (MalformedURLException e) {
        throw new IllegalArgumentException("Unable to convert URI to URL", e);
    }
    sun.awt.DesktopBrowse db = sun.awt.DesktopBrowse.getInstance();
    if (db == null) {
        // Not in webstart/applet, throw the exception.
        throw securityException;
    }
    db.browse(url);
}