/**
 * Connects the socket to a remote address for this socket. When a
 * socket is connected to a remote address, packets may only be
 * sent to or received from that address. By default a datagram
 * socket is not connected.
 *
 * <p>If the remote destination to which the socket is connected does not
 * exist, or is otherwise unreachable, and if an ICMP destination unreachable
 * packet has been received for that address, then a subsequent call to
 * send or receive may throw a PortUnreachableException. Note, there is no
 * guarantee that the exception will be thrown.
 *
 * <p> If a security manager has been installed then it is invoked to check
 * access to the remote address. Specifically, if the given {@code address}
 * is a {@link InetAddress#isMulticastAddress multicast address},
 * the security manager's {@link
 * java.lang.SecurityManager#checkMulticast(InetAddress)
 * checkMulticast} method is invoked with the given {@code address}.
 * Otherwise, the security manager's {@link
 * java.lang.SecurityManager#checkConnect(String,int) checkConnect}
 * and {@link java.lang.SecurityManager#checkAccept checkAccept} methods
 * are invoked, with the given {@code address} and {@code port}, to
 * verify that datagrams are permitted to be sent and received
 * respectively.
 *
 * <p> When a socket is connected, {@link #receive receive} and
 * {@link #send send} <b>will not perform any security checks</b>
 * on incoming and outgoing packets, other than matching the packet's
 * and the socket's address and port. On a send operation, if the
 * packet's address is set and the packet's address and the socket's
 * address do not match, an {@code IllegalArgumentException} will be
 * thrown. A socket connected to a multicast address may only be used
 * to send packets.
 *
 * @param address the remote address for the socket
 *
 * @param port the remote port for the socket.
 *
 * @throws IllegalArgumentException
 *         if the address is null, or the port is out of range.
 *
 * @throws SecurityException
 *         if a security manager has been installed and it does
 *         not permit access to the given remote address
 *
 * @see #disconnect
 */
public void connect(InetAddress address, int port) {
    try {
        connectInternal(address, port);
    } catch (SocketException se) {
        throw new Error("connect failed", se);
    }
}