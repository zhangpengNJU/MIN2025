/**
 * Returns a BigInteger whose value is this mod(2**p).
 * Assumes that this {@code BigInteger >= 0} and {@code p > 0}.
 */
private BigInteger mod2(int p) {
    if (bitLength() <= p)
        return this;
    // Copy remaining ints of mag
    int numInts = (p + 31) >>> 5;
    int[] mag = new int[numInts];
    System.arraycopy(this.mag, (this.mag.length - numInts), mag, 0, numInts);
    // Mask out any excess bits
    int excessBits = (numInts << 5) - p;
    mag[0] &= (1L << (32 - excessBits)) - 1;
    return (mag[0] == 0 ? new BigInteger(1, mag) : new BigInteger(mag, 1));
}