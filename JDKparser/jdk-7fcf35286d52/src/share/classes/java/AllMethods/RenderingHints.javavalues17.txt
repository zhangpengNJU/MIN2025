/**
 * Returns a <code>Collection</code> view of the values
 * contained in this <code>RenderinHints</code>.
 * The <code>Collection</code> is backed by the
 * <code>RenderingHints</code>, so changes to
 * the <code>RenderingHints</code> are reflected in
 * the <code>Collection</code>, and vice-versa.
 * If the <code>RenderingHints</code> is modified while
 * an iteration over the <code>Collection</code> is
 * in progress, the results of the iteration are undefined.
 * The <code>Collection</code> supports element removal,
 * which removes the corresponding mapping from the
 * <code>RenderingHints</code>, via the
 * <code>Iterator.remove</code>,
 * <code>Collection.remove</code>, <code>removeAll</code>,
 * <code>retainAll</code> and <code>clear</code> operations.
 * It does not support the <code>add</code> or
 * <code>addAll</code> operations.
 *
 * @return a <code>Collection</code> view of the values
 *          contained in this <code>RenderingHints</code>.
 */
public Collection<Object> values() {
    return hintmap.values();
}