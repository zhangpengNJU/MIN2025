/**
 * Returns a {@link NavigableSet} view of the keys contained in this map.
 * The set's iterator returns the keys in ascending order.
 * The set is backed by the map, so changes to the map are
 * reflected in the set, and vice-versa.  The set supports element
 * removal, which removes the corresponding mapping from the map,
 * via the {@code Iterator.remove}, {@code Set.remove},
 * {@code removeAll}, {@code retainAll}, and {@code clear}
 * operations.  It does not support the {@code add} or {@code addAll}
 * operations.
 *
 * <p>The view's iterators and spliterators are
 * <a href="package-summary.html#Weakly"><i>weakly consistent</i></a>.
 *
 * <p>This method is equivalent to method {@code navigableKeySet}.
 *
 * @return a navigable set view of the keys in this map
 */
NavigableSet<K> keySet();