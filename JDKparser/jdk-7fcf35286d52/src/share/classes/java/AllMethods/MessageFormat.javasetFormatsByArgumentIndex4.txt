/**
 * Sets the formats to use for the values passed into
 * <code>format</code> methods or returned from <code>parse</code>
 * methods. The indices of elements in <code>newFormats</code>
 * correspond to the argument indices used in the previously set
 * pattern string.
 * The order of formats in <code>newFormats</code> thus corresponds to
 * the order of elements in the <code>arguments</code> array passed
 * to the <code>format</code> methods or the result array returned
 * by the <code>parse</code> methods.
 * <p>
 * If an argument index is used for more than one format element
 * in the pattern string, then the corresponding new format is used
 * for all such format elements. If an argument index is not used
 * for any format element in the pattern string, then the
 * corresponding new format is ignored. If fewer formats are provided
 * than needed, then only the formats for argument indices less
 * than <code>newFormats.length</code> are replaced.
 *
 * @param newFormats the new formats to use
 * @exception NullPointerException if <code>newFormats</code> is null
 * @since 1.4
 */
public void setFormatsByArgumentIndex(Format[] newFormats) {
    for (int i = 0; i <= maxOffset; i++) {
        int j = argumentNumbers[i];
        if (j < newFormats.length) {
            formats[i] = newFormats[j];
        }
    }
}