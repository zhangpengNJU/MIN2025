/**
 * Returns an array of {@code AnnotatedType} objects that represent the use
 * of types to specify the declared exceptions of the method/constructor
 * represented by this Executable. The order of the objects in the array
 * corresponds to the order of the exception types in the declaration of
 * the method/constructor.
 *
 * Returns an array of length 0 if the method/constructor declares no
 * exceptions.
 *
 * @return an array of objects representing the declared
 * exceptions of the method or constructor represented by this {@code
 * Executable}
 */
public AnnotatedType[] getAnnotatedExceptionTypes() {
    return TypeAnnotationParser.buildAnnotatedTypes(getTypeAnnotationBytes0(), sun.misc.SharedSecrets.getJavaLangAccess().getConstantPool(getDeclaringClass()), this, getDeclaringClass(), getGenericExceptionTypes(), TypeAnnotation.TypeAnnotationTarget.THROWS);
}