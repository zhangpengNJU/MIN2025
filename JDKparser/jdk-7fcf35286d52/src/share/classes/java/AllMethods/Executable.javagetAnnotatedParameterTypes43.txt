/**
 * Returns an array of {@code AnnotatedType} objects that represent the use
 * of types to specify formal parameter types of the method/constructor
 * represented by this Executable. The order of the objects in the array
 * corresponds to the order of the formal parameter types in the
 * declaration of the method/constructor.
 *
 * Returns an array of length 0 if the method/constructor declares no
 * parameters.
 *
 * @return an array of objects representing the types of the
 * formal parameters of the method or constructor represented by this
 * {@code Executable}
 */
public AnnotatedType[] getAnnotatedParameterTypes() {
    return TypeAnnotationParser.buildAnnotatedTypes(getTypeAnnotationBytes0(), sun.misc.SharedSecrets.getJavaLangAccess().getConstantPool(getDeclaringClass()), this, getDeclaringClass(), getAllGenericParameterTypes(), TypeAnnotation.TypeAnnotationTarget.METHOD_FORMAL_PARAMETER);
}