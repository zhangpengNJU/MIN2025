// These methods do no bounds checking.  Verification that the copy will not
// result in memory corruption should be done prior to invocation.
// All positions and lengths are specified in bytes.
/**
 * Copy from given source array to destination address.
 *
 * @param   src
 *          source array
 * @param   srcBaseOffset
 *          offset of first element of storage in source array
 * @param   srcPos
 *          offset within source array of the first element to read
 * @param   dstAddr
 *          destination address
 * @param   length
 *          number of bytes to copy
 */
static void copyFromArray(Object src, long srcBaseOffset, long srcPos, long dstAddr, long length) {
    long offset = srcBaseOffset + srcPos;
    while (length > 0) {
        long size = (length > UNSAFE_COPY_THRESHOLD) ? UNSAFE_COPY_THRESHOLD : length;
        unsafe.copyMemory(src, offset, null, dstAddr, size);
        length -= size;
        offset += size;
        dstAddr += size;
    }
}