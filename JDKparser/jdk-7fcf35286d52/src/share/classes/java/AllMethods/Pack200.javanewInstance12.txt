private synchronized static Object newInstance(String prop) {
    String implName = "(unknown)";
    try {
        Class<?> impl = (PACK_PROVIDER.equals(prop)) ? packerImpl : unpackerImpl;
        if (impl == null) {
            // The first time, we must decide which class to use.
            implName = java.security.AccessController.doPrivileged(new sun.security.action.GetPropertyAction(prop, ""));
            if (implName != null && !implName.equals(""))
                impl = Class.forName(implName);
            else if (PACK_PROVIDER.equals(prop))
                impl = com.sun.java.util.jar.pack.PackerImpl.class;
            else
                impl = com.sun.java.util.jar.pack.UnpackerImpl.class;
        }
        // We have a class.  Now instantiate it.
        return impl.newInstance();
    } catch (ClassNotFoundException e) {
        throw new Error("Class not found: " + implName + ":\ncheck property " + prop + " in your properties file.", e);
    } catch (InstantiationException e) {
        throw new Error("Could not instantiate: " + implName + ":\ncheck property " + prop + " in your properties file.", e);
    } catch (IllegalAccessException e) {
        throw new Error("Cannot access class: " + implName + ":\ncheck property " + prop + " in your properties file.", e);
    }
}