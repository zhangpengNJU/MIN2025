/**
 * Returns a {@link Set} view of the mappings contained in this map.
 * Each element in the returned set is a reference-equality-based
 * <tt>Map.Entry</tt>.  The set is backed by the map, so changes
 * to the map are reflected in the set, and vice-versa.  If the
 * map is modified while an iteration over the set is in progress,
 * the results of the iteration are undefined.  The set supports
 * element removal, which removes the corresponding mapping from
 * the map, via the <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,
 * <tt>removeAll</tt>, <tt>retainAll</tt> and <tt>clear</tt>
 * methods.  It does not support the <tt>add</tt> or
 * <tt>addAll</tt> methods.
 *
 * <p>Like the backing map, the <tt>Map.Entry</tt> objects in the set
 * returned by this method define key and value equality as
 * reference-equality rather than object-equality.  This affects the
 * behavior of the <tt>equals</tt> and <tt>hashCode</tt> methods of these
 * <tt>Map.Entry</tt> objects.  A reference-equality based <tt>Map.Entry
 * e</tt> is equal to an object <tt>o</tt> if and only if <tt>o</tt> is a
 * <tt>Map.Entry</tt> and <tt>e.getKey()==o.getKey() &amp;&amp;
 * e.getValue()==o.getValue()</tt>.  To accommodate these equals
 * semantics, the <tt>hashCode</tt> method returns
 * <tt>System.identityHashCode(e.getKey()) ^
 * System.identityHashCode(e.getValue())</tt>.
 *
 * <p><b>Owing to the reference-equality-based semantics of the
 * <tt>Map.Entry</tt> instances in the set returned by this method,
 * it is possible that the symmetry and transitivity requirements of
 * the {@link Object#equals(Object)} contract may be violated if any of
 * the entries in the set is compared to a normal map entry, or if
 * the set returned by this method is compared to a set of normal map
 * entries (such as would be returned by a call to this method on a normal
 * map).  However, the <tt>Object.equals</tt> contract is guaranteed to
 * hold among identity-based map entries, and among sets of such entries.
 * </b>
 *
 * @return a set view of the identity-mappings contained in this map
 */
public Set<Map.Entry<K, V>> entrySet() {
    Set<Map.Entry<K, V>> es = entrySet;
    if (es != null)
        return es;
    else
        return entrySet = new EntrySet();
}