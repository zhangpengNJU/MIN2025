/**
 * Parse a two digit zero-prefixed number.
 *
 * @param offsetId  the offset ID, not null
 * @param pos  the position to parse, valid
 * @param precededByColon  should this number be prefixed by a precededByColon
 * @return the parsed number, from 0 to 99
 */
private static int parseNumber(CharSequence offsetId, int pos, boolean precededByColon) {
    if (precededByColon && offsetId.charAt(pos - 1) != ':') {
        throw new DateTimeException("Invalid ID for ZoneOffset, colon not found when expected: " + offsetId);
    }
    char ch1 = offsetId.charAt(pos);
    char ch2 = offsetId.charAt(pos + 1);
    if (ch1 < '0' || ch1 > '9' || ch2 < '0' || ch2 > '9') {
        throw new DateTimeException("Invalid ID for ZoneOffset, non numeric characters found: " + offsetId);
    }
    return (ch1 - 48) * 10 + (ch2 - 48);
}