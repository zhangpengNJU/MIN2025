/**
 * Returns the unbiased exponent used in the representation of a
 * {@code double}.  Special cases:
 *
 * <ul>
 * <li>If the argument is NaN or infinite, then the result is
 * {@link Double#MAX_EXPONENT} + 1.
 * <li>If the argument is zero or subnormal, then the result is
 * {@link Double#MIN_EXPONENT} -1.
 * </ul>
 * @param d a {@code double} value
 * @return the unbiased exponent of the argument
 * @since 1.6
 */
public static int getExponent(double d) {
    /*
         * Bitwise convert d to long, mask out exponent bits, shift
         * to the right and then subtract out double's bias adjust to
         * get true exponent value.
         */
    return (int) (((Double.doubleToRawLongBits(d) & DoubleConsts.EXP_BIT_MASK) >> (DoubleConsts.SIGNIFICAND_WIDTH - 1)) - DoubleConsts.EXP_BIAS);
}