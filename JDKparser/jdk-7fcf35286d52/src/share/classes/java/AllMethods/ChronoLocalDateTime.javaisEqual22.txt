/**
 * Checks if this date-time is equal to the specified date-time ignoring the chronology.
 * <p>
 * This method differs from the comparison in {@link #compareTo} in that it
 * only compares the underlying date and time and not the chronology.
 * This allows date-times in different calendar systems to be compared based
 * on the time-line position.
 * <p>
 * This default implementation performs the comparison based on the epoch-day
 * and nano-of-day.
 *
 * @param other  the other date-time to compare to, not null
 * @return true if the underlying date-time is equal to the specified date-time on the timeline
 */
default boolean isEqual(ChronoLocalDateTime<?> other) {
    // Do the time check first, it is cheaper than computing EPOCH day.
    return this.toLocalTime().toNanoOfDay() == other.toLocalTime().toNanoOfDay() && this.toLocalDate().toEpochDay() == other.toLocalDate().toEpochDay();
}