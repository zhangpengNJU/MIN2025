/**
 * Log a message, specifying source class, method, and resource bundle,
 * with an optional list of message parameters.
 * <p>
 * If the logger is currently enabled for the given message
 * level then a corresponding LogRecord is created and forwarded
 * to all the registered output Handler objects.
 * <p>
 * The {@code msg} string is localized using the given resource bundle.
 * If the resource bundle is {@code null}, then the {@code msg} string is not
 * localized.
 * <p>
 * @param   level   One of the message level identifiers, e.g., SEVERE
 * @param   sourceClass    Name of the class that issued the logging request
 * @param   sourceMethod   Name of the method that issued the logging request
 * @param   bundle         Resource bundle to localize {@code msg},
 *                         can be {@code null}.
 * @param   msg     The string message (or a key in the message catalog)
 * @param   params  Parameters to the message (optional, may be none).
 * @since 1.8
 */
public void logrb(Level level, String sourceClass, String sourceMethod, ResourceBundle bundle, String msg, Object... params) {
    if (!isLoggable(level)) {
        return;
    }
    LogRecord lr = new LogRecord(level, msg);
    lr.setSourceClassName(sourceClass);
    lr.setSourceMethodName(sourceMethod);
    if (params != null && params.length != 0) {
        lr.setParameters(params);
    }
    doLog(lr, bundle);
}