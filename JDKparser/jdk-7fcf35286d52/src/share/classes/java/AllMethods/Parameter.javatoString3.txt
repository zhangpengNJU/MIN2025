/**
 * Returns a string describing this parameter.  The format is the
 * modifiers for the parameter, if any, in canonical order as
 * recommended by <cite>The Java&trade; Language
 * Specification</cite>, followed by the fully- qualified type of
 * the parameter (excluding the last [] if the parameter is
 * variable arity), followed by "..." if the parameter is variable
 * arity, followed by a space, followed by the name of the
 * parameter.
 *
 * @return A string representation of the parameter and associated
 * information.
 */
public String toString() {
    final StringBuilder sb = new StringBuilder();
    final Type type = getParameterizedType();
    final String typename = type.getTypeName();
    sb.append(Modifier.toString(getModifiers()));
    if (0 != modifiers)
        sb.append(' ');
    if (isVarArgs())
        sb.append(typename.replaceFirst("\\[\\]$", "..."));
    else
        sb.append(typename);
    sb.append(' ');
    sb.append(getName());
    return sb.toString();
}