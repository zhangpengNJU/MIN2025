/**
 * Retrieves the contents of this URL connection.
 *
 * @param classes the {@code Class} array
 * indicating the requested types
 * @return     the object fetched that is the first match of the type
 *               specified in the classes array. null if none of
 *               the requested types are supported.
 *               The {@code instanceof} operator should be used to
 *               determine the specific kind of object returned.
 * @exception  IOException              if an I/O error occurs while
 *               getting the content.
 * @exception  UnknownServiceException  if the protocol does not support
 *               the content type.
 * @see        java.net.URLConnection#getContent()
 * @see        java.net.ContentHandlerFactory#createContentHandler(java.lang.String)
 * @see        java.net.URLConnection#getContent(java.lang.Class[])
 * @see        java.net.URLConnection#setContentHandlerFactory(java.net.ContentHandlerFactory)
 * @since 1.3
 */
public Object getContent(Class[] classes) throws IOException {
    // Must call getInputStream before GetHeaderField gets called
    // so that FileNotFoundException has a chance to be thrown up
    // from here without being caught.
    getInputStream();
    return getContentHandler().getContent(this, classes);
}