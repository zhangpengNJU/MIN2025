/**
 * Constructs a new file system that is identified by a {@link URI}
 *
 * <p> This method iterates over the {@link FileSystemProvider#installedProviders()
 * installed} providers to locate the provider that is identified by the URI
 * {@link URI#getScheme scheme} of the given URI. URI schemes are compared
 * without regard to case. The exact form of the URI is highly provider
 * dependent. If found, the provider's {@link FileSystemProvider#newFileSystem(URI,Map)
 * newFileSystem(URI,Map)} method is invoked to construct the new file system.
 *
 * <p> Once a file system is {@link FileSystem#close closed} it is
 * provider-dependent if the provider allows a new file system to be created
 * with the same URI as a file system it previously created.
 *
 * <p> <b>Usage Example:</b>
 * Suppose there is a provider identified by the scheme {@code "memory"}
 * installed:
 * <pre>
 *   Map&lt;String,String&gt; env = new HashMap&lt;&gt;();
 *   env.put("capacity", "16G");
 *   env.put("blockSize", "4k");
 *   FileSystem fs = FileSystems.newFileSystem(URI.create("memory:///?name=logfs"), env);
 * </pre>
 *
 * @param   uri
 *          the URI identifying the file system
 * @param   env
 *          a map of provider specific properties to configure the file system;
 *          may be empty
 *
 * @return  a new file system
 *
 * @throws  IllegalArgumentException
 *          if the pre-conditions for the {@code uri} parameter are not met,
 *          or the {@code env} parameter does not contain properties required
 *          by the provider, or a property value is invalid
 * @throws  FileSystemAlreadyExistsException
 *          if the file system has already been created
 * @throws  ProviderNotFoundException
 *          if a provider supporting the URI scheme is not installed
 * @throws  IOException
 *          if an I/O error occurs creating the file system
 * @throws  SecurityException
 *          if a security manager is installed and it denies an unspecified
 *          permission required by the file system provider implementation
 */
public static FileSystem newFileSystem(URI uri, Map<String, ?> env) throws IOException {
    return newFileSystem(uri, env, null);
}