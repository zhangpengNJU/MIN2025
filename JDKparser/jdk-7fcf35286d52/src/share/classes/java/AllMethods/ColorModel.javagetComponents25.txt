/**
 * Returns an array of unnormalized color/alpha components given a pixel
 * in this <code>ColorModel</code>.  The pixel value is specified by
 * an array of data elements of type transferType passed in as an
 * object reference.  If <code>pixel</code> is not a primitive array
 * of type transferType, a <code>ClassCastException</code> is thrown.
 * An <code>IllegalArgumentException</code> will be thrown if color
 * component values for this <code>ColorModel</code> are not
 * conveniently representable in the unnormalized form.
 * An <code>ArrayIndexOutOfBoundsException</code> is
 * thrown if <code>pixel</code> is not large enough to hold a pixel
 * value for this <code>ColorModel</code>.
 * This method can be used to retrieve the components for a specific
 * pixel value in any <code>ColorModel</code>.  If the components
 * array is <code>null</code>, a new array will be allocated.  The
 * components array will be returned.  Color/alpha components are
 * stored in the <code>components</code> array starting at
 * <code>offset</code> (even if the array is allocated by this
 * method).  An <code>ArrayIndexOutOfBoundsException</code>
 * is thrown if  the components array is not <code>null</code> and is
 * not large enough to hold all the color and alpha components
 * (starting at <code>offset</code>).
 * Since <code>ColorModel</code> is an abstract class,
 * any instance is an instance of a subclass.  Subclasses must
 * override this method since the implementation in this abstract
 * class throws an <code>UnsupportedOperationException</code>.
 * @param pixel the specified pixel
 * @param components an array that receives the color and alpha
 * components of the specified pixel
 * @param offset the index into the <code>components</code> array at
 * which to begin storing the color and alpha components of the
 * specified pixel
 * @return an array containing the color and alpha components of the
 * specified pixel starting at the specified offset.
 * @throws UnsupportedOperationException if this
 *          method is not supported by this <code>ColorModel</code>
 */
public int[] getComponents(Object pixel, int[] components, int offset) {
    throw new UnsupportedOperationException("This method is not supported by this color model.");
}