/**
 * Retrieves a result set holding the elements of the subarray that
 * starts at index <code>index</code> and contains up to
 * <code>count</code> successive elements.  This method uses
 * the connection's type map to map the elements of the array if
 * the map contains an entry for the base type. Otherwise, the
 * standard mapping is used.
 * <P>
 * The result set has one row for each element of the SQL array
 * designated by this object, with the first row containing the
 * element at index <code>index</code>.  The result set has
 * up to <code>count</code> rows in ascending order based on the
 * indices.  Each row has two columns:  The second column stores
 * the element value; the first column stores the index into the
 * array for that element.
 *
 * @param index the array index of the first element to retrieve;
 *              the first element is at index 1
 * @param count the number of successive SQL array elements to retrieve
 * @return a <code>ResultSet</code> object containing up to
 * <code>count</code> consecutive elements of the SQL array
 * designated by this <code>Array</code> object, starting at
 * index <code>index</code>.
 * @exception SQLException if an error occurs while attempting to
 * access the array
 * @exception SQLFeatureNotSupportedException if the JDBC driver does not support
 * this method
 * @since 1.2
 */
ResultSet getResultSet(long index, int count) throws SQLException;