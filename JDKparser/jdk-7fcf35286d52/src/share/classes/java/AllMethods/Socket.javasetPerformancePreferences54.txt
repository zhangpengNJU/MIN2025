/**
 * Sets performance preferences for this socket.
 *
 * <p> Sockets use the TCP/IP protocol by default.  Some implementations
 * may offer alternative protocols which have different performance
 * characteristics than TCP/IP.  This method allows the application to
 * express its own preferences as to how these tradeoffs should be made
 * when the implementation chooses from the available protocols.
 *
 * <p> Performance preferences are described by three integers
 * whose values indicate the relative importance of short connection time,
 * low latency, and high bandwidth.  The absolute values of the integers
 * are irrelevant; in order to choose a protocol the values are simply
 * compared, with larger values indicating stronger preferences. Negative
 * values represent a lower priority than positive values. If the
 * application prefers short connection time over both low latency and high
 * bandwidth, for example, then it could invoke this method with the values
 * {@code (1, 0, 0)}.  If the application prefers high bandwidth above low
 * latency, and low latency above short connection time, then it could
 * invoke this method with the values {@code (0, 1, 2)}.
 *
 * <p> Invoking this method after this socket has been connected
 * will have no effect.
 *
 * @param  connectionTime
 *         An {@code int} expressing the relative importance of a short
 *         connection time
 *
 * @param  latency
 *         An {@code int} expressing the relative importance of low
 *         latency
 *
 * @param  bandwidth
 *         An {@code int} expressing the relative importance of high
 *         bandwidth
 *
 * @since 1.5
 */
public void setPerformancePreferences(int connectionTime, int latency, int bandwidth) {
/* Not implemented yet */
}