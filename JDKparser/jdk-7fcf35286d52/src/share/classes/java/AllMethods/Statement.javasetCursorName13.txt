/**
 * Sets the SQL cursor name to the given <code>String</code>, which
 * will be used by subsequent <code>Statement</code> object
 * <code>execute</code> methods. This name can then be
 * used in SQL positioned update or delete statements to identify the
 * current row in the <code>ResultSet</code> object generated by this
 * statement.  If the database does not support positioned update/delete,
 * this method is a noop.  To insure that a cursor has the proper isolation
 * level to support updates, the cursor's <code>SELECT</code> statement
 * should have the form <code>SELECT FOR UPDATE</code>.  If
 * <code>FOR UPDATE</code> is not present, positioned updates may fail.
 *
 * <P><B>Note:</B> By definition, the execution of positioned updates and
 * deletes must be done by a different <code>Statement</code> object than
 * the one that generated the <code>ResultSet</code> object being used for
 * positioning. Also, cursor names must be unique within a connection.
 *
 * @param name the new cursor name, which must be unique within
 *             a connection
 * @exception SQLException if a database access error occurs or
 * this method is called on a closed <code>Statement</code>
 * @throws SQLFeatureNotSupportedException  if the JDBC driver does not support this method
 */
void setCursorName(String name) throws SQLException;