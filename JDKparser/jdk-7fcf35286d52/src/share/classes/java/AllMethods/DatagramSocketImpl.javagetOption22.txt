<T> T getOption(SocketOption<T> name) throws IOException {
    if (name == StandardSocketOptions.SO_SNDBUF) {
        return (T) getOption(SocketOptions.SO_SNDBUF);
    } else if (name == StandardSocketOptions.SO_RCVBUF) {
        return (T) getOption(SocketOptions.SO_RCVBUF);
    } else if (name == StandardSocketOptions.SO_REUSEADDR) {
        return (T) getOption(SocketOptions.SO_REUSEADDR);
    } else if (name == StandardSocketOptions.IP_TOS) {
        return (T) getOption(SocketOptions.IP_TOS);
    } else if (name == StandardSocketOptions.IP_MULTICAST_IF && (getDatagramSocket() instanceof MulticastSocket)) {
        return (T) getOption(SocketOptions.IP_MULTICAST_IF2);
    } else if (name == StandardSocketOptions.IP_MULTICAST_TTL && (getDatagramSocket() instanceof MulticastSocket)) {
        Integer ttl = getTimeToLive();
        return (T) ttl;
    } else if (name == StandardSocketOptions.IP_MULTICAST_LOOP && (getDatagramSocket() instanceof MulticastSocket)) {
        return (T) getOption(SocketOptions.IP_MULTICAST_LOOP);
    } else {
        throw new UnsupportedOperationException("unsupported option");
    }
}