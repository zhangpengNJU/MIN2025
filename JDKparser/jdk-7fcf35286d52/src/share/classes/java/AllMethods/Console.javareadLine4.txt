/**
 * Provides a formatted prompt, then reads a single line of text from the
 * console.
 *
 * @param  fmt
 *         A format string as described in <a
 *         href="../util/Formatter.html#syntax">Format string syntax</a>.
 *
 * @param  args
 *         Arguments referenced by the format specifiers in the format
 *         string.  If there are more arguments than format specifiers, the
 *         extra arguments are ignored.  The maximum number of arguments is
 *         limited by the maximum dimension of a Java array as defined by
 *         <cite>The Java&trade; Virtual Machine Specification</cite>.
 *
 * @throws  IllegalFormatException
 *          If a format string contains an illegal syntax, a format
 *          specifier that is incompatible with the given arguments,
 *          insufficient arguments given the format string, or other
 *          illegal conditions.  For specification of all possible
 *          formatting errors, see the <a
 *          href="../util/Formatter.html#detail">Details</a> section
 *          of the formatter class specification.
 *
 * @throws IOError
 *         If an I/O error occurs.
 *
 * @return  A string containing the line read from the console, not
 *          including any line-termination characters, or <tt>null</tt>
 *          if an end of stream has been reached.
 */
public String readLine(String fmt, Object... args) {
    String line = null;
    synchronized (writeLock) {
        synchronized (readLock) {
            if (fmt.length() != 0)
                pw.format(fmt, args);
            try {
                char[] ca = readline(false);
                if (ca != null)
                    line = new String(ca);
            } catch (IOException x) {
                throw new IOError(x);
            }
        }
    }
    return line;
}