/**
 * Compares this object against the specified object.
 * The result is {@code true} if and only if the argument is
 * not {@code null} and it represents the same proxy as
 * this object.
 * <p>
 * Two instances of {@code Proxy} represent the same
 * address if both the SocketAddresses and type are equal.
 *
 * @param   obj   the object to compare against.
 * @return  {@code true} if the objects are the same;
 *          {@code false} otherwise.
 * @see java.net.InetSocketAddress#equals(java.lang.Object)
 */
public final boolean equals(Object obj) {
    if (obj == null || !(obj instanceof Proxy))
        return false;
    Proxy p = (Proxy) obj;
    if (p.type() == type()) {
        if (address() == null) {
            return (p.address() == null);
        } else
            return address().equals(p.address());
    }
    return false;
}