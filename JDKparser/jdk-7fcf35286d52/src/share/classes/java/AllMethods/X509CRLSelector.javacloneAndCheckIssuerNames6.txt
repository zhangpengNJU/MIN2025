/**
 * Clone and check an argument of the form passed to
 * setIssuerNames. Throw an IOException if the argument is malformed.
 *
 * @param names a {@code Collection} of names. Each entry is a
 *              String or a byte array (the name, in string or ASN.1
 *              DER encoded form, respectively). {@code null} is
 *              not an acceptable value.
 * @return a deep copy of the specified {@code Collection}
 * @throws IOException if a parsing error occurs
 */
private static HashSet<Object> cloneAndCheckIssuerNames(Collection<?> names) throws IOException {
    HashSet<Object> namesCopy = new HashSet<Object>();
    Iterator<?> i = names.iterator();
    while (i.hasNext()) {
        Object nameObject = i.next();
        if (!(nameObject instanceof byte[]) && !(nameObject instanceof String))
            throw new IOException("name not byte array or String");
        if (nameObject instanceof byte[])
            namesCopy.add(((byte[]) nameObject).clone());
        else
            namesCopy.add(nameObject);
    }
    return (namesCopy);
}