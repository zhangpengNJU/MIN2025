/**
 * Determines whether a Component is an acceptable choice as the new
 * focus owner. By default, this method will accept a Component if and
 * only if it is visible, displayable, enabled, and focusable.
 *
 * @param aComponent the Component whose fitness as a focus owner is to
 *        be tested
 * @return <code>true</code> if aComponent is visible, displayable,
 *         enabled, and focusable; <code>false</code> otherwise
 */
protected boolean accept(Component aComponent) {
    if (!aComponent.canBeFocusOwner()) {
        return false;
    }
    // Verify that the Component is recursively enabled. Disabling a
    // heavyweight Container disables its children, whereas disabling
    // a lightweight Container does not.
    if (!(aComponent instanceof Window)) {
        for (Container enableTest = aComponent.getParent(); enableTest != null; enableTest = enableTest.getParent()) {
            if (!(enableTest.isEnabled() || enableTest.isLightweight())) {
                return false;
            }
            if (enableTest instanceof Window) {
                break;
            }
        }
    }
    return true;
}