// ================================================================
// End of convenience methods
// ================================================================
/**
 * Set the log level specifying which message levels will be
 * logged by this logger.  Message levels lower than this
 * value will be discarded.  The level value Level.OFF
 * can be used to turn off logging.
 * <p>
 * If the new level is null, it means that this node should
 * inherit its level from its nearest ancestor with a specific
 * (non-null) level value.
 *
 * @param newLevel   the new value for the log level (may be null)
 * @throws  SecurityException if a security manager exists,
 *          this logger is not anonymous, and the caller
 *          does not have LoggingPermission("control").
 */
public void setLevel(Level newLevel) throws SecurityException {
    checkPermission();
    synchronized (treeLock) {
        levelObject = newLevel;
        updateEffectiveLevel();
    }
}