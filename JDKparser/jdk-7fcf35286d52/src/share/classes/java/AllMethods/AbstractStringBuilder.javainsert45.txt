/**
 * Inserts the string representation of the second {@code int}
 * argument into this sequence.
 * <p>
 * The overall effect is exactly as if the second argument were
 * converted to a string by the method {@link String#valueOf(int)},
 * and the characters of that string were then
 * {@link #insert(int,String) inserted} into this character
 * sequence at the indicated offset.
 * <p>
 * The {@code offset} argument must be greater than or equal to
 * {@code 0}, and less than or equal to the {@linkplain #length() length}
 * of this sequence.
 *
 * @param      offset   the offset.
 * @param      i        an {@code int}.
 * @return     a reference to this object.
 * @throws     StringIndexOutOfBoundsException  if the offset is invalid.
 */
public AbstractStringBuilder insert(int offset, int i) {
    return insert(offset, String.valueOf(i));
}