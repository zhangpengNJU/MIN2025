/**
 * Creates a <code>Statement</code> object that will generate
 * <code>ResultSet</code> objects with the given type, concurrency,
 * and holdability.
 * This method is the same as the <code>createStatement</code> method
 * above, but it allows the default result set
 * type, concurrency, and holdability to be overridden.
 *
 * @param resultSetType one of the following <code>ResultSet</code>
 *        constants:
 *         <code>ResultSet.TYPE_FORWARD_ONLY</code>,
 *         <code>ResultSet.TYPE_SCROLL_INSENSITIVE</code>, or
 *         <code>ResultSet.TYPE_SCROLL_SENSITIVE</code>
 * @param resultSetConcurrency one of the following <code>ResultSet</code>
 *        constants:
 *         <code>ResultSet.CONCUR_READ_ONLY</code> or
 *         <code>ResultSet.CONCUR_UPDATABLE</code>
 * @param resultSetHoldability one of the following <code>ResultSet</code>
 *        constants:
 *         <code>ResultSet.HOLD_CURSORS_OVER_COMMIT</code> or
 *         <code>ResultSet.CLOSE_CURSORS_AT_COMMIT</code>
 * @return a new <code>Statement</code> object that will generate
 *         <code>ResultSet</code> objects with the given type,
 *         concurrency, and holdability
 * @exception SQLException if a database access error occurs, this
 * method is called on a closed connection
 *            or the given parameters are not <code>ResultSet</code>
 *            constants indicating type, concurrency, and holdability
 * @exception SQLFeatureNotSupportedException if the JDBC driver does not support
 * this method or this method is not supported for the specified result
 * set type, result set holdability and result set concurrency.
 * @see ResultSet
 * @since 1.4
 */
Statement createStatement(int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException;