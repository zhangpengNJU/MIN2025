/**
 * Returns a name in the specified {@code style} of this {@code TimeZone}
 * suitable for presentation to the user in the default locale. If the
 * specified {@code daylight} is {@code true}, a Daylight Saving Time name
 * is returned (even if this {@code TimeZone} doesn't observe Daylight Saving
 * Time). Otherwise, a Standard Time name is returned.
 *
 * <p>This method is equivalent to:
 * <blockquote><pre>
 * getDisplayName(daylight, style,
 *                Locale.getDefault({@link Locale.Category#DISPLAY}))
 * </pre></blockquote>
 *
 * @param daylight {@code true} specifying a Daylight Saving Time name, or
 *                 {@code false} specifying a Standard Time name
 * @param style either {@link #LONG} or {@link #SHORT}
 * @return the human-readable name of this time zone in the default locale.
 * @exception IllegalArgumentException if {@code style} is invalid.
 * @since 1.2
 * @see #getDisplayName(boolean, int, Locale)
 * @see Locale#getDefault(Locale.Category)
 * @see Locale.Category
 * @see java.text.DateFormatSymbols#getZoneStrings()
 */
public final String getDisplayName(boolean daylight, int style) {
    return getDisplayName(daylight, style, Locale.getDefault(Locale.Category.DISPLAY));
}