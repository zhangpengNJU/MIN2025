static Object getPrivateFieldValue(Object instance, String name) {
    Field field = fields.get(name);
    if (field == null) {
        int index = name.lastIndexOf('.');
        final String className = name.substring(0, index);
        final String fieldName = name.substring(1 + index);
        field = AccessController.doPrivileged(new PrivilegedAction<Field>() {

            public Field run() {
                try {
                    Field field = Class.forName(className).getDeclaredField(fieldName);
                    field.setAccessible(true);
                    return field;
                } catch (ClassNotFoundException exception) {
                    throw new IllegalStateException("Could not find class", exception);
                } catch (NoSuchFieldException exception) {
                    throw new IllegalStateException("Could not find field", exception);
                }
            }
        });
        fields.put(name, field);
    }
    try {
        return field.get(instance);
    } catch (IllegalAccessException exception) {
        throw new IllegalStateException("Could not get value of the field", exception);
    }
}