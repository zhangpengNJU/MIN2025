/**
 * Apply the given pattern to this Format object.  The pattern
 * is assumed to be in a localized notation. A pattern is a
 * short-hand specification for the various formatting properties.
 * These properties can also be changed individually through the
 * various setter methods.
 * <p>
 * There is no limit to integer digits set
 * by this routine, since that is the typical end-user desire;
 * use setMaximumInteger if you want to set a real value.
 * For negative numbers, use a second pattern, separated by a semicolon
 * <P>Example <code>"#,#00.0#"</code> &rarr; 1,234.56
 * <P>This means a minimum of 2 integer digits, 1 fraction digit, and
 * a maximum of 2 fraction digits.
 * <p>Example: <code>"#,#00.0#;(#,#00.0#)"</code> for negatives in
 * parentheses.
 * <p>In negative patterns, the minimum and maximum counts are ignored;
 * these are presumed to be set in the positive pattern.
 *
 * @param pattern a new pattern
 * @exception NullPointerException if <code>pattern</code> is null
 * @exception IllegalArgumentException if the given pattern is invalid.
 */
public void applyLocalizedPattern(String pattern) {
    applyPattern(pattern, true);
}