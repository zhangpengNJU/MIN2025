/**
 * Returns the pseudo-randomly initialized or updated secondary seed.
 * Copied from ThreadLocalRandom due to package access restrictions.
 */
static final int nextSecondarySeed() {
    int r;
    Thread t = Thread.currentThread();
    if ((r = UNSAFE.getInt(t, SECONDARY)) != 0) {
        // xorshift
        r ^= r << 13;
        r ^= r >>> 17;
        r ^= r << 5;
    } else if ((r = java.util.concurrent.ThreadLocalRandom.current().nextInt()) == 0)
        // avoid zero
        r = 1;
    UNSAFE.putInt(t, SECONDARY, r);
    return r;
}