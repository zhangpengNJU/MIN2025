// / --------
// / Implementation...
// / --------
/**
 * Return the cache, if it exists, else a dummy empty cache.
 */
private static Entry<?>[] getCacheCarefully(Class<?> type) {
    // racing type.classValueMap{.cacheArray} : null => new Entry[X] <=> new Entry[Y]
    ClassValueMap map = type.classValueMap;
    if (map == null)
        return EMPTY_CACHE;
    Entry<?>[] cache = map.getCache();
    return cache;
// invariant:  returned value is safe to dereference and check for an Entry
}