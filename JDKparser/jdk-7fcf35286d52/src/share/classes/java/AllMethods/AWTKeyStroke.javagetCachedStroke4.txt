private static synchronized AWTKeyStroke getCachedStroke(char keyChar, int keyCode, int modifiers, boolean onKeyRelease) {
    Map<AWTKeyStroke, AWTKeyStroke> cache = (Map) AppContext.getAppContext().get(APP_CONTEXT_CACHE_KEY);
    AWTKeyStroke cacheKey = (AWTKeyStroke) AppContext.getAppContext().get(APP_CONTEXT_KEYSTROKE_KEY);
    if (cache == null) {
        cache = new HashMap<>();
        AppContext.getAppContext().put(APP_CONTEXT_CACHE_KEY, cache);
    }
    if (cacheKey == null) {
        try {
            Class<AWTKeyStroke> clazz = getAWTKeyStrokeClass();
            cacheKey = (AWTKeyStroke) getCtor(clazz).newInstance((Object[]) null);
            AppContext.getAppContext().put(APP_CONTEXT_KEYSTROKE_KEY, cacheKey);
        } catch (InstantiationException e) {
            assert (false);
        } catch (IllegalAccessException e) {
            assert (false);
        } catch (InvocationTargetException e) {
            assert (false);
        }
    }
    cacheKey.keyChar = keyChar;
    cacheKey.keyCode = keyCode;
    cacheKey.modifiers = mapNewModifiers(mapOldModifiers(modifiers));
    cacheKey.onKeyRelease = onKeyRelease;
    AWTKeyStroke stroke = (AWTKeyStroke) cache.get(cacheKey);
    if (stroke == null) {
        stroke = cacheKey;
        cache.put(stroke, stroke);
        AppContext.getAppContext().remove(APP_CONTEXT_KEYSTROKE_KEY);
    }
    return stroke;
}