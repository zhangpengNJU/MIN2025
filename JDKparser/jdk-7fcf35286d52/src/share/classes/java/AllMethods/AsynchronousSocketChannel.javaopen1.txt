/**
 * Opens an asynchronous socket channel.
 *
 * <p> The new channel is created by invoking the {@link
 * AsynchronousChannelProvider#openAsynchronousSocketChannel
 * openAsynchronousSocketChannel} method on the {@link
 * AsynchronousChannelProvider} that created the group. If the group parameter
 * is {@code null} then the resulting channel is created by the system-wide
 * default provider, and bound to the <em>default group</em>.
 *
 * @param   group
 *          The group to which the newly constructed channel should be bound,
 *          or {@code null} for the default group
 *
 * @return  A new asynchronous socket channel
 *
 * @throws  ShutdownChannelGroupException
 *          If the channel group is shutdown
 * @throws  IOException
 *          If an I/O error occurs
 */
public static AsynchronousSocketChannel open(AsynchronousChannelGroup group) throws IOException {
    AsynchronousChannelProvider provider = (group == null) ? AsynchronousChannelProvider.provider() : group.provider();
    return provider.openAsynchronousSocketChannel(group);
}