/**
 * Returns an array of {@code TypeVariable} objects that represent the
 * type variables declared by the generic declaration represented by this
 * {@code GenericDeclaration} object, in declaration order.  Returns an
 * array of length 0 if the underlying generic declaration declares no type
 * variables.
 *
 * @return an array of {@code TypeVariable} objects that represent
 *     the type variables declared by this generic declaration
 * @throws java.lang.reflect.GenericSignatureFormatError if the generic
 *     signature of this generic declaration does not conform to
 *     the format specified in
 *     <cite>The Java&trade; Virtual Machine Specification</cite>
 * @since 1.5
 */
@SuppressWarnings("unchecked")
public TypeVariable<Class<T>>[] getTypeParameters() {
    ClassRepository info = getGenericInfo();
    if (info != null)
        return (TypeVariable<Class<T>>[]) info.getTypeParameters();
    else
        return (TypeVariable<Class<T>>[]) new TypeVariable<?>[0];
}