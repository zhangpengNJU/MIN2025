/**
 * Encodes all remaining bytes from the specified byte buffer into
 * a newly-allocated ByteBuffer using the {@link Base64} encoding
 * scheme.
 *
 * Upon return, the source buffer's position will be updated to
 * its limit; its limit will not have been changed. The returned
 * output buffer's position will be zero and its limit will be the
 * number of resulting encoded bytes.
 *
 * @param   buffer
 *          the source ByteBuffer to encode
 * @return  A newly-allocated byte buffer containing the encoded bytes.
 */
public ByteBuffer encode(ByteBuffer buffer) {
    int len = outLength(buffer.remaining());
    byte[] dst = new byte[len];
    int ret = 0;
    if (buffer.hasArray()) {
        ret = encode0(buffer.array(), buffer.arrayOffset() + buffer.position(), buffer.arrayOffset() + buffer.limit(), dst);
        buffer.position(buffer.limit());
    } else {
        byte[] src = new byte[buffer.remaining()];
        buffer.get(src);
        ret = encode0(src, 0, src.length, dst);
    }
    if (ret != dst.length)
        dst = Arrays.copyOf(dst, ret);
    return ByteBuffer.wrap(dst);
}