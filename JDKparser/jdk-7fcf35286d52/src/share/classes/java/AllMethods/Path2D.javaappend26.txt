/**
 * {@inheritDoc}
 * @since 1.6
 */
public final void append(PathIterator pi, boolean connect) {
    float[] coords = new float[6];
    while (!pi.isDone()) {
        switch(pi.currentSegment(coords)) {
            case SEG_MOVETO:
                if (!connect || numTypes < 1 || numCoords < 1) {
                    moveTo(coords[0], coords[1]);
                    break;
                }
                if (pointTypes[numTypes - 1] != SEG_CLOSE && floatCoords[numCoords - 2] == coords[0] && floatCoords[numCoords - 1] == coords[1]) {
                    // Collapse out initial moveto/lineto
                    break;
                }
                lineTo(coords[0], coords[1]);
                break;
            case SEG_LINETO:
                lineTo(coords[0], coords[1]);
                break;
            case SEG_QUADTO:
                quadTo(coords[0], coords[1], coords[2], coords[3]);
                break;
            case SEG_CUBICTO:
                curveTo(coords[0], coords[1], coords[2], coords[3], coords[4], coords[5]);
                break;
            case SEG_CLOSE:
                closePath();
                break;
        }
        pi.next();
        connect = false;
    }
}