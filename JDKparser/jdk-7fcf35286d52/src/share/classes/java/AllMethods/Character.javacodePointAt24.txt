/**
 * Returns the code point at the given index of the
 * {@code CharSequence}. If the {@code char} value at
 * the given index in the {@code CharSequence} is in the
 * high-surrogate range, the following index is less than the
 * length of the {@code CharSequence}, and the
 * {@code char} value at the following index is in the
 * low-surrogate range, then the supplementary code point
 * corresponding to this surrogate pair is returned. Otherwise,
 * the {@code char} value at the given index is returned.
 *
 * @param seq a sequence of {@code char} values (Unicode code
 * units)
 * @param index the index to the {@code char} values (Unicode
 * code units) in {@code seq} to be converted
 * @return the Unicode code point at the given index
 * @exception NullPointerException if {@code seq} is null.
 * @exception IndexOutOfBoundsException if the value
 * {@code index} is negative or not less than
 * {@link CharSequence#length() seq.length()}.
 * @since  1.5
 */
public static int codePointAt(CharSequence seq, int index) {
    char c1 = seq.charAt(index);
    if (isHighSurrogate(c1) && ++index < seq.length()) {
        char c2 = seq.charAt(index);
        if (isLowSurrogate(c2)) {
            return toCodePoint(c1, c2);
        }
    }
    return c1;
}