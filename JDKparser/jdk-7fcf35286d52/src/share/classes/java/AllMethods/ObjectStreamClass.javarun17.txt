public Void run() {
    if (isEnum) {
        suid = Long.valueOf(0);
        fields = NO_FIELDS;
        return null;
    }
    if (cl.isArray()) {
        fields = NO_FIELDS;
        return null;
    }
    suid = getDeclaredSUID(cl);
    try {
        fields = getSerialFields(cl);
        computeFieldOffsets();
    } catch (InvalidClassException e) {
        serializeEx = deserializeEx = new ExceptionInfo(e.classname, e.getMessage());
        fields = NO_FIELDS;
    }
    if (externalizable) {
        cons = getExternalizableConstructor(cl);
    } else {
        cons = getSerializableConstructor(cl);
        writeObjectMethod = getPrivateMethod(cl, "writeObject", new Class<?>[] { ObjectOutputStream.class }, Void.TYPE);
        readObjectMethod = getPrivateMethod(cl, "readObject", new Class<?>[] { ObjectInputStream.class }, Void.TYPE);
        readObjectNoDataMethod = getPrivateMethod(cl, "readObjectNoData", null, Void.TYPE);
        hasWriteObjectData = (writeObjectMethod != null);
    }
    domains = getProtectionDomains(cons, cl);
    writeReplaceMethod = getInheritableMethod(cl, "writeReplace", null, Object.class);
    readResolveMethod = getInheritableMethod(cl, "readResolve", null, Object.class);
    return null;
}