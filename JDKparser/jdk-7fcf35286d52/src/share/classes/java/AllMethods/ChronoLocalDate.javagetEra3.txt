/**
 * Gets the era, as defined by the chronology.
 * <p>
 * The era is, conceptually, the largest division of the time-line.
 * Most calendar systems have a single epoch dividing the time-line into two eras.
 * However, some have multiple eras, such as one for the reign of each leader.
 * The exact meaning is determined by the {@code Chronology}.
 * <p>
 * All correctly implemented {@code Era} classes are singletons, thus it
 * is valid code to write {@code date.getEra() == SomeChrono.ERA_NAME)}.
 * <p>
 * This default implementation uses {@link Chronology#eraOf(int)}.
 *
 * @return the chronology specific era constant applicable at this date, not null
 */
default Era getEra() {
    return getChronology().eraOf(get(ERA));
}