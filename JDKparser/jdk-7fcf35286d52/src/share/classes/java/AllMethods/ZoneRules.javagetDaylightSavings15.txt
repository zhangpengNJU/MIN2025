/**
 * Gets the amount of daylight savings in use for the specified instant in this zone.
 * <p>
 * This provides access to historic information on how the amount of daylight
 * savings has changed over time.
 * This is the difference between the standard offset and the actual offset.
 * Typically the amount is zero during winter and one hour during summer.
 * Time-zones are second-based, so the nanosecond part of the duration will be zero.
 * <p>
 * This default implementation calculates the duration from the
 * {@link #getOffset(java.time.Instant) actual} and
 * {@link #getStandardOffset(java.time.Instant) standard} offsets.
 *
 * @param instant  the instant to find the daylight savings for, not null, but null
 *  may be ignored if the rules have a single offset for all instants
 * @return the difference between the standard and actual offset, not null
 */
public Duration getDaylightSavings(Instant instant) {
    if (savingsInstantTransitions.length == 0) {
        return Duration.ZERO;
    }
    ZoneOffset standardOffset = getStandardOffset(instant);
    ZoneOffset actualOffset = getOffset(instant);
    return Duration.ofSeconds(actualOffset.getTotalSeconds() - standardOffset.getTotalSeconds());
}