/**
 * Replaces each entry's value with the result of invoking the given
 * function on that entry, in the order entries are returned by an entry
 * set iterator, until all entries have been processed or the function
 * throws an exception.
 *
 * <p>If a security manager is enabled, its {@code checkSecurityAccess}
 * method is called with the string {@code "putProviderProperty."+name},
 * where {@code name} is the provider name, to see if it's ok to set this
 * provider's property values.
 *
 * @throws  SecurityException
 *          if a security manager exists and its {@link
 *          java.lang.SecurityManager#checkSecurityAccess} method
 *          denies access to set property values.
 *
 * @since 1.8
 */
@Override
public synchronized void replaceAll(BiFunction<? super Object, ? super Object, ? extends Object> function) {
    check("putProviderProperty." + name);
    if (debug != null) {
        debug.println("ReplaceAll " + name + " provider property ");
    }
    implReplaceAll(function);
}