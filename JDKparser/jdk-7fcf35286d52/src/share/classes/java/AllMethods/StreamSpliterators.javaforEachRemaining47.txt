@Override
public void forEachRemaining(Consumer<? super T> action) {
    Objects.requireNonNull(action);
    if (sliceOrigin >= fence)
        return;
    if (index >= fence)
        return;
    if (index >= sliceOrigin && (index + s.estimateSize()) <= sliceFence) {
        // The spliterator is contained within the slice
        s.forEachRemaining(action);
        index = fence;
    } else {
        // The spliterator intersects with the slice
        while (sliceOrigin > index) {
            s.tryAdvance(e -> {
            });
            index++;
        }
        // Traverse elements up to the fence
        for (; index < fence; index++) {
            s.tryAdvance(action);
        }
    }
}