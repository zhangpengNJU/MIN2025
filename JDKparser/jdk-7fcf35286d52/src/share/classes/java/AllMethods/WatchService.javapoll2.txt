/**
 * Retrieves and removes the next watch key, waiting if necessary up to the
 * specified wait time if none are yet present.
 *
 * @param   timeout
 *          how to wait before giving up, in units of unit
 * @param   unit
 *          a {@code TimeUnit} determining how to interpret the timeout
 *          parameter
 *
 * @return  the next watch key, or {@code null}
 *
 * @throws  ClosedWatchServiceException
 *          if this watch service is closed, or it is closed while waiting
 *          for the next key
 * @throws  InterruptedException
 *          if interrupted while waiting
 */
WatchKey poll(long timeout, TimeUnit unit) throws InterruptedException;