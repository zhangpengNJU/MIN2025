// -----------------------------------------------------------------------
/**
 * Compares this date to another date.
 * <p>
 * The comparison is primarily based on the date, from earliest to latest.
 * It is "consistent with equals", as defined by {@link Comparable}.
 * <p>
 * If all the dates being compared are instances of {@code LocalDate},
 * then the comparison will be entirely based on the date.
 * If some dates being compared are in different chronologies, then the
 * chronology is also considered, see {@link java.time.chrono.ChronoLocalDate#compareTo}.
 *
 * @param other  the other date to compare to, not null
 * @return the comparator value, negative if less, positive if greater
 */
// override for Javadoc and performance
@Override
public int compareTo(ChronoLocalDate other) {
    if (other instanceof LocalDate) {
        return compareTo0((LocalDate) other);
    }
    return ChronoLocalDate.super.compareTo(other);
}