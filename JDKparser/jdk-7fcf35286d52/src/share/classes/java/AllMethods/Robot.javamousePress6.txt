/**
 * Presses one or more mouse buttons.  The mouse buttons should
 * be released using the {@link #mouseRelease(int)} method.
 *
 * @param buttons the Button mask; a combination of one or more
 * mouse button masks.
 * <p>
 * It is allowed to use only a combination of valid values as a {@code buttons} parameter.
 * A valid combination consists of {@code InputEvent.BUTTON1_DOWN_MASK},
 * {@code InputEvent.BUTTON2_DOWN_MASK}, {@code InputEvent.BUTTON3_DOWN_MASK}
 * and values returned by the
 * {@link InputEvent#getMaskForButton(int) InputEvent.getMaskForButton(button)} method.
 *
 * The valid combination also depends on a
 * {@link Toolkit#areExtraMouseButtonsEnabled() Toolkit.areExtraMouseButtonsEnabled()} value as follows:
 * <ul>
 * <li> If support for extended mouse buttons is
 * {@link Toolkit#areExtraMouseButtonsEnabled() disabled} by Java
 * then it is allowed to use only the following standard button masks:
 * {@code InputEvent.BUTTON1_DOWN_MASK}, {@code InputEvent.BUTTON2_DOWN_MASK},
 * {@code InputEvent.BUTTON3_DOWN_MASK}.
 * <li> If support for extended mouse buttons is
 * {@link Toolkit#areExtraMouseButtonsEnabled() enabled} by Java
 * then it is allowed to use the standard button masks
 * and masks for existing extended mouse buttons, if the mouse has more then three buttons.
 * In that way, it is allowed to use the button masks corresponding to the buttons
 * in the range from 1 to {@link java.awt.MouseInfo#getNumberOfButtons() MouseInfo.getNumberOfButtons()}.
 * <br>
 * It is recommended to use the {@link InputEvent#getMaskForButton(int) InputEvent.getMaskForButton(button)}
 * method to obtain the mask for any mouse button by its number.
 * </ul>
 * <p>
 * The following standard button masks are also accepted:
 * <ul>
 * <li>{@code InputEvent.BUTTON1_MASK}
 * <li>{@code InputEvent.BUTTON2_MASK}
 * <li>{@code InputEvent.BUTTON3_MASK}
 * </ul>
 * However, it is recommended to use {@code InputEvent.BUTTON1_DOWN_MASK},
 * {@code InputEvent.BUTTON2_DOWN_MASK},  {@code InputEvent.BUTTON3_DOWN_MASK} instead.
 * Either extended {@code _DOWN_MASK} or old {@code _MASK} values
 * should be used, but both those models should not be mixed.
 * @throws IllegalArgumentException if the {@code buttons} mask contains the mask for extra mouse button
 *         and support for extended mouse buttons is {@link Toolkit#areExtraMouseButtonsEnabled() disabled} by Java
 * @throws IllegalArgumentException if the {@code buttons} mask contains the mask for extra mouse button
 *         that does not exist on the mouse and support for extended mouse buttons is {@link Toolkit#areExtraMouseButtonsEnabled() enabled} by Java
 * @see #mouseRelease(int)
 * @see InputEvent#getMaskForButton(int)
 * @see Toolkit#areExtraMouseButtonsEnabled()
 * @see java.awt.MouseInfo#getNumberOfButtons()
 * @see java.awt.event.MouseEvent
 */
public synchronized void mousePress(int buttons) {
    checkButtonsArgument(buttons);
    peer.mousePress(buttons);
    afterEvent();
}