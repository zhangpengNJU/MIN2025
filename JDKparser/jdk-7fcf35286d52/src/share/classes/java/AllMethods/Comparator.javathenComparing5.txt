/**
 * Returns a lexicographic-order comparator with a function that
 * extracts a {@code Comparable} sort key.
 *
 * @implSpec This default implementation behaves as if {@code
 *           thenComparing(comparing(keyExtractor))}.
 *
 * @param  <U>  the type of the {@link Comparable} sort key
 * @param  keyExtractor the function used to extract the {@link
 *         Comparable} sort key
 * @return a lexicographic-order comparator composed of this and then the
 *         {@link Comparable} sort key.
 * @throws NullPointerException if the argument is null.
 * @see #comparing(Function)
 * @see #thenComparing(Comparator)
 * @since 1.8
 */
default <U extends Comparable<? super U>> Comparator<T> thenComparing(Function<? super T, ? extends U> keyExtractor) {
    return thenComparing(comparing(keyExtractor));
}