/**
 * Returns the color/alpha components of the pixel in the default
 * RGB color model format.  A color conversion is done if necessary.
 * The pixel value is specified as an <code>int</code>.
 * The returned value is in a non pre-multiplied format.  Thus, if
 * the alpha is premultiplied, this method divides it out of the
 * color components.  If the alpha value is 0, for example, the color
 * values are each 0.
 * @param pixel the specified pixel
 * @return the RGB value of the color/alpha components of the specified
 *         pixel.
 * @see ColorModel#getRGBdefault
 */
final public int getRGB(int pixel) {
    if (is_sRGB || is_LinearRGB) {
        return (getAlpha(pixel) << 24) | (getRed(pixel) << 16) | (getGreen(pixel) << 8) | (getBlue(pixel) << 0);
    }
    float[] rgb = getDefaultRGBComponents(pixel);
    return (getAlpha(pixel) << 24) | (((int) (rgb[0] * 255.0f + 0.5f)) << 16) | (((int) (rgb[1] * 255.0f + 0.5f)) << 8) | (((int) (rgb[2] * 255.0f + 0.5f)) << 0);
}