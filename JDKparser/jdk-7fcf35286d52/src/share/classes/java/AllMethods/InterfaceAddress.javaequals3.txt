/**
 * Compares this object against the specified object.
 * The result is {@code true} if and only if the argument is
 * not {@code null} and it represents the same interface address as
 * this object.
 * <p>
 * Two instances of {@code InterfaceAddress} represent the same
 * address if the InetAddress, the prefix length and the broadcast are
 * the same for both.
 *
 * @param   obj   the object to compare against.
 * @return  {@code true} if the objects are the same;
 *          {@code false} otherwise.
 * @see     java.net.InterfaceAddress#hashCode()
 */
public boolean equals(Object obj) {
    if (!(obj instanceof InterfaceAddress)) {
        return false;
    }
    InterfaceAddress cmp = (InterfaceAddress) obj;
    if (!(address == null ? cmp.address == null : address.equals(cmp.address)))
        return false;
    if (!(broadcast == null ? cmp.broadcast == null : broadcast.equals(cmp.broadcast)))
        return false;
    if (maskLength != cmp.maskLength)
        return false;
    return true;
}