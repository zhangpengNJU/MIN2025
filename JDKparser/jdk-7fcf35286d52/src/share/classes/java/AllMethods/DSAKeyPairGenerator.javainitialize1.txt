/**
 * Initializes the key pair generator for a given modulus length
 * (instead of parameters), and an optional SecureRandom bit source.
 * If a SecureRandom bit source is needed but not supplied, i.e.
 * null, a default SecureRandom instance will be used.
 *
 * <p>If {@code genParams} is true, this method generates new
 * p, q and g parameters. If it is false, the method uses precomputed
 * parameters for the modulus length requested. If there are no
 * precomputed parameters for that modulus length, an exception will be
 * thrown. It is guaranteed that there will always be
 * default parameters for modulus lengths of 512 and 1024 bits.
 *
 * @param modlen the modulus length in bits. Valid values are any
 * multiple of 64 between 512 and 1024, inclusive, 2048, and 3072.
 *
 * @param random the random bit source to use to generate key bits;
 * can be null.
 *
 * @param genParams whether or not to generate new parameters for
 * the modulus length requested.
 *
 * @exception InvalidParameterException if {@code modlen} is
 * invalid, or unsupported, or if {@code genParams} is false and there
 * are no precomputed parameters for the requested modulus length.
 */
public void initialize(int modlen, boolean genParams, SecureRandom random) throws InvalidParameterException;