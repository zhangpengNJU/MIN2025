/**
 * Sets the specified logger to the specified new
 * {@linkplain java.util.logging.Logger#setLevel level}.
 * If the {@code levelName} is not {@code null}, the level
 * of the specified logger is set to the parsed
 * {@link java.util.logging.Level Level}
 * matching the {@code levelName}.
 * If the {@code levelName} is {@code null}, the level
 * of the specified logger is set to {@code null} and
 * the effective level of the logger is inherited from
 * its nearest ancestor with a specific (non-null) level value.
 *
 * @param loggerName The name of the {@code Logger} to be set.
 *                   Must be non-null.
 * @param levelName The name of the level to set on the specified logger,
 *                 or  {@code null} if setting the level to inherit
 *                 from its nearest ancestor.
 *
 * @throws IllegalArgumentException if the specified logger
 * does not exist, or {@code levelName} is not a valid level name.
 *
 * @throws SecurityException if a security manager exists and if
 * the caller does not have LoggingPermission("control").
 *
 * @see java.util.logging.Logger#setLevel
 */
void setLoggerLevel(String loggerName, String levelName);