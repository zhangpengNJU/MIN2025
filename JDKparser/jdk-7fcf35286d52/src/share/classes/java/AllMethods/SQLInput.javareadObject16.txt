// ================================================================
// Methods for reading items of SQL user-defined types from the stream.
// ================================================================
/**
 * Reads the datum at the head of the stream and returns it as an
 * <code>Object</code> in the Java programming language.  The
 * actual type of the object returned is determined by the default type
 * mapping, and any customizations present in this stream's type map.
 *
 * <P>A type map is registered with the stream by the JDBC driver before the
 * stream is passed to the application.
 *
 * <P>When the datum at the head of the stream is an SQL <code>NULL</code>,
 * the method returns <code>null</code>.  If the datum is an SQL structured or distinct
 * type, it determines the SQL type of the datum at the head of the stream.
 * If the stream's type map has an entry for that SQL type, the driver
 * constructs an object of the appropriate class and calls the method
 * <code>SQLData.readSQL</code> on that object, which reads additional data from the
 * stream, using the protocol described for that method.
 *
 * @return the datum at the head of the stream as an <code>Object</code> in the
 * Java programming language;<code>null</code> if the datum is SQL <code>NULL</code>
 * @exception SQLException if a database access error occurs
 * @exception SQLFeatureNotSupportedException if the JDBC driver does not support
 * this method
 * @since 1.2
 */
Object readObject() throws SQLException;