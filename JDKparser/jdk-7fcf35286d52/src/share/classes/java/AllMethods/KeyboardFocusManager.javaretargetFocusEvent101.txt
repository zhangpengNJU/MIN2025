static AWTEvent retargetFocusEvent(AWTEvent event) {
    if (clearingCurrentLightweightRequests) {
        return event;
    }
    KeyboardFocusManager manager = getCurrentKeyboardFocusManager();
    if (focusLog.isLoggable(PlatformLogger.Level.FINER)) {
        if (event instanceof FocusEvent || event instanceof WindowEvent) {
            focusLog.finer(">>> {0}", String.valueOf(event));
        }
        if (focusLog.isLoggable(PlatformLogger.Level.FINER) && event instanceof KeyEvent) {
            focusLog.finer("    focus owner is {0}", String.valueOf(manager.getGlobalFocusOwner()));
            focusLog.finer(">>> {0}", String.valueOf(event));
        }
    }
    synchronized (heavyweightRequests) {
        /*
             * This code handles FOCUS_LOST event which is generated by
             * DefaultKeyboardFocusManager for FOCUS_GAINED.
             *
             * This code based on knowledge of DefaultKeyboardFocusManager's
             * implementation and might be not applicable for another
             * KeyboardFocusManager.
             *
             * Fix for 4472032
             */
        if (newFocusOwner != null && event.getID() == FocusEvent.FOCUS_LOST) {
            FocusEvent fe = (FocusEvent) event;
            if (manager.getGlobalFocusOwner() == fe.getComponent() && fe.getOppositeComponent() == newFocusOwner) {
                newFocusOwner = null;
                return event;
            }
        }
    }
    processCurrentLightweightRequests();
    switch(event.getID()) {
        case FocusEvent.FOCUS_GAINED:
            {
                event = retargetFocusGained((FocusEvent) event);
                break;
            }
        case FocusEvent.FOCUS_LOST:
            {
                event = retargetFocusLost((FocusEvent) event);
                break;
            }
        default:
    }
    return event;
}