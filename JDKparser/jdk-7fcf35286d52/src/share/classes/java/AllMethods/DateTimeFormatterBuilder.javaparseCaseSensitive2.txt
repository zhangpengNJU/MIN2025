// -----------------------------------------------------------------------
/**
 * Changes the parse style to be case sensitive for the remainder of the formatter.
 * <p>
 * Parsing can be case sensitive or insensitive - by default it is case sensitive.
 * This method allows the case sensitivity setting of parsing to be changed.
 * <p>
 * Calling this method changes the state of the builder such that all
 * subsequent builder method calls will parse text in case sensitive mode.
 * See {@link #parseCaseInsensitive} for the opposite setting.
 * The parse case sensitive/insensitive methods may be called at any point
 * in the builder, thus the parser can swap between case parsing modes
 * multiple times during the parse.
 * <p>
 * Since the default is case sensitive, this method should only be used after
 * a previous call to {@code #parseCaseInsensitive}.
 *
 * @return this, for chaining, not null
 */
public DateTimeFormatterBuilder parseCaseSensitive() {
    appendInternal(SettingsParser.SENSITIVE);
    return this;
}