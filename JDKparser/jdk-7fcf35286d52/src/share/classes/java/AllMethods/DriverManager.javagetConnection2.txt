// ---------------------------------------------------------------
/**
 *  Attempts to establish a connection to the given database URL.
 *  The <code>DriverManager</code> attempts to select an appropriate driver from
 *  the set of registered JDBC drivers.
 * <p>
 *  <B>Note:</B> If a property is specified as part of the {@code url} and
 *  is also specified in the {@code Properties} object, it is
 *  implementation-defined as to which value will take precedence.
 *  For maximum portability, an application should only specify a
 *  property once.
 *
 *  @param url a database url of the form
 *  <code> jdbc:<em>subprotocol</em>:<em>subname</em></code>
 *  @param info a list of arbitrary string tag/value pairs as
 *  connection arguments; normally at least a "user" and
 *  "password" property should be included
 *  @return a Connection to the URL
 *  @exception SQLException if a database access error occurs or the url is
 *  {@code null}
 *  @throws SQLTimeoutException  when the driver has determined that the
 *  timeout value specified by the {@code setLoginTimeout} method
 *  has been exceeded and has at least tried to cancel the
 *  current database connection attempt
 */
@CallerSensitive
public static Connection getConnection(String url, java.util.Properties info) throws SQLException {
    return (getConnection(url, info, Reflection.getCallerClass()));
}