/**
 * Set the activation system for the VM.  The activation system can
 * only be set it if no group is currently active. If the activation
 * system is not set via this call, then the <code>getSystem</code>
 * method attempts to obtain a reference to the
 * <code>ActivationSystem</code> by looking up the name
 * "java.rmi.activation.ActivationSystem" in the Activator's
 * registry. By default, the port number used to look up the
 * activation system is defined by
 * <code>ActivationSystem.SYSTEM_PORT</code>. This port can be overridden
 * by setting the property <code>java.rmi.activation.port</code>.
 *
 * <p>If there is a security manager, this method first
 * calls the security manager's <code>checkSetFactory</code> method.
 * This could result in a SecurityException.
 *
 * @param system remote reference to the <code>ActivationSystem</code>
 * @exception ActivationException if activation system is already set
 * @exception SecurityException if permission to set the activation system is denied.
 * (Note: The default implementation of the security manager
 * <code>checkSetFactory</code>
 * method requires the RuntimePermission "setFactory")
 * @exception UnsupportedOperationException if and only if activation is
 * not supported by this implementation
 * @see #getSystem
 * @see SecurityManager#checkSetFactory
 * @since 1.2
 */
public static synchronized void setSystem(ActivationSystem system) throws ActivationException {
    SecurityManager security = System.getSecurityManager();
    if (security != null)
        security.checkSetFactory();
    if (currSystem != null)
        throw new ActivationException("activation system already set");
    currSystem = system;
}