/**
 * Returns an estimate of the number of bytes that can be read (or
 * skipped over) from the current underlying input stream without
 * blocking by the next invocation of a method for the current
 * underlying input stream. The next invocation might be
 * the same thread or another thread.  A single read or skip of this
 * many bytes will not block, but may read or skip fewer bytes.
 * <p>
 * This method simply calls {@code available} of the current underlying
 * input stream and returns the result.
 *
 * @return an estimate of the number of bytes that can be read (or
 *         skipped over) from the current underlying input stream
 *         without blocking or {@code 0} if this input stream
 *         has been closed by invoking its {@link #close()} method
 * @exception  IOException  if an I/O error occurs.
 *
 * @since   JDK1.1
 */
public int available() throws IOException {
    if (in == null) {
        // no way to signal EOF from available()
        return 0;
    }
    return in.available();
}