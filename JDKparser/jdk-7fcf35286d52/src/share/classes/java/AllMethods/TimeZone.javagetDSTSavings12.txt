/**
 * Returns the amount of time to be added to local standard time
 * to get local wall clock time.
 *
 * <p>The default implementation returns 3600000 milliseconds
 * (i.e., one hour) if a call to {@link #useDaylightTime()}
 * returns {@code true}. Otherwise, 0 (zero) is returned.
 *
 * <p>If an underlying {@code TimeZone} implementation subclass
 * supports historical and future Daylight Saving Time schedule
 * changes, this method returns the amount of saving time of the
 * last known Daylight Saving Time rule that can be a future
 * prediction.
 *
 * <p>If the amount of saving time at any given time stamp is
 * required, construct a {@link Calendar} with this {@code
 * TimeZone} and the time stamp, and call {@link Calendar#get(int)
 * Calendar.get}{@code (}{@link Calendar#DST_OFFSET}{@code )}.
 *
 * @return the amount of saving time in milliseconds
 * @since 1.4
 * @see #inDaylightTime(Date)
 * @see #getOffset(long)
 * @see #getOffset(int,int,int,int,int,int)
 * @see Calendar#ZONE_OFFSET
 */
public int getDSTSavings() {
    if (useDaylightTime()) {
        return 3600000;
    }
    return 0;
}