/**
 * Appends the specified {@code StringBuffer} to this sequence.
 * <p>
 * The characters of the {@code StringBuffer} argument are appended,
 * in order, to this sequence, increasing the
 * length of this sequence by the length of the argument.
 * If {@code sb} is {@code null}, then the four characters
 * {@code "null"} are appended to this sequence.
 * <p>
 * Let <i>n</i> be the length of this character sequence just prior to
 * execution of the {@code append} method. Then the character at index
 * <i>k</i> in the new character sequence is equal to the character at
 * index <i>k</i> in the old character sequence, if <i>k</i> is less than
 * <i>n</i>; otherwise, it is equal to the character at index <i>k-n</i>
 * in the argument {@code sb}.
 *
 * @param   sb   the {@code StringBuffer} to append.
 * @return  a reference to this object.
 */
public StringBuilder append(StringBuffer sb) {
    super.append(sb);
    return this;
}