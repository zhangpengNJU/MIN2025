/**
 * Returns the default keystore type as specified by the
 * {@code keystore.type} security property, or the string
 * {@literal "jks"} (acronym for {@literal "Java keystore"})
 * if no such property exists.
 *
 * <p>The default keystore type can be used by applications that do not
 * want to use a hard-coded keystore type when calling one of the
 * {@code getInstance} methods, and want to provide a default keystore
 * type in case a user does not specify its own.
 *
 * <p>The default keystore type can be changed by setting the value of the
 * {@code keystore.type} security property to the desired keystore type.
 *
 * @return the default keystore type as specified by the
 * {@code keystore.type} security property, or the string {@literal "jks"}
 * if no such property exists.
 * @see java.security.Security security properties
 */
public final static String getDefaultType() {
    String kstype;
    kstype = AccessController.doPrivileged(new PrivilegedAction<String>() {

        public String run() {
            return Security.getProperty(KEYSTORE_TYPE);
        }
    });
    if (kstype == null) {
        kstype = "jks";
    }
    return kstype;
}