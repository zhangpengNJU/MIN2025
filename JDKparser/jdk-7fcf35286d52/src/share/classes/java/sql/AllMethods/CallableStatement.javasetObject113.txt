// ------------------------- JDBC 4.2 -----------------------------------
/**
 *  <p>Sets the value of the designated parameter with the given object.
 *
 *  If the second argument is an {@code InputStream} then the stream
 *  must contain the number of bytes specified by scaleOrLength.
 *  If the second argument is a {@code Reader} then the reader must
 *  contain the number of characters specified
 *  by scaleOrLength. If these conditions are not true the driver
 *  will generate a
 *  {@code SQLException} when the prepared statement is executed.
 *
 *  <p>The given Java object will be converted to the given targetSqlType
 *  before being sent to the database.
 *
 *  If the object has a custom mapping (is of a class implementing the
 *  interface {@code SQLData}),
 *  the JDBC driver should call the method {@code SQLData.writeSQL} to
 *  write it to the SQL data stream.
 *  If, on the other hand, the object is of a class implementing
 *  {@code Ref}, {@code Blob}, {@code Clob},  {@code NClob},
 *   {@code Struct}, {@code java.net.URL},
 *  or {@code Array}, the driver should pass it to the database as a
 *  value of the corresponding SQL type.
 *
 *  <p>Note that this method may be used to pass database-specific
 *  abstract data types.
 * <P>
 *  The default implementation will throw {@code SQLFeatureNotSupportedException}
 *
 *  @param parameterName the name of the parameter
 *  @param x the object containing the input parameter value
 *  @param targetSqlType the SQL type to be
 *  sent to the database. The scale argument may further qualify this type.
 *  @param scaleOrLength for {@code java.sql.JDBCType.DECIMAL}
 *           or {@code java.sql.JDBCType.NUMERIC types},
 *           this is the number of digits after the decimal point. For
 *           Java Object types {@code InputStream} and {@code Reader},
 *           this is the length
 *           of the data in the stream or reader.  For all other types,
 *           this value will be ignored.
 *  @exception SQLException if parameterName does not correspond to a named
 *  parameter; if a database access error occurs
 *  or this method is called on a closed {@code CallableStatement}  or
 *             if the Java Object specified by x is an InputStream
 *             or Reader object and the value of the scale parameter is less
 *             than zero
 *  @exception SQLFeatureNotSupportedException if
 *  the JDBC driver does not support the specified targetSqlType
 *  @see JDBCType
 *  @see SQLType
 *
 *  @since 1.8
 */
default void setObject(String parameterName, Object x, SQLType targetSqlType, int scaleOrLength) throws SQLException {
    throw new SQLFeatureNotSupportedException("setObject not implemented");
}