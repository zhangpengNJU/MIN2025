/**
 * Retrieves a description of the given table's indices and statistics. They are
 * ordered by NON_UNIQUE, TYPE, INDEX_NAME, and ORDINAL_POSITION.
 *
 * <P>Each index column description has the following columns:
 *  <OL>
 *  <LI><B>TABLE_CAT</B> String {@code =>} table catalog (may be <code>null</code>)
 *  <LI><B>TABLE_SCHEM</B> String {@code =>} table schema (may be <code>null</code>)
 *  <LI><B>TABLE_NAME</B> String {@code =>} table name
 *  <LI><B>NON_UNIQUE</B> boolean {@code =>} Can index values be non-unique.
 *      false when TYPE is tableIndexStatistic
 *  <LI><B>INDEX_QUALIFIER</B> String {@code =>} index catalog (may be <code>null</code>);
 *      <code>null</code> when TYPE is tableIndexStatistic
 *  <LI><B>INDEX_NAME</B> String {@code =>} index name; <code>null</code> when TYPE is
 *      tableIndexStatistic
 *  <LI><B>TYPE</B> short {@code =>} index type:
 *      <UL>
 *      <LI> tableIndexStatistic - this identifies table statistics that are
 *           returned in conjuction with a table's index descriptions
 *      <LI> tableIndexClustered - this is a clustered index
 *      <LI> tableIndexHashed - this is a hashed index
 *      <LI> tableIndexOther - this is some other style of index
 *      </UL>
 *  <LI><B>ORDINAL_POSITION</B> short {@code =>} column sequence number
 *      within index; zero when TYPE is tableIndexStatistic
 *  <LI><B>COLUMN_NAME</B> String {@code =>} column name; <code>null</code> when TYPE is
 *      tableIndexStatistic
 *  <LI><B>ASC_OR_DESC</B> String {@code =>} column sort sequence, "A" {@code =>} ascending,
 *      "D" {@code =>} descending, may be <code>null</code> if sort sequence is not supported;
 *      <code>null</code> when TYPE is tableIndexStatistic
 *  <LI><B>CARDINALITY</B> long {@code =>} When TYPE is tableIndexStatistic, then
 *      this is the number of rows in the table; otherwise, it is the
 *      number of unique values in the index.
 *  <LI><B>PAGES</B> long {@code =>} When TYPE is  tableIndexStatisic then
 *      this is the number of pages used for the table, otherwise it
 *      is the number of pages used for the current index.
 *  <LI><B>FILTER_CONDITION</B> String {@code =>} Filter condition, if any.
 *      (may be <code>null</code>)
 *  </OL>
 *
 * @param catalog a catalog name; must match the catalog name as it
 *        is stored in this database; "" retrieves those without a catalog;
 *        <code>null</code> means that the catalog name should not be used to narrow
 *        the search
 * @param schema a schema name; must match the schema name
 *        as it is stored in this database; "" retrieves those without a schema;
 *        <code>null</code> means that the schema name should not be used to narrow
 *        the search
 * @param table a table name; must match the table name as it is stored
 *        in this database
 * @param unique when true, return only indices for unique values;
 *     when false, return indices regardless of whether unique or not
 * @param approximate when true, result is allowed to reflect approximate
 *     or out of data values; when false, results are requested to be
 *     accurate
 * @return <code>ResultSet</code> - each row is an index column description
 * @exception SQLException if a database access error occurs
 */
ResultSet getIndexInfo(String catalog, String schema, String table, boolean unique, boolean approximate) throws SQLException;