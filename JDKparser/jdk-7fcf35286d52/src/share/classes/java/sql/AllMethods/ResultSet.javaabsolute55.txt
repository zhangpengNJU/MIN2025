/**
 * Moves the cursor to the given row number in
 * this <code>ResultSet</code> object.
 *
 * <p>If the row number is positive, the cursor moves to
 * the given row number with respect to the
 * beginning of the result set.  The first row is row 1, the second
 * is row 2, and so on.
 *
 * <p>If the given row number is negative, the cursor moves to
 * an absolute row position with respect to
 * the end of the result set.  For example, calling the method
 * <code>absolute(-1)</code> positions the
 * cursor on the last row; calling the method <code>absolute(-2)</code>
 * moves the cursor to the next-to-last row, and so on.
 *
 * <p>If the row number specified is zero, the cursor is moved to
 * before the first row.
 *
 * <p>An attempt to position the cursor beyond the first/last row in
 * the result set leaves the cursor before the first row or after
 * the last row.
 *
 * <p><B>Note:</B> Calling <code>absolute(1)</code> is the same
 * as calling <code>first()</code>. Calling <code>absolute(-1)</code>
 * is the same as calling <code>last()</code>.
 *
 * @param row the number of the row to which the cursor should move.
 *        A value of zero indicates that the cursor will be positioned
 *        before the first row; a positive number indicates the row number
 *        counting from the beginning of the result set; a negative number
 *        indicates the row number counting from the end of the result set
 * @return <code>true</code> if the cursor is moved to a position in this
 * <code>ResultSet</code> object;
 * <code>false</code> if the cursor is before the first row or after the
 * last row
 * @exception SQLException if a database access error
 * occurs; this method is called on a closed result set
 * or the result set type is <code>TYPE_FORWARD_ONLY</code>
 * @exception SQLFeatureNotSupportedException if the JDBC driver does not support
 * this method
 * @since 1.2
 */
boolean absolute(int row) throws SQLException;