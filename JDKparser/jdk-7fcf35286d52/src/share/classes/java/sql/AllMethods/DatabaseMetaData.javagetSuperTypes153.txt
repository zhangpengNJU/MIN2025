/**
 * Retrieves a description of the user-defined type (UDT) hierarchies defined in a
 * particular schema in this database. Only the immediate super type/
 * sub type relationship is modeled.
 * <P>
 * Only supertype information for UDTs matching the catalog,
 * schema, and type name is returned. The type name parameter
 * may be a fully-qualified name. When the UDT name supplied is a
 * fully-qualified name, the catalog and schemaPattern parameters are
 * ignored.
 * <P>
 * If a UDT does not have a direct super type, it is not listed here.
 * A row of the <code>ResultSet</code> object returned by this method
 * describes the designated UDT and a direct supertype. A row has the following
 * columns:
 *  <OL>
 *  <LI><B>TYPE_CAT</B> String {@code =>} the UDT's catalog (may be <code>null</code>)
 *  <LI><B>TYPE_SCHEM</B> String {@code =>} UDT's schema (may be <code>null</code>)
 *  <LI><B>TYPE_NAME</B> String {@code =>} type name of the UDT
 *  <LI><B>SUPERTYPE_CAT</B> String {@code =>} the direct super type's catalog
 *                           (may be <code>null</code>)
 *  <LI><B>SUPERTYPE_SCHEM</B> String {@code =>} the direct super type's schema
 *                             (may be <code>null</code>)
 *  <LI><B>SUPERTYPE_NAME</B> String {@code =>} the direct super type's name
 *  </OL>
 *
 * <P><B>Note:</B> If the driver does not support type hierarchies, an
 * empty result set is returned.
 *
 * @param catalog a catalog name; "" retrieves those without a catalog;
 *        <code>null</code> means drop catalog name from the selection criteria
 * @param schemaPattern a schema name pattern; "" retrieves those
 *        without a schema
 * @param typeNamePattern a UDT name pattern; may be a fully-qualified
 *        name
 * @return a <code>ResultSet</code> object in which a row gives information
 *         about the designated UDT
 * @throws SQLException if a database access error occurs
 * @see #getSearchStringEscape
 * @since 1.4
 */
ResultSet getSuperTypes(String catalog, String schemaPattern, String typeNamePattern) throws SQLException;