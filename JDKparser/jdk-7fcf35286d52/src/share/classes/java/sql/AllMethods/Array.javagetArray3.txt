/**
 * Retrieves the contents of the SQL <code>ARRAY</code> value designated by this
 * <code>Array</code> object.
 * This method uses
 * the specified <code>map</code> for type map customizations
 * unless the base type of the array does not match a user-defined
 * type in <code>map</code>, in which case it
 * uses the standard mapping. This version of the method
 * <code>getArray</code> uses either the given type map or the standard mapping;
 * it never uses the type map associated with the connection.
 * <p>
 * <strong>Note:</strong> When <code>getArray</code> is used to materialize
 * a base type that maps to a primitive data type, then it is
 * implementation-defined whether the array returned is an array of
 * that primitive data type or an array of <code>Object</code>.
 *
 * @param map a <code>java.util.Map</code> object that contains mappings
 *            of SQL type names to classes in the Java programming language
 * @return an array in the Java programming language that contains the ordered
 *         elements of the SQL array designated by this object
 * @exception SQLException if an error occurs while attempting to
 *                         access the array
 * @exception SQLFeatureNotSupportedException if the JDBC driver does not support
 * this method
 * @since 1.2
 */
Object getArray(java.util.Map<String, Class<?>> map) throws SQLException;