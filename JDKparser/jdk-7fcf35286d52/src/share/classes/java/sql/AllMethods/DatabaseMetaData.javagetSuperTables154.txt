/**
 * Retrieves a description of the table hierarchies defined in a particular
 * schema in this database.
 *
 * <P>Only supertable information for tables matching the catalog, schema
 * and table name are returned. The table name parameter may be a fully-
 * qualified name, in which case, the catalog and schemaPattern parameters
 * are ignored. If a table does not have a super table, it is not listed here.
 * Supertables have to be defined in the same catalog and schema as the
 * sub tables. Therefore, the type description does not need to include
 * this information for the supertable.
 *
 * <P>Each type description has the following columns:
 *  <OL>
 *  <LI><B>TABLE_CAT</B> String {@code =>} the type's catalog (may be <code>null</code>)
 *  <LI><B>TABLE_SCHEM</B> String {@code =>} type's schema (may be <code>null</code>)
 *  <LI><B>TABLE_NAME</B> String {@code =>} type name
 *  <LI><B>SUPERTABLE_NAME</B> String {@code =>} the direct super type's name
 *  </OL>
 *
 * <P><B>Note:</B> If the driver does not support type hierarchies, an
 * empty result set is returned.
 *
 * @param catalog a catalog name; "" retrieves those without a catalog;
 *        <code>null</code> means drop catalog name from the selection criteria
 * @param schemaPattern a schema name pattern; "" retrieves those
 *        without a schema
 * @param tableNamePattern a table name pattern; may be a fully-qualified
 *        name
 * @return a <code>ResultSet</code> object in which each row is a type description
 * @throws SQLException if a database access error occurs
 * @see #getSearchStringEscape
 * @since 1.4
 */
ResultSet getSuperTables(String catalog, String schemaPattern, String tableNamePattern) throws SQLException;