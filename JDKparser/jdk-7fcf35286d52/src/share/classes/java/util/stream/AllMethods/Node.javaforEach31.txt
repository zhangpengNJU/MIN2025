/**
 * {@inheritDoc}
 *
 * @param consumer A {@code Consumer} that is to be invoked with each
 *        element in this {@code Node}.  If this is an
 *        {@code DoubleConsumer}, it is cast to {@code DoubleConsumer}
 *        so the elements may be processed without boxing.
 */
@Override
default void forEach(Consumer<? super Double> consumer) {
    if (consumer instanceof DoubleConsumer) {
        forEach((DoubleConsumer) consumer);
    } else {
        if (Tripwire.ENABLED)
            Tripwire.trip(getClass(), "{0} calling Node.OfLong.forEachRemaining(Consumer)");
        spliterator().forEachRemaining(consumer);
    }
}