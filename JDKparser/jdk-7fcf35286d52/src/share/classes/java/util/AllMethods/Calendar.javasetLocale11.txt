/**
 * Sets the locale parameter to the given {@code locale}. If no locale
 * is given to this {@code Calendar.Builder}, the {@linkplain
 * Locale#getDefault(Locale.Category) default <code>Locale</code>}
 * for {@link Locale.Category#FORMAT} will be used.
 *
 * <p>If no calendar type is explicitly given by a call to the
 * {@link #setCalendarType(String) setCalendarType} method,
 * the {@code Locale} value is used to determine what type of
 * {@code Calendar} to be built.
 *
 * <p>If no week definition parameters are explicitly given by a call to
 * the {@link #setWeekDefinition(int,int) setWeekDefinition} method, the
 * {@code Locale}'s default values are used.
 *
 * @param locale the {@link Locale}
 * @throws NullPointerException if {@code locale} is {@code null}
 * @return this {@code Calendar.Builder}
 * @see Calendar#getInstance(Locale)
 */
public Builder setLocale(Locale locale) {
    if (locale == null) {
        throw new NullPointerException();
    }
    this.locale = locale;
    return this;
}