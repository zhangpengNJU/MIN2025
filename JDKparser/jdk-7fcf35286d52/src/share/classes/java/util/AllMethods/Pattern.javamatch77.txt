boolean match(Matcher matcher, int i, CharSequence seq) {
    if (i > matcher.to - minLength) {
        matcher.hitEnd = true;
        return false;
    }
    int guard = matcher.to - minLength;
    while (i <= guard) {
        // if ((ret = next.match(matcher, i, seq)) || i == guard)
        if (next.match(matcher, i, seq)) {
            matcher.first = i;
            matcher.groups[0] = matcher.first;
            matcher.groups[1] = matcher.last;
            return true;
        }
        if (i == guard)
            break;
        // Optimization to move to the next character. This is
        // faster than countChars(seq, i, 1).
        if (Character.isHighSurrogate(seq.charAt(i++))) {
            if (i < seq.length() && Character.isLowSurrogate(seq.charAt(i))) {
                i++;
            }
        }
    }
    matcher.hitEnd = true;
    return false;
}