/**
 * Returns a name for the currency that is appropriate for display to the
 * user.  The default implementation returns null.
 *
 * @param currencyCode the ISO 4217 currency code, which
 *     consists of three upper-case letters between 'A' (U+0041) and
 *     'Z' (U+005A)
 * @param locale the desired locale
 * @return the name for the currency that is appropriate for display to the
 *     user, or null if the name is not available for the locale
 * @exception IllegalArgumentException if <code>currencyCode</code> is not in
 *     the form of three upper-case letters, or <code>locale</code> isn't
 *     one of the locales returned from
 *     {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
 *     getAvailableLocales()}.
 * @exception NullPointerException if <code>currencyCode</code> or
 *     <code>locale</code> is <code>null</code>
 * @since 1.7
 */
public String getDisplayName(String currencyCode, Locale locale) {
    if (currencyCode == null || locale == null) {
        throw new NullPointerException();
    }
    // Check whether the currencyCode is valid
    char[] charray = currencyCode.toCharArray();
    if (charray.length != 3) {
        throw new IllegalArgumentException("The currencyCode is not in the form of three upper-case letters.");
    }
    for (char c : charray) {
        if (c < 'A' || c > 'Z') {
            throw new IllegalArgumentException("The currencyCode is not in the form of three upper-case letters.");
        }
    }
    // Check whether the locale is valid
    Control c = Control.getNoFallbackControl(Control.FORMAT_DEFAULT);
    for (Locale l : getAvailableLocales()) {
        if (c.getCandidateLocales("", l).contains(locale)) {
            return null;
        }
    }
    throw new IllegalArgumentException("The locale is not available");
}