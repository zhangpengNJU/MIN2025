/**
 * Returns true if the next token in this scanner's input can be
 * interpreted as a short value in the specified radix using the
 * {@link #nextShort} method. The scanner does not advance past any input.
 *
 * @param radix the radix used to interpret the token as a short value
 * @return true if and only if this scanner's next token is a valid
 *         short value in the specified radix
 * @throws IllegalStateException if this scanner is closed
 */
public boolean hasNextShort(int radix) {
    setRadix(radix);
    boolean result = hasNext(integerPattern());
    if (result) {
        // Cache it
        try {
            String s = (matcher.group(SIMPLE_GROUP_INDEX) == null) ? processIntegerToken(hasNextResult) : hasNextResult;
            typeCache = Short.parseShort(s, radix);
        } catch (NumberFormatException nfe) {
            result = false;
        }
    }
    return result;
}