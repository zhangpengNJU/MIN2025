/**
 * Inserts the specified element into the list (optional operation).
 * The element is inserted immediately before the element that
 * would be returned by {@link #next}, if any, and after the element
 * that would be returned by {@link #previous}, if any.  (If the
 * list contains no elements, the new element becomes the sole element
 * on the list.)  The new element is inserted before the implicit
 * cursor: a subsequent call to {@code next} would be unaffected, and a
 * subsequent call to {@code previous} would return the new element.
 * (This call increases by one the value that would be returned by a
 * call to {@code nextIndex} or {@code previousIndex}.)
 *
 * @param e the element to insert
 * @throws UnsupportedOperationException if the {@code add} method is
 *         not supported by this list iterator
 * @throws ClassCastException if the class of the specified element
 *         prevents it from being added to this list
 * @throws IllegalArgumentException if some aspect of this element
 *         prevents it from being added to this list
 */
void add(E e);