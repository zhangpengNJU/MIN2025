/**
 * Returns a string representation of this map.  The string
 * representation consists of a list of key-value mappings (in no
 * particular order) enclosed in braces ("{@code {}}").  Adjacent
 * mappings are separated by the characters {@code ", "} (comma
 * and space).  Each key-value mapping is rendered as the key
 * followed by an equals sign ("{@code =}") followed by the
 * associated value.
 *
 * @return a string representation of this map
 */
public String toString() {
    Node<K, V>[] t;
    int f = (t = table) == null ? 0 : t.length;
    Traverser<K, V> it = new Traverser<K, V>(t, f, 0, f);
    StringBuilder sb = new StringBuilder();
    sb.append('{');
    Node<K, V> p;
    if ((p = it.advance()) != null) {
        for (; ; ) {
            K k = p.key;
            V v = p.val;
            sb.append(k == this ? "(this Map)" : k);
            sb.append('=');
            sb.append(v == this ? "(this Map)" : v);
            if ((p = it.advance()) == null)
                break;
            sb.append(',').append(' ');
        }
    }
    return sb.append('}').toString();
}