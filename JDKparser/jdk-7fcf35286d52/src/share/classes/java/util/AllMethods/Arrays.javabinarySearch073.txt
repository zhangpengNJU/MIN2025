// Like public version, but without range checks.
private static int binarySearch0(float[] a, int fromIndex, int toIndex, float key) {
    int low = fromIndex;
    int high = toIndex - 1;
    while (low <= high) {
        int mid = (low + high) >>> 1;
        float midVal = a[mid];
        if (midVal < key)
            // Neither val is NaN, thisVal is smaller
            low = mid + 1;
        else if (midVal > key)
            // Neither val is NaN, thisVal is larger
            high = mid - 1;
        else {
            int midBits = Float.floatToIntBits(midVal);
            int keyBits = Float.floatToIntBits(key);
            if (// Values are equal
            midBits == keyBits)
                // Key found
                return mid;
            else if (// (-0.0, 0.0) or (!NaN, NaN)
            midBits < keyBits)
                low = mid + 1;
            else
                // (0.0, -0.0) or (NaN, !NaN)
                high = mid - 1;
        }
    }
    // key not found.
    return -(low + 1);
}