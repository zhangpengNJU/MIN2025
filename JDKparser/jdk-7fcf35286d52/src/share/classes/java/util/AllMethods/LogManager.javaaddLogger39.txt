/**
 * Add a named logger.  This does nothing and returns false if a logger
 * with the same name is already registered.
 * <p>
 * The Logger factory methods call this method to register each
 * newly created Logger.
 * <p>
 * The application should retain its own reference to the Logger
 * object to avoid it being garbage collected.  The LogManager
 * may only retain a weak reference.
 *
 * @param   logger the new logger.
 * @return  true if the argument logger was registered successfully,
 *          false if a logger of that name already exists.
 * @exception NullPointerException if the logger name is null.
 */
public boolean addLogger(Logger logger) {
    final String name = logger.getName();
    if (name == null) {
        throw new NullPointerException();
    }
    drainLoggerRefQueueBounded();
    LoggerContext cx = getUserContext();
    if (cx.addLocalLogger(logger)) {
        // Do we have a per logger handler too?
        // Note: this will add a 200ms penalty
        loadLoggerHandlers(logger, name, name + ".handlers");
        return true;
    } else {
        return false;
    }
}