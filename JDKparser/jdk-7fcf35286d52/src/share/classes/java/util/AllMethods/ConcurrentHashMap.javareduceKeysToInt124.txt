/**
 * Returns the result of accumulating the given transformation
 * of all keys using the given reducer to combine values, and
 * the given basis as an identity value.
 *
 * @param parallelismThreshold the (estimated) number of elements
 * needed for this operation to be executed in parallel
 * @param transformer a function returning the transformation
 * for an element
 * @param basis the identity (initial default value) for the reduction
 * @param reducer a commutative associative combining function
 * @return the result of accumulating the given transformation
 * of all keys
 * @since 1.8
 */
public int reduceKeysToInt(long parallelismThreshold, ToIntFunction<? super K> transformer, int basis, IntBinaryOperator reducer) {
    if (transformer == null || reducer == null)
        throw new NullPointerException();
    return new MapReduceKeysToIntTask<K, V>(null, batchFor(parallelismThreshold), 0, 0, table, null, transformer, basis, reducer).invoke();
}