/**
 * Log a message, specifying source class, method, and resource bundle name,
 * with a single object parameter to the log message.
 * <p>
 * If the logger is currently enabled for the given message
 * level then a corresponding LogRecord is created and forwarded
 * to all the registered output Handler objects.
 * <p>
 * The msg string is localized using the named resource bundle.  If the
 * resource bundle name is null, or an empty String or invalid
 * then the msg string is not localized.
 * <p>
 * @param   level   One of the message level identifiers, e.g., SEVERE
 * @param   sourceClass    name of class that issued the logging request
 * @param   sourceMethod   name of method that issued the logging request
 * @param   bundleName     name of resource bundle to localize msg,
 *                         can be null
 * @param   msg      The string message (or a key in the message catalog)
 * @param   param1    Parameter to the log message.
 * @deprecated Use {@link #logrb(java.util.logging.Level, java.lang.String,
 *   java.lang.String, java.util.ResourceBundle, java.lang.String,
 *   java.lang.Object...)} instead
 */
@Deprecated
public void logrb(Level level, String sourceClass, String sourceMethod, String bundleName, String msg, Object param1) {
    if (!isLoggable(level)) {
        return;
    }
    LogRecord lr = new LogRecord(level, msg);
    lr.setSourceClassName(sourceClass);
    lr.setSourceMethodName(sourceMethod);
    Object[] params = { param1 };
    lr.setParameters(params);
    doLog(lr, bundleName);
}