/**
 * Saves this deque to a stream (that is, serializes it).
 *
 * @serialData The current size ({@code int}) of the deque,
 * followed by all of its elements (each an object reference) in
 * first-to-last order.
 */
private void writeObject(java.io.ObjectOutputStream s) throws java.io.IOException {
    s.defaultWriteObject();
    // Write out size
    s.writeInt(size());
    // Write out elements in order.
    int mask = elements.length - 1;
    for (int i = head; i != tail; i = (i + 1) & mask) s.writeObject(elements[i]);
}