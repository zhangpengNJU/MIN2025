/**
 * Post-processing by dependent after successful UniCompletion
 * tryFire.  Tries to clean stack of source a, and then either runs
 * postComplete or returns this to caller, depending on mode.
 */
final CompletableFuture<T> postFire(CompletableFuture<?> a, int mode) {
    if (a != null && a.stack != null) {
        if (mode < 0 || a.result == null)
            a.cleanStack();
        else
            a.postComplete();
    }
    if (result != null && stack != null) {
        if (mode < 0)
            return this;
        else
            postComplete();
    }
    return null;
}