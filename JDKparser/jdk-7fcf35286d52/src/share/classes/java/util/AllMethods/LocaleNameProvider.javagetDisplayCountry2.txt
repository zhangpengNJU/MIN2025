/**
 * Returns a localized name for the given <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">
 * IETF BCP47</a> region code (either ISO 3166 country code or UN M.49 area
 * codes) and the given locale that is appropriate for display to the user.
 * For example, if <code>countryCode</code> is "FR" and <code>locale</code>
 * is en_US, getDisplayCountry() will return "France"; if <code>countryCode</code>
 * is "US" and <code>locale</code> is fr_FR, getDisplayCountry() will return "Etats-Unis".
 * If the name returned cannot be localized according to <code>locale</code>,
 * (say, the provider does not have a Japanese name for Croatia),
 * this method returns null.
 * @param countryCode the country(region) code string in the form of two
 *     upper-case letters between 'A' (U+0041) and 'Z' (U+005A) or the UN M.49 area code
 *     in the form of three digit letters between '0' (U+0030) and '9' (U+0039).
 * @param locale the desired locale
 * @return the name of the given country code for the specified locale, or null if it's not
 *     available.
 * @exception NullPointerException if <code>countryCode</code> or <code>locale</code> is null
 * @exception IllegalArgumentException if <code>countryCode</code> is not in the form of
 *     two upper-case letters or three digit letters, or <code>locale</code> isn't
 *     one of the locales returned from
 *     {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
 *     getAvailableLocales()}.
 * @see java.util.Locale#getDisplayCountry(java.util.Locale)
 */
public abstract String getDisplayCountry(String countryCode, Locale locale);