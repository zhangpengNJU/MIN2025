/**
 * Sets the {@code field} parameter to the given {@code value}.
 * {@code field} is an index to the {@link Calendar#fields}, such as
 * {@link Calendar#DAY_OF_MONTH DAY_OF_MONTH}. Field value validation is
 * not performed in this method. Any out of range values are either
 * normalized in lenient mode or detected as an invalid value in
 * non-lenient mode when building a {@code Calendar}.
 *
 * @param field an index to the {@code Calendar} fields
 * @param value the field value
 * @return this {@code Calendar.Builder}
 * @throws IllegalArgumentException if {@code field} is invalid
 * @throws IllegalStateException if the instant value has already been set,
 *                      or if fields have been set too many
 *                      (approximately {@link Integer#MAX_VALUE}) times.
 * @see Calendar#set(int, int)
 */
public Builder set(int field, int value) {
    // Note: WEEK_YEAR can't be set with this method.
    if (field < 0 || field >= FIELD_COUNT) {
        throw new IllegalArgumentException("field is invalid");
    }
    if (isInstantSet()) {
        throw new IllegalStateException("instant has been set");
    }
    allocateFields();
    internalSet(field, value);
    return this;
}