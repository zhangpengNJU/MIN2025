/**
 * Equivalent in effect to {@link #get} followed by {@link
 * #reset}. This method may apply for example during quiescent
 * points between multithreaded computations.  If there are
 * updates concurrent with this method, the returned value is
 * <em>not</em> guaranteed to be the final value occurring before
 * the reset.
 *
 * @return the value before reset
 */
public double getThenReset() {
    Cell[] as = cells;
    Cell a;
    double result = Double.longBitsToDouble(base);
    base = identity;
    if (as != null) {
        for (int i = 0; i < as.length; ++i) {
            if ((a = as[i]) != null) {
                double v = Double.longBitsToDouble(a.value);
                a.value = identity;
                result = function.applyAsDouble(result, v);
            }
        }
    }
    return result;
}