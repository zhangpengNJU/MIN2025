private void layout(BigInteger intVal, int scale, BigDecimalLayoutForm form) {
    char[] coeff = intVal.toString().toCharArray();
    this.scale = scale;
    // Construct a buffer, with sufficient capacity for all cases.
    // If E-notation is needed, length will be: +1 if negative, +1
    // if '.' needed, +2 for "E+", + up to 10 for adjusted
    // exponent.  Otherwise it could have +1 if negative, plus
    // leading "0.00000"
    mant = new StringBuilder(coeff.length + 14);
    if (scale == 0) {
        int len = coeff.length;
        if (len > 1) {
            mant.append(coeff[0]);
            if (form == BigDecimalLayoutForm.SCIENTIFIC) {
                mant.append('.');
                dot = true;
                mant.append(coeff, 1, len - 1);
                exp = new StringBuilder("+");
                if (len < 10)
                    exp.append("0").append(len - 1);
                else
                    exp.append(len - 1);
            } else {
                mant.append(coeff, 1, len - 1);
            }
        } else {
            mant.append(coeff);
            if (form == BigDecimalLayoutForm.SCIENTIFIC)
                exp = new StringBuilder("+00");
        }
        return;
    }
    long adjusted = -(long) scale + (coeff.length - 1);
    if (form == BigDecimalLayoutForm.DECIMAL_FLOAT) {
        // count of padding zeros
        int pad = scale - coeff.length;
        if (pad >= 0) {
            // 0.xxx form
            mant.append("0.");
            dot = true;
            for (; pad > 0; pad--) mant.append('0');
            mant.append(coeff);
        } else {
            if (-pad < coeff.length) {
                // xx.xx form
                mant.append(coeff, 0, -pad);
                mant.append('.');
                dot = true;
                mant.append(coeff, -pad, scale);
            } else {
                // xx form
                mant.append(coeff, 0, coeff.length);
                for (int i = 0; i < -scale; i++) mant.append('0');
                this.scale = 0;
            }
        }
    } else {
        // x.xxx form
        mant.append(coeff[0]);
        if (coeff.length > 1) {
            mant.append('.');
            dot = true;
            mant.append(coeff, 1, coeff.length - 1);
        }
        exp = new StringBuilder();
        if (adjusted != 0) {
            long abs = Math.abs(adjusted);
            // require sign
            exp.append(adjusted < 0 ? '-' : '+');
            if (abs < 10)
                exp.append('0');
            exp.append(abs);
        } else {
            exp.append("+00");
        }
    }
}