/**
 * Sets the daylight saving time start rule to a weekday before or after the given date within
 * a month, e.g., the first Monday on or after the 8th.
 *
 * @param startMonth      The daylight saving time starting month. Month is
 *                        a {@link Calendar#MONTH MONTH} field
 *                        value (0-based. e.g., 0 for January).
 * @param startDay        The day of the month on which the daylight saving time starts.
 * @param startDayOfWeek  The daylight saving time starting day-of-week.
 * @param startTime       The daylight saving time starting time in local wall clock
 *                        time, which is local standard time in this case.
 * @param after           If true, this rule selects the first <code>dayOfWeek</code> on or
 *                        <em>after</em> <code>dayOfMonth</code>.  If false, this rule
 *                        selects the last <code>dayOfWeek</code> on or <em>before</em>
 *                        <code>dayOfMonth</code>.
 * @exception IllegalArgumentException if the <code>startMonth</code>, <code>startDay</code>,
 * <code>startDayOfWeek</code>, or <code>startTime</code> parameters are out of range
 * @since 1.2
 */
public void setStartRule(int startMonth, int startDay, int startDayOfWeek, int startTime, boolean after) {
    // TODO: this method doesn't check the initial values of dayOfMonth or dayOfWeek.
    if (after) {
        setStartRule(startMonth, startDay, -startDayOfWeek, startTime);
    } else {
        setStartRule(startMonth, -startDay, -startDayOfWeek, startTime);
    }
}