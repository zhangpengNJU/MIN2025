/**
 * Returns the sum of elements in this stream.
 *
 * Summation is a special case of a <a
 * href="package-summary.html#Reduction">reduction</a>. If
 * floating-point summation were exact, this method would be
 * equivalent to:
 *
 * <pre>{@code
 *     return reduce(0, Double::sum);
 * }</pre>
 *
 * However, since floating-point summation is not exact, the above
 * code is not necessarily equivalent to the summation computation
 * done by this method.
 *
 * <p>If any stream element is a NaN or the sum is at any point a NaN
 * then the sum will be NaN.
 *
 * The value of a floating-point sum is a function both
 * of the input values as well as the order of addition
 * operations. The order of addition operations of this method is
 * intentionally not defined to allow for implementation
 * flexibility to improve the speed and accuracy of the computed
 * result.
 *
 * In particular, this method may be implemented using compensated
 * summation or other technique to reduce the error bound in the
 * numerical sum compared to a simple summation of {@code double}
 * values.
 *
 * <p>This is a <a href="package-summary.html#StreamOps">terminal
 * operation</a>.
 *
 * @apiNote Elements sorted by increasing absolute magnitude tend
 * to yield more accurate results.
 *
 * @return the sum of elements in this stream
 */
double sum();