/**
 * Returns a localized name for the given <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">
 * IETF BCP47</a> language code and the given locale that is appropriate for
 * display to the user.
 * For example, if <code>languageCode</code> is "fr" and <code>locale</code>
 * is en_US, getDisplayLanguage() will return "French"; if <code>languageCode</code>
 * is "en" and <code>locale</code> is fr_FR, getDisplayLanguage() will return "anglais".
 * If the name returned cannot be localized according to <code>locale</code>,
 * (say, the provider does not have a Japanese name for Croatian),
 * this method returns null.
 * @param languageCode the language code string in the form of two to eight
 *     lower-case letters between 'a' (U+0061) and 'z' (U+007A)
 * @param locale the desired locale
 * @return the name of the given language code for the specified locale, or null if it's not
 *     available.
 * @exception NullPointerException if <code>languageCode</code> or <code>locale</code> is null
 * @exception IllegalArgumentException if <code>languageCode</code> is not in the form of
 *     two or three lower-case letters, or <code>locale</code> isn't
 *     one of the locales returned from
 *     {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
 *     getAvailableLocales()}.
 * @see java.util.Locale#getDisplayLanguage(java.util.Locale)
 */
public abstract String getDisplayLanguage(String languageCode, Locale locale);