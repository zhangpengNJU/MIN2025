// Modification Operations
/**
 * Adds the specified element to this set if it is not already present
 * (optional operation).  More formally, adds the specified element
 * <tt>e</tt> to this set if the set contains no element <tt>e2</tt>
 * such that
 * <tt>(e==null&nbsp;?&nbsp;e2==null&nbsp;:&nbsp;e.equals(e2))</tt>.
 * If this set already contains the element, the call leaves the set
 * unchanged and returns <tt>false</tt>.  In combination with the
 * restriction on constructors, this ensures that sets never contain
 * duplicate elements.
 *
 * <p>The stipulation above does not imply that sets must accept all
 * elements; sets may refuse to add any particular element, including
 * <tt>null</tt>, and throw an exception, as described in the
 * specification for {@link Collection#add Collection.add}.
 * Individual set implementations should clearly document any
 * restrictions on the elements that they may contain.
 *
 * @param e element to be added to this set
 * @return <tt>true</tt> if this set did not already contain the specified
 *         element
 * @throws UnsupportedOperationException if the <tt>add</tt> operation
 *         is not supported by this set
 * @throws ClassCastException if the class of the specified element
 *         prevents it from being added to this set
 * @throws NullPointerException if the specified element is null and this
 *         set does not permit null elements
 * @throws IllegalArgumentException if some property of the specified element
 *         prevents it from being added to this set
 */
boolean add(E e);