/**
 * Sets a resource bundle on this logger.
 * All messages will be logged using the given resource bundle for its
 * specific {@linkplain ResourceBundle#getLocale locale}.
 * @param bundle The resource bundle that this logger shall use.
 * @throws NullPointerException if the given bundle is {@code null}.
 * @throws IllegalArgumentException if the given bundle doesn't have a
 *         {@linkplain ResourceBundle#getBaseBundleName base name},
 *         or if this logger already has a resource bundle set but
 *         the given bundle has a different base name.
 * @throws SecurityException if a security manager exists,
 *         this logger is not anonymous, and the caller
 *         does not have LoggingPermission("control").
 * @since 1.8
 */
public void setResourceBundle(ResourceBundle bundle) {
    checkPermission();
    // Will throw NPE if bundle is null.
    final String baseName = bundle.getBaseBundleName();
    // bundle must have a name
    if (baseName == null || baseName.isEmpty()) {
        throw new IllegalArgumentException("resource bundle must have a name");
    }
    synchronized (this) {
        LoggerBundle lb = loggerBundle;
        final boolean canReplaceResourceBundle = lb.resourceBundleName == null || lb.resourceBundleName.equals(baseName);
        if (!canReplaceResourceBundle) {
            throw new IllegalArgumentException("can't replace resource bundle");
        }
        loggerBundle = LoggerBundle.get(baseName, bundle);
    }
}