/**
 * Ensures that the given root is the first node of its bin.
 */
static <K, V> void moveRootToFront(Node<K, V>[] tab, TreeNode<K, V> root) {
    int n;
    if (root != null && tab != null && (n = tab.length) > 0) {
        int index = (n - 1) & root.hash;
        TreeNode<K, V> first = (TreeNode<K, V>) tab[index];
        if (root != first) {
            Node<K, V> rn;
            tab[index] = root;
            TreeNode<K, V> rp = root.prev;
            if ((rn = root.next) != null)
                ((TreeNode<K, V>) rn).prev = rp;
            if (rp != null)
                rp.next = rn;
            if (first != null)
                first.prev = root;
            root.next = first;
            root.prev = null;
        }
        assert checkInvariants(root);
    }
}