/**
 * Compares the specified object with this map for equality.
 * Returns {@code true} if the given object is a map with the same
 * mappings as this map.  This operation may return misleading
 * results if either map is concurrently modified during execution
 * of this method.
 *
 * @param o object to be compared for equality with this map
 * @return {@code true} if the specified object is equal to this map
 */
public boolean equals(Object o) {
    if (o != this) {
        if (!(o instanceof Map))
            return false;
        Map<?, ?> m = (Map<?, ?>) o;
        Node<K, V>[] t;
        int f = (t = table) == null ? 0 : t.length;
        Traverser<K, V> it = new Traverser<K, V>(t, f, 0, f);
        for (Node<K, V> p; (p = it.advance()) != null; ) {
            V val = p.val;
            Object v = m.get(p.key);
            if (v == null || (v != val && !v.equals(val)))
                return false;
        }
        for (Map.Entry<?, ?> e : m.entrySet()) {
            Object mk, mv, v;
            if ((mk = e.getKey()) == null || (mv = e.getValue()) == null || (v = get(mk)) == null || (mv != v && !mv.equals(v)))
                return false;
        }
    }
    return true;
}