/**
 * Indicates whether some other object is "equal to" this OptionalDouble. The
 * other object is considered equal if:
 * <ul>
 * <li>it is also an {@code OptionalDouble} and;
 * <li>both instances have no value present or;
 * <li>the present values are "equal to" each other via {@code Double.compare() == 0}.
 * </ul>
 *
 * @param obj an object to be tested for equality
 * @return {code true} if the other object is "equal to" this object
 * otherwise {@code false}
 */
@Override
public boolean equals(Object obj) {
    if (this == obj) {
        return true;
    }
    if (!(obj instanceof OptionalDouble)) {
        return false;
    }
    OptionalDouble other = (OptionalDouble) obj;
    return (isPresent && other.isPresent) ? Double.compare(value, other.value) == 0 : isPresent == other.isPresent;
}