/**
 * Gets and removes a local or stolen task for the given worker.
 *
 * @return a task, if available
 */
final ForkJoinTask<?> nextTaskFor(WorkQueue w) {
    for (ForkJoinTask<?> t; ; ) {
        WorkQueue q;
        int b;
        if ((t = w.nextLocalTask()) != null)
            return t;
        if ((q = findNonEmptyStealQueue()) == null)
            return null;
        if ((b = q.base) - q.top < 0 && (t = q.pollAt(b)) != null)
            return t;
    }
}