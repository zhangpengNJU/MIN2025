/**
 * Resets the Builder to match the provided IETF BCP 47
 * language tag.  Discards the existing state.  Null and the
 * empty string cause the builder to be reset, like {@link
 * #clear}.  Grandfathered tags (see {@link
 * Locale#forLanguageTag}) are converted to their canonical
 * form before being processed.  Otherwise, the language tag
 * must be well-formed (see {@link Locale}) or an exception is
 * thrown (unlike <code>Locale.forLanguageTag</code>, which
 * just discards ill-formed and following portions of the
 * tag).
 *
 * @param languageTag the language tag
 * @return This builder.
 * @throws IllformedLocaleException if <code>languageTag</code> is ill-formed
 * @see Locale#forLanguageTag(String)
 */
public Builder setLanguageTag(String languageTag) {
    ParseStatus sts = new ParseStatus();
    LanguageTag tag = LanguageTag.parse(languageTag, sts);
    if (sts.isError()) {
        throw new IllformedLocaleException(sts.getErrorMessage(), sts.getErrorIndex());
    }
    localeBuilder.setLanguageTag(tag);
    return this;
}