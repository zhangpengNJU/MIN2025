@Override
public void write(byte[] b, int off, int len) throws IOException {
    if (closed)
        throw new IOException("Stream is closed");
    if (off < 0 || len < 0 || len > b.length - off)
        throw new ArrayIndexOutOfBoundsException();
    if (len == 0)
        return;
    if (leftover != 0) {
        if (leftover == 1) {
            b1 = b[off++] & 0xff;
            len--;
            if (len == 0) {
                leftover++;
                return;
            }
        }
        b2 = b[off++] & 0xff;
        len--;
        checkNewline();
        out.write(base64[b0 >> 2]);
        out.write(base64[(b0 << 4) & 0x3f | (b1 >> 4)]);
        out.write(base64[(b1 << 2) & 0x3f | (b2 >> 6)]);
        out.write(base64[b2 & 0x3f]);
        linepos += 4;
    }
    int nBits24 = len / 3;
    leftover = len - (nBits24 * 3);
    while (nBits24-- > 0) {
        checkNewline();
        int bits = (b[off++] & 0xff) << 16 | (b[off++] & 0xff) << 8 | (b[off++] & 0xff);
        out.write(base64[(bits >>> 18) & 0x3f]);
        out.write(base64[(bits >>> 12) & 0x3f]);
        out.write(base64[(bits >>> 6) & 0x3f]);
        out.write(base64[bits & 0x3f]);
        linepos += 4;
    }
    if (leftover == 1) {
        b0 = b[off++] & 0xff;
    } else if (leftover == 2) {
        b0 = b[off++] & 0xff;
        b1 = b[off++] & 0xff;
    }
}