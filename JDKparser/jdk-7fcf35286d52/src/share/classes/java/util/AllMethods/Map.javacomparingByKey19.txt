/**
 * Returns a comparator that compares {@link Map.Entry} by key using the given
 * {@link Comparator}.
 *
 * <p>The returned comparator is serializable if the specified comparator
 * is also serializable.
 *
 * @param  <K> the type of the map keys
 * @param  <V> the type of the map values
 * @param  cmp the key {@link Comparator}
 * @return a comparator that compares {@link Map.Entry} by the key.
 * @since 1.8
 */
public static <K, V> Comparator<Map.Entry<K, V>> comparingByKey(Comparator<? super K> cmp) {
    Objects.requireNonNull(cmp);
    return (Comparator<Map.Entry<K, V>> & Serializable) (c1, c2) -> cmp.compare(c1.getKey(), c2.getKey());
}