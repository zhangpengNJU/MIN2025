/**
 * Performs {@link #parallelPrefix(long[], LongBinaryOperator)}
 * for the given subrange of the array.
 *
 * @param array the array
 * @param fromIndex the index of the first element, inclusive
 * @param toIndex the index of the last element, exclusive
 * @param op a side-effect-free, associative function to perform the
 * cumulation
 * @throws IllegalArgumentException if {@code fromIndex > toIndex}
 * @throws ArrayIndexOutOfBoundsException
 *     if {@code fromIndex < 0} or {@code toIndex > array.length}
 * @throws NullPointerException if the specified array or function is null
 * @since 1.8
 */
public static void parallelPrefix(long[] array, int fromIndex, int toIndex, LongBinaryOperator op) {
    Objects.requireNonNull(op);
    rangeCheck(array.length, fromIndex, toIndex);
    if (fromIndex < toIndex)
        new ArrayPrefixHelpers.LongCumulateTask(null, op, array, fromIndex, toIndex).invoke();
}