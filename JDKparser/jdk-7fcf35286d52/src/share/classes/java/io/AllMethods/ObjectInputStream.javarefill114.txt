/**
 * Refills internal buffer buf with block data.  Any data in buf at the
 * time of the call is considered consumed.  Sets the pos, end, and
 * unread fields to reflect the new amount of available block data; if
 * the next element in the stream is not a data block, sets pos and
 * unread to 0 and end to -1.
 */
private void refill() throws IOException {
    try {
        do {
            pos = 0;
            if (unread > 0) {
                int n = in.read(buf, 0, Math.min(unread, MAX_BLOCK_SIZE));
                if (n >= 0) {
                    end = n;
                    unread -= n;
                } else {
                    throw new StreamCorruptedException("unexpected EOF in middle of data block");
                }
            } else {
                int n = readBlockHeader(true);
                if (n >= 0) {
                    end = 0;
                    unread = n;
                } else {
                    end = -1;
                    unread = 0;
                }
            }
        } while (pos == end);
    } catch (IOException ex) {
        pos = 0;
        end = -1;
        unread = 0;
        throw ex;
    }
}