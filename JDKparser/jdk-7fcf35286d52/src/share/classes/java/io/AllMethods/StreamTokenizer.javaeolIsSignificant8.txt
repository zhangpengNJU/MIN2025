/**
 * Determines whether or not ends of line are treated as tokens.
 * If the flag argument is true, this tokenizer treats end of lines
 * as tokens; the {@code nextToken} method returns
 * {@code TT_EOL} and also sets the {@code ttype} field to
 * this value when an end of line is read.
 * <p>
 * A line is a sequence of characters ending with either a
 * carriage-return character ({@code '\u005Cr'}) or a newline
 * character ({@code '\u005Cn'}). In addition, a carriage-return
 * character followed immediately by a newline character is treated
 * as a single end-of-line token.
 * <p>
 * If the {@code flag} is false, end-of-line characters are
 * treated as white space and serve only to separate tokens.
 *
 * @param   flag   {@code true} indicates that end-of-line characters
 *                 are separate tokens; {@code false} indicates that
 *                 end-of-line characters are white space.
 * @see     java.io.StreamTokenizer#nextToken()
 * @see     java.io.StreamTokenizer#ttype
 * @see     java.io.StreamTokenizer#TT_EOL
 */
public void eolIsSignificant(boolean flag) {
    eolIsSignificantP = flag;
}