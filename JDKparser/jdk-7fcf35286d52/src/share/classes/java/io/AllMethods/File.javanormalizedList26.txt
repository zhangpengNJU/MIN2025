/**
 * Returns an array of strings naming the files and directories in the
 * directory denoted by this abstract pathname.  The strings are
 * ensured to represent normalized paths.
 *
 * @return  An array of strings naming the files and directories in the
 *          directory denoted by this abstract pathname.  The array will be
 *          empty if the directory is empty.  Returns {@code null} if
 *          this abstract pathname does not denote a directory, or if an
 *          I/O error occurs.
 *
 * @throws  SecurityException
 *          If a security manager exists and its {@link
 *          SecurityManager#checkRead(String)} method denies read access to
 *          the directory
 */
private final String[] normalizedList() {
    SecurityManager security = System.getSecurityManager();
    if (security != null) {
        security.checkRead(path);
    }
    if (isInvalid()) {
        return null;
    }
    String[] s = fs.list(this);
    if (s != null && getClass() != File.class) {
        String[] normalized = new String[s.length];
        for (int i = 0; i < s.length; i++) {
            normalized[i] = fs.normalize(s[i]);
        }
        s = normalized;
    }
    return s;
}