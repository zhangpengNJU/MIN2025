/**
 * Initializes class descriptor representing a proxy class.
 */
void initProxy(Class<?> cl, ClassNotFoundException resolveEx, ObjectStreamClass superDesc) throws InvalidClassException {
    ObjectStreamClass osc = null;
    if (cl != null) {
        osc = lookup(cl, true);
        if (!osc.isProxy) {
            throw new InvalidClassException("cannot bind proxy descriptor to a non-proxy class");
        }
    }
    this.cl = cl;
    this.resolveEx = resolveEx;
    this.superDesc = superDesc;
    isProxy = true;
    serializable = true;
    suid = Long.valueOf(0);
    fields = NO_FIELDS;
    if (osc != null) {
        localDesc = osc;
        name = localDesc.name;
        externalizable = localDesc.externalizable;
        writeReplaceMethod = localDesc.writeReplaceMethod;
        readResolveMethod = localDesc.readResolveMethod;
        deserializeEx = localDesc.deserializeEx;
        domains = localDesc.domains;
        cons = localDesc.cons;
    }
    fieldRefl = getReflector(fields, localDesc);
    initialized = true;
}