/**
 * Associates a ClassNotFoundException (if one not already associated)
 * with the currently active handle and propagates it to other
 * referencing objects as appropriate.  The specified handle must be
 * "open" (i.e., assigned, but not finished yet).
 */
void markException(int handle, ClassNotFoundException ex) {
    switch(status[handle]) {
        case STATUS_UNKNOWN:
            status[handle] = STATUS_EXCEPTION;
            entries[handle] = ex;
            // propagate exception to dependents
            HandleList dlist = deps[handle];
            if (dlist != null) {
                int ndeps = dlist.size();
                for (int i = 0; i < ndeps; i++) {
                    markException(dlist.get(i), ex);
                }
                deps[handle] = null;
            }
            break;
        case STATUS_EXCEPTION:
            break;
        default:
            throw new InternalError();
    }
}