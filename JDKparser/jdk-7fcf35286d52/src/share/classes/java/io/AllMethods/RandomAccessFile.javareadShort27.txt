/**
 * Reads a signed 16-bit number from this file. The method reads two
 * bytes from this file, starting at the current file pointer.
 * If the two bytes read, in order, are
 * {@code b1} and {@code b2}, where each of the two values is
 * between {@code 0} and {@code 255}, inclusive, then the
 * result is equal to:
 * <blockquote><pre>
 *     (short)((b1 &lt;&lt; 8) | b2)
 * </pre></blockquote>
 * <p>
 * This method blocks until the two bytes are read, the end of the
 * stream is detected, or an exception is thrown.
 *
 * @return     the next two bytes of this file, interpreted as a signed
 *             16-bit number.
 * @exception  EOFException  if this file reaches the end before reading
 *               two bytes.
 * @exception  IOException   if an I/O error occurs.
 */
public final short readShort() throws IOException {
    int ch1 = this.read();
    int ch2 = this.read();
    if ((ch1 | ch2) < 0)
        throw new EOFException();
    return (short) ((ch1 << 8) + (ch2 << 0));
}