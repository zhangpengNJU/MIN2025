/**
 * Specify stream protocol version to use when writing the stream.
 *
 * <p>This routine provides a hook to enable the current version of
 * Serialization to write in a format that is backwards compatible to a
 * previous version of the stream format.
 *
 * <p>Every effort will be made to avoid introducing additional
 * backwards incompatibilities; however, sometimes there is no
 * other alternative.
 *
 * @param   version use ProtocolVersion from java.io.ObjectStreamConstants.
 * @throws  IllegalStateException if called after any objects
 *          have been serialized.
 * @throws  IllegalArgumentException if invalid version is passed in.
 * @throws  IOException if I/O errors occur
 * @see java.io.ObjectStreamConstants#PROTOCOL_VERSION_1
 * @see java.io.ObjectStreamConstants#PROTOCOL_VERSION_2
 * @since   1.2
 */
public void useProtocolVersion(int version) throws IOException {
    if (handles.size() != 0) {
        // REMIND: implement better check for pristine stream?
        throw new IllegalStateException("stream non-empty");
    }
    switch(version) {
        case PROTOCOL_VERSION_1:
        case PROTOCOL_VERSION_2:
            protocol = version;
            break;
        default:
            throw new IllegalArgumentException("unknown version: " + version);
    }
}