/**
 * This function is used by RBTableBuilder to fill in all the members of this
 * object.  (Effectively, the builder class functions as a "friend" of this
 * class, but to avoid changing too much of the logic, it carries around "shadow"
 * copies of all these variables until the end of the build process and then
 * copies them en masse into the actual tables object once all the construction
 * logic is complete.  This function does that "copying en masse".
 * @param f2ary The value for frenchSec (the French-secondary flag)
 * @param swap The value for SE Asian swapping rule
 * @param map The collator's character-mapping table (the value for mapping)
 * @param cTbl The collator's contracting-character table (the value for contractTable)
 * @param eTbl The collator's expanding-character table (the value for expandTable)
 * @param cFlgs The hash table of characters that participate in contracting-
 *              character sequences (the value for contractFlags)
 * @param mso The value for maxSecOrder
 * @param mto The value for maxTerOrder
 */
void fillInTables(boolean f2ary, boolean swap, UCompactIntArray map, Vector<Vector<EntryPair>> cTbl, Vector<int[]> eTbl, IntHashtable cFlgs, short mso, short mto) {
    frenchSec = f2ary;
    seAsianSwapping = swap;
    mapping = map;
    contractTable = cTbl;
    expandTable = eTbl;
    contractFlags = cFlgs;
    maxSecOrder = mso;
    maxTerOrder = mto;
}