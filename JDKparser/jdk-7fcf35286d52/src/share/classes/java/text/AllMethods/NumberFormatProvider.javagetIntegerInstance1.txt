/**
 * Returns a new <code>NumberFormat</code> instance which formats
 * integer values for the specified locale.
 * The returned number format is configured to
 * round floating point numbers to the nearest integer using
 * half-even rounding (see {@link java.math.RoundingMode#HALF_EVEN HALF_EVEN})
 * for formatting, and to parse only the integer part of
 * an input string (see {@link
 * java.text.NumberFormat#isParseIntegerOnly isParseIntegerOnly}).
 *
 * @param locale the desired locale
 * @exception NullPointerException if <code>locale</code> is null
 * @exception IllegalArgumentException if <code>locale</code> isn't
 *     one of the locales returned from
 *     {@link java.util.spi.LocaleServiceProvider#getAvailableLocales()
 *     getAvailableLocales()}.
 * @return a number format for integer values
 * @see java.text.NumberFormat#getIntegerInstance(java.util.Locale)
 */
public abstract NumberFormat getIntegerInstance(Locale locale);