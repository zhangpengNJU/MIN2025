/**
 * Returns a {@link Lookup lookup object} which is trusted minimally.
 * It can only be used to create method handles to
 * publicly accessible fields and methods.
 * <p>
 * As a matter of pure convention, the {@linkplain Lookup#lookupClass lookup class}
 * of this lookup object will be {@link java.lang.Object}.
 *
 * <p style="font-size:smaller;">
 * <em>Discussion:</em>
 * The lookup class can be changed to any other class {@code C} using an expression of the form
 * {@link Lookup#in publicLookup().in(C.class)}.
 * Since all classes have equal access to public names,
 * such a change would confer no new access rights.
 * A public lookup object is always subject to
 * <a href="MethodHandles.Lookup.html#secmgr">security manager checks</a>.
 * Also, it cannot access
 * <a href="MethodHandles.Lookup.html#callsens">caller sensitive methods</a>.
 * @return a lookup object which is trusted minimally
 */
public static Lookup publicLookup() {
    return Lookup.PUBLIC_LOOKUP;
}