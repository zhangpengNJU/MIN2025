/**
 * Tells which access-protection classes of members this lookup object can produce.
 *  The result is a bit-mask of the bits
 *  {@linkplain #PUBLIC PUBLIC (0x01)},
 *  {@linkplain #PRIVATE PRIVATE (0x02)},
 *  {@linkplain #PROTECTED PROTECTED (0x04)},
 *  and {@linkplain #PACKAGE PACKAGE (0x08)}.
 *  <p>
 *  A freshly-created lookup object
 *  on the {@linkplain java.lang.invoke.MethodHandles#lookup() caller's class}
 *  has all possible bits set, since the caller class can access all its own members.
 *  A lookup object on a new lookup class
 *  {@linkplain java.lang.invoke.MethodHandles.Lookup#in created from a previous lookup object}
 *  may have some mode bits set to zero.
 *  The purpose of this is to restrict access via the new lookup object,
 *  so that it can access only names which can be reached by the original
 *  lookup object, and also by the new lookup class.
 *  @return the lookup modes, which limit the kinds of access performed by this lookup object
 */
public int lookupModes() {
    return allowedModes & ALL_MODES;
}