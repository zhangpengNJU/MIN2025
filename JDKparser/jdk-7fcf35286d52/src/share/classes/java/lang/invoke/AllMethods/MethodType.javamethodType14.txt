/**
 * Finds or creates a method type with the given components.
 * Convenience method for {@link #methodType(java.lang.Class, java.lang.Class[]) methodType}.
 * The resulting method has the single given parameter type.
 * @param rtype  the return type
 * @param ptype0 the parameter type
 * @return a method type with the given return value and parameter type
 * @throws NullPointerException if {@code rtype} or {@code ptype0} is null
 * @throws IllegalArgumentException if {@code ptype0} is {@code void.class}
 */
public static MethodType methodType(Class<?> rtype, Class<?> ptype0) {
    return makeImpl(rtype, new Class<?>[] { ptype0 }, true);
}