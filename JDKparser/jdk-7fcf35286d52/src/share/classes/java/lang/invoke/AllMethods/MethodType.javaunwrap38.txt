/**
 * Converts all wrapper types to their corresponding primitive types.
 * Convenience method for {@link #methodType(java.lang.Class, java.lang.Class[]) methodType}.
 * All primitive types (including {@code void}) will remain unchanged.
 * A return type of {@code java.lang.Void} is changed to {@code void}.
 * @return a version of the original type with all wrapper types replaced
 */
public MethodType unwrap() {
    MethodType noprims = !hasPrimitives() ? this : wrapWithPrims(this);
    return unwrapWithNoPrims(noprims);
}