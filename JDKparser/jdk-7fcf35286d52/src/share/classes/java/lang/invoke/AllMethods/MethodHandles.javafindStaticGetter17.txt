/**
 * Produces a method handle giving read access to a static field.
 * The type of the method handle will have a return type of the field's
 * value type.
 * The method handle will take no arguments.
 * Access checking is performed immediately on behalf of the lookup class.
 * <p>
 * If the returned method handle is invoked, the field's class will
 * be initialized, if it has not already been initialized.
 * @param refc the class or interface from which the method is accessed
 * @param name the field's name
 * @param type the field's type
 * @return a method handle which can load values from the field
 * @throws NoSuchFieldException if the field does not exist
 * @throws IllegalAccessException if access checking fails, or if the field is not {@code static}
 * @exception SecurityException if a security manager is present and it
 *                              <a href="MethodHandles.Lookup.html#secmgr">refuses access</a>
 * @throws NullPointerException if any argument is null
 */
public MethodHandle findStaticGetter(Class<?> refc, String name, Class<?> type) throws NoSuchFieldException, IllegalAccessException {
    MemberName field = resolveOrFail(REF_getStatic, refc, name, type);
    return getDirectField(REF_getStatic, refc, field);
}