/**
 * Finds or creates a method type with additional parameter types.
 * Convenience method for {@link #methodType(java.lang.Class, java.lang.Class[]) methodType}.
 * @param ptypesToInsert zero or more new parameter types to insert after the end of the parameter list
 * @return the same type, except with the selected parameter(s) appended
 * @throws IllegalArgumentException if any element of {@code ptypesToInsert} is {@code void.class}
 *                                  or if the resulting method type would have more than 255 parameter slots
 * @throws NullPointerException if {@code ptypesToInsert} or any of its elements is null
 */
public MethodType appendParameterTypes(Class<?>... ptypesToInsert) {
    return insertParameterTypes(parameterCount(), ptypesToInsert);
}