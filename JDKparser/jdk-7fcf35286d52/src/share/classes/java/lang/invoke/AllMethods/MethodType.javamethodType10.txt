/**
 * Finds or creates a method type with the given components.
 * Convenience method for {@link #methodType(java.lang.Class, java.lang.Class[]) methodType}.
 * @param rtype  the return type
 * @param ptypes the parameter types
 * @return a method type with the given components
 * @throws NullPointerException if {@code rtype} or {@code ptypes} or any element of {@code ptypes} is null
 * @throws IllegalArgumentException if any element of {@code ptypes} is {@code void.class}
 */
public static MethodType methodType(Class<?> rtype, List<Class<?>> ptypes) {
    // random List impl. could return evil ptypes array
    boolean notrust = false;
    return makeImpl(rtype, listToArray(ptypes), notrust);
}