/**
 * Produce a resolved version of the given member.
 *  Super types are searched (for inherited members) if {@code searchSupers} is true.
 *  Access checking is performed on behalf of the given {@code lookupClass}.
 *  If lookup fails or access is not permitted, return null.
 *  Otherwise a fresh copy of the given member is returned, with modifier bits filled in.
 */
public MemberName resolveOrNull(byte refKind, MemberName m, Class<?> lookupClass) {
    MemberName result = resolve(refKind, m, lookupClass);
    if (result.isResolved())
        return result;
    return null;
}