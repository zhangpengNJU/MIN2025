private static BoundMethodHandle insertArgumentPrimitive(BoundMethodHandle result, int pos, Class<?> ptype, Object value) {
    Wrapper w = Wrapper.forPrimitiveType(ptype);
    // perform unboxing and/or primitive conversion
    value = w.convert(value, ptype);
    switch(w) {
        case INT:
            return result.bindArgumentI(pos, (int) value);
        case LONG:
            return result.bindArgumentJ(pos, (long) value);
        case FLOAT:
            return result.bindArgumentF(pos, (float) value);
        case DOUBLE:
            return result.bindArgumentD(pos, (double) value);
        default:
            return result.bindArgumentI(pos, ValueConversions.widenSubword(value));
    }
}