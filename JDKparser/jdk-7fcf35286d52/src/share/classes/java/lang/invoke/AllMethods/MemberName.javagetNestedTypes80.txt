/**
 * Return a list of all nested types defined by the given class.
 *  Super types are searched (for inherited members) if {@code searchSupers} is true.
 *  Access checking is performed on behalf of the given {@code lookupClass}.
 *  Inaccessible members are not added to the last.
 */
public List<MemberName> getNestedTypes(Class<?> defc, boolean searchSupers, Class<?> lookupClass) {
    int matchFlags = IS_TYPE | (searchSupers ? SEARCH_ALL_SUPERS : 0);
    return getMembers(defc, null, null, matchFlags, lookupClass);
}