/**
 * Converts all primitive types to their corresponding wrapper types.
 * Convenience method for {@link #methodType(java.lang.Class, java.lang.Class[]) methodType}.
 * All reference types (including wrapper types) will remain unchanged.
 * A {@code void} return type is changed to the type {@code java.lang.Void}.
 * The expression {@code type.wrap().erase()} produces the same value
 * as {@code type.generic()}.
 * @return a version of the original type with all primitive types replaced
 */
public MethodType wrap() {
    return hasPrimitives() ? wrapWithPrims(this) : this;
}