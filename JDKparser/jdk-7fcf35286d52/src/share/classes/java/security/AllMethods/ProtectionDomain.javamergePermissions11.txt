private PermissionCollection mergePermissions() {
    if (staticPermissions)
        return permissions;
    PermissionCollection perms = java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<PermissionCollection>() {

        public PermissionCollection run() {
            Policy p = Policy.getPolicyNoCheck();
            return p.getPermissions(ProtectionDomain.this);
        }
    });
    Permissions mergedPerms = new Permissions();
    int swag = 32;
    int vcap = 8;
    Enumeration<Permission> e;
    List<Permission> pdVector = new ArrayList<>(vcap);
    List<Permission> plVector = new ArrayList<>(swag);
    // 
    // Build a vector of domain permissions for subsequent merge
    if (permissions != null) {
        synchronized (permissions) {
            e = permissions.elements();
            while (e.hasMoreElements()) {
                pdVector.add(e.nextElement());
            }
        }
    }
    // 
    // Build a vector of Policy permissions for subsequent merge
    if (perms != null) {
        synchronized (perms) {
            e = perms.elements();
            while (e.hasMoreElements()) {
                plVector.add(e.nextElement());
                vcap++;
            }
        }
    }
    if (perms != null && permissions != null) {
        // 
        // Weed out the duplicates from the policy. Unless a refresh
        // has occurred since the pd was consed this should result in
        // an empty vector.
        synchronized (permissions) {
            // domain vs policy
            e = permissions.elements();
            while (e.hasMoreElements()) {
                Permission pdp = e.nextElement();
                Class<?> pdpClass = pdp.getClass();
                String pdpActions = pdp.getActions();
                String pdpName = pdp.getName();
                for (int i = 0; i < plVector.size(); i++) {
                    Permission pp = plVector.get(i);
                    if (pdpClass.isInstance(pp)) {
                        // The equals() method on some permissions
                        // have some side effects so this manual
                        // comparison is sufficient.
                        if (pdpName.equals(pp.getName()) && pdpActions.equals(pp.getActions())) {
                            plVector.remove(i);
                            break;
                        }
                    }
                }
            }
        }
    }
    if (perms != null) {
        // the order of adding to merged perms and permissions
        // needs to preserve the bugfix 4301064
        for (int i = plVector.size() - 1; i >= 0; i--) {
            mergedPerms.add(plVector.get(i));
        }
    }
    if (permissions != null) {
        for (int i = pdVector.size() - 1; i >= 0; i--) {
            mergedPerms.add(pdVector.get(i));
        }
    }
    return mergedPerms;
}