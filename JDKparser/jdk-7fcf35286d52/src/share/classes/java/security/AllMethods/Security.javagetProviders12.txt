/**
 * Returns an array containing all installed providers that satisfy the
 * specified selection criterion, or null if no such providers have been
 * installed. The returned providers are ordered
 * according to their
 * {@linkplain #insertProviderAt(java.security.Provider, int) preference order}.
 *
 * <p> A cryptographic service is always associated with a particular
 * algorithm or type. For example, a digital signature service is
 * always associated with a particular algorithm (e.g., DSA),
 * and a CertificateFactory service is always associated with
 * a particular certificate type (e.g., X.509).
 *
 * <p>The selection criterion must be specified in one of the following two
 * formats:
 * <ul>
 * <li> <i>{@literal <crypto_service>.<algorithm_or_type>}</i>
 * <p> The cryptographic service name must not contain any dots.
 * <p> A
 * provider satisfies the specified selection criterion iff the provider
 * implements the
 * specified algorithm or type for the specified cryptographic service.
 * <p> For example, "CertificateFactory.X.509"
 * would be satisfied by any provider that supplied
 * a CertificateFactory implementation for X.509 certificates.
 * <li> <i>{@literal <crypto_service>.<algorithm_or_type>
 * <attribute_name>:<attribute_value>}</i>
 * <p> The cryptographic service name must not contain any dots. There
 * must be one or more space characters between the
 * <i>{@literal <algorithm_or_type>}</i> and the
 * <i>{@literal <attribute_name>}</i>.
 *  <p> A provider satisfies this selection criterion iff the
 * provider implements the specified algorithm or type for the specified
 * cryptographic service and its implementation meets the
 * constraint expressed by the specified attribute name/value pair.
 * <p> For example, "Signature.SHA1withDSA KeySize:1024" would be
 * satisfied by any provider that implemented
 * the SHA1withDSA signature algorithm with a keysize of 1024 (or larger).
 *
 * </ul>
 *
 * <p> See the <a href=
 * "{@docRoot}/../technotes/guides/security/StandardNames.html">
 * Java Cryptography Architecture Standard Algorithm Name Documentation</a>
 * for information about standard cryptographic service names, standard
 * algorithm names and standard attribute names.
 *
 * @param filter the criterion for selecting
 * providers. The filter is case-insensitive.
 *
 * @return all the installed providers that satisfy the selection
 * criterion, or null if no such providers have been installed.
 *
 * @throws InvalidParameterException
 *         if the filter is not in the required format
 * @throws NullPointerException if filter is null
 *
 * @see #getProviders(java.util.Map)
 * @since 1.3
 */
public static Provider[] getProviders(String filter) {
    String key = null;
    String value = null;
    int index = filter.indexOf(':');
    if (index == -1) {
        key = filter;
        value = "";
    } else {
        key = filter.substring(0, index);
        value = filter.substring(index + 1);
    }
    Hashtable<String, String> hashtableFilter = new Hashtable<>(1);
    hashtableFilter.put(key, value);
    return (getProviders(hashtableFilter));
}