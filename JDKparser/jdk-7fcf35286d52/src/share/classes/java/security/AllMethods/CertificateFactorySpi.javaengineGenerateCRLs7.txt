/**
 * Returns a (possibly empty) collection view of the CRLs read
 * from the given input stream {@code inStream}.
 *
 * <p>In order to take advantage of the specialized CRL format
 * supported by this certificate factory, each element in
 * the returned collection view can be typecast to the corresponding
 * CRL class. For example, if this certificate
 * factory implements X.509 CRLs, the elements in the returned
 * collection can be typecast to the {@code X509CRL} class.
 *
 * <p>In the case of a certificate factory for X.509 CRLs,
 * {@code inStream} may contain a single DER-encoded CRL.
 * In addition, {@code inStream} may contain a PKCS#7 CRL
 * set. This is a PKCS#7 <i>SignedData</i> object, with the only
 * significant field being <i>crls</i>. In particular, the
 * signature and the contents are ignored. This format allows multiple
 * CRLs to be downloaded at once. If no CRLs are present,
 * an empty collection is returned.
 *
 * <p>Note that if the given input stream does not support
 * {@link java.io.InputStream#mark(int) mark} and
 * {@link java.io.InputStream#reset() reset}, this method will
 * consume the entire input stream.
 *
 * @param inStream the input stream with the CRLs.
 *
 * @return a (possibly empty) collection view of
 * java.security.cert.CRL objects initialized with the data from the input
 * stream.
 *
 * @exception CRLException on parsing errors.
 */
public abstract Collection<? extends CRL> engineGenerateCRLs(InputStream inStream) throws CRLException;