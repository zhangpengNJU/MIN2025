/**
 * Saves a keystore {@code Entry} under the specified alias.
 * The protection parameter is used to protect the
 * {@code Entry}.
 *
 * <p> If an entry already exists for the specified alias,
 * it is overridden.
 *
 * @param alias save the keystore {@code Entry} under this alias
 * @param entry the {@code Entry} to save
 * @param protParam the {@code ProtectionParameter}
 *          used to protect the {@code Entry},
 *          which may be {@code null}
 *
 * @exception NullPointerException if
 *          {@code alias} or {@code entry}
 *          is {@code null}
 * @exception KeyStoreException if the keystore has not been initialized
 *          (loaded), or if this operation fails for some other reason
 *
 * @see #getEntry(String, KeyStore.ProtectionParameter)
 *
 * @since 1.5
 */
public final void setEntry(String alias, Entry entry, ProtectionParameter protParam) throws KeyStoreException {
    if (alias == null || entry == null) {
        throw new NullPointerException("invalid null input");
    }
    if (!initialized) {
        throw new KeyStoreException("Uninitialized keystore");
    }
    keyStoreSpi.engineSetEntry(alias, entry, protParam);
}