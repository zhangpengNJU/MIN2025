/**
 * Return a PermissionCollection object containing the set of
 * permissions granted to the specified CodeSource.
 *
 * <p> Applications are discouraged from calling this method
 * since this operation may not be supported by all policy implementations.
 * Applications should solely rely on the {@code implies} method
 * to perform policy checks.  If an application absolutely must call
 * a getPermissions method, it should call
 * {@code getPermissions(ProtectionDomain)}.
 *
 * <p> The default implementation of this method returns
 * Policy.UNSUPPORTED_EMPTY_COLLECTION.  This method can be
 * overridden if the policy implementation can return a set of
 * permissions granted to a CodeSource.
 *
 * @param codesource the CodeSource to which the returned
 *          PermissionCollection has been granted.
 *
 * @return a set of permissions granted to the specified CodeSource.
 *          If this operation is supported, the returned
 *          set of permissions must be a new mutable instance
 *          and it must support heterogeneous Permission types.
 *          If this operation is not supported,
 *          Policy.UNSUPPORTED_EMPTY_COLLECTION is returned.
 */
public PermissionCollection getPermissions(CodeSource codesource) {
    return Policy.UNSUPPORTED_EMPTY_COLLECTION;
}