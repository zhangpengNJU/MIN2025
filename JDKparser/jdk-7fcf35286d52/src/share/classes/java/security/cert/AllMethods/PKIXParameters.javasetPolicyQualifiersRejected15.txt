/**
 * Sets the PolicyQualifiersRejected flag. If this flag is true,
 * certificates that include policy qualifiers in a certificate
 * policies extension that is marked critical are rejected.
 * If the flag is false, certificates are not rejected on this basis.
 *
 * <p> When a {@code PKIXParameters} object is created, this flag is
 * set to true. This setting reflects the most common (and simplest)
 * strategy for processing policy qualifiers. Applications that want to use
 * a more sophisticated policy must set this flag to false.
 * <p>
 * Note that the PKIX certification path validation algorithm specifies
 * that any policy qualifier in a certificate policies extension that is
 * marked critical must be processed and validated. Otherwise the
 * certification path must be rejected. If the policyQualifiersRejected flag
 * is set to false, it is up to the application to validate all policy
 * qualifiers in this manner in order to be PKIX compliant.
 *
 * @param qualifiersRejected the new value of the PolicyQualifiersRejected
 * flag
 * @see #getPolicyQualifiersRejected
 * @see PolicyQualifierInfo
 */
public void setPolicyQualifiersRejected(boolean qualifiersRejected) {
    policyQualifiersRejected = qualifiersRejected;
}