/**
 * Validates the specified certification path using the specified
 * algorithm parameter set.
 * <p>
 * The {@code CertPath} specified must be of a type that is
 * supported by the validation algorithm, otherwise an
 * {@code InvalidAlgorithmParameterException} will be thrown. For
 * example, a {@code CertPathValidator} that implements the PKIX
 * algorithm validates {@code CertPath} objects of type X.509.
 *
 * @param certPath the {@code CertPath} to be validated
 * @param params the algorithm parameters
 * @return the result of the validation algorithm
 * @exception CertPathValidatorException if the {@code CertPath}
 * does not validate
 * @exception InvalidAlgorithmParameterException if the specified
 * parameters or the type of the specified {@code CertPath} are
 * inappropriate for this {@code CertPathValidator}
 */
public abstract CertPathValidatorResult engineValidate(CertPath certPath, CertPathParameters params) throws CertPathValidatorException, InvalidAlgorithmParameterException;