/**
 * Places the input stream for this socket at "end of stream".
 * Any data sent to the input stream side of the socket is acknowledged
 * and then silently discarded.
 * <p>
 * If you read from a socket input stream after invoking this method on the
 * socket, the stream's {@code available} method will return 0, and its
 * {@code read} methods will return {@code -1} (end of stream).
 *
 * @exception IOException if an I/O error occurs when shutting down this
 * socket.
 *
 * @since 1.3
 * @see java.net.Socket#shutdownOutput()
 * @see java.net.Socket#close()
 * @see java.net.Socket#setSoLinger(boolean, int)
 * @see #isInputShutdown
 */
public void shutdownInput() throws IOException {
    if (isClosed())
        throw new SocketException("Socket is closed");
    if (!isConnected())
        throw new SocketException("Socket is not connected");
    if (isInputShutdown())
        throw new SocketException("Socket input is already shutdown");
    getImpl().shutdownInput();
    shutIn = true;
}