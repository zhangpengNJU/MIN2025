private void connectV4(InputStream in, OutputStream out, InetSocketAddress endpoint, long deadlineMillis) throws IOException {
    if (!(endpoint.getAddress() instanceof Inet4Address)) {
        throw new SocketException("SOCKS V4 requires IPv4 only addresses");
    }
    out.write(PROTO_VERS4);
    out.write(CONNECT);
    out.write((endpoint.getPort() >> 8) & 0xff);
    out.write((endpoint.getPort() >> 0) & 0xff);
    out.write(endpoint.getAddress().getAddress());
    String userName = getUserName();
    try {
        out.write(userName.getBytes("ISO-8859-1"));
    } catch (java.io.UnsupportedEncodingException uee) {
        assert false;
    }
    out.write(0);
    out.flush();
    byte[] data = new byte[8];
    int n = readSocksReply(in, data, deadlineMillis);
    if (n != 8)
        throw new SocketException("Reply from SOCKS server has bad length: " + n);
    if (data[0] != 0 && data[0] != 4)
        throw new SocketException("Reply from SOCKS server has bad version");
    SocketException ex = null;
    switch(data[1]) {
        case 90:
            // Success!
            external_address = endpoint;
            break;
        case 91:
            ex = new SocketException("SOCKS request rejected");
            break;
        case 92:
            ex = new SocketException("SOCKS server couldn't reach destination");
            break;
        case 93:
            ex = new SocketException("SOCKS authentication failed");
            break;
        default:
            ex = new SocketException("Reply from SOCKS server contains bad status");
            break;
    }
    if (ex != null) {
        in.close();
        out.close();
        throw ex;
    }
}