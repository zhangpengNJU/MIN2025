public boolean isReachable(InetAddress addr, int timeout, NetworkInterface netif, int ttl) throws IOException {
    byte[] ifaddr = null;
    int scope = -1;
    int netif_scope = -1;
    if (netif != null) {
        /*
             * Let's make sure we bind to an address of the proper family.
             * Which means same family as addr because at this point it could
             * be either an IPv6 address or an IPv4 address (case of a dual
             * stack system).
             */
        java.util.Enumeration<InetAddress> it = netif.getInetAddresses();
        InetAddress inetaddr = null;
        while (it.hasMoreElements()) {
            inetaddr = it.nextElement();
            if (inetaddr.getClass().isInstance(addr)) {
                ifaddr = inetaddr.getAddress();
                if (inetaddr instanceof Inet6Address) {
                    netif_scope = ((Inet6Address) inetaddr).getScopeId();
                }
                break;
            }
        }
        if (ifaddr == null) {
            // Interface doesn't support the address family of
            // the destination
            return false;
        }
    }
    if (addr instanceof Inet6Address)
        scope = ((Inet6Address) addr).getScopeId();
    return isReachable0(addr.getAddress(), scope, timeout, ifaddr, ttl, netif_scope);
}