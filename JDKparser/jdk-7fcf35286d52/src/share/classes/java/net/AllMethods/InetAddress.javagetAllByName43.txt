private static InetAddress[] getAllByName(String host, InetAddress reqAddr) throws UnknownHostException {
    if (host == null || host.length() == 0) {
        InetAddress[] ret = new InetAddress[1];
        ret[0] = impl.loopbackAddress();
        return ret;
    }
    boolean ipv6Expected = false;
    if (host.charAt(0) == '[') {
        // This is supposed to be an IPv6 literal
        if (host.length() > 2 && host.charAt(host.length() - 1) == ']') {
            host = host.substring(1, host.length() - 1);
            ipv6Expected = true;
        } else {
            // This was supposed to be a IPv6 address, but it's not!
            throw new UnknownHostException(host + ": invalid IPv6 address");
        }
    }
    // if host is an IP address, we won't do further lookup
    if (Character.digit(host.charAt(0), 16) != -1 || (host.charAt(0) == ':')) {
        byte[] addr = null;
        int numericZone = -1;
        String ifname = null;
        // see if it is IPv4 address
        addr = IPAddressUtil.textToNumericFormatV4(host);
        if (addr == null) {
            // This is supposed to be an IPv6 literal
            // Check if a numeric or string zone id is present
            int pos;
            if ((pos = host.indexOf("%")) != -1) {
                numericZone = checkNumericZone(host);
                if (numericZone == -1) {
                    /* remainder of string must be an ifname */
                    ifname = host.substring(pos + 1);
                }
            }
            if ((addr = IPAddressUtil.textToNumericFormatV6(host)) == null && host.contains(":")) {
                throw new UnknownHostException(host + ": invalid IPv6 address");
            }
        } else if (ipv6Expected) {
            // Means an IPv4 litteral between brackets!
            throw new UnknownHostException("[" + host + "]");
        }
        InetAddress[] ret = new InetAddress[1];
        if (addr != null) {
            if (addr.length == Inet4Address.INADDRSZ) {
                ret[0] = new Inet4Address(null, addr);
            } else {
                if (ifname != null) {
                    ret[0] = new Inet6Address(null, addr, ifname);
                } else {
                    ret[0] = new Inet6Address(null, addr, numericZone);
                }
            }
            return ret;
        }
    } else if (ipv6Expected) {
        // We were expecting an IPv6 Litteral, but got something else
        throw new UnknownHostException("[" + host + "]");
    }
    return getAllByName0(host, reqAddr, true);
}