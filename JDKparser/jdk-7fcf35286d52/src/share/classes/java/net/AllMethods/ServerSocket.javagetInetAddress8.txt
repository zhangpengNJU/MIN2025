/**
 * Returns the local address of this server socket.
 * <p>
 * If the socket was bound prior to being {@link #close closed},
 * then this method will continue to return the local address
 * after the socket is closed.
 * <p>
 * If there is a security manager set, its {@code checkConnect} method is
 * called with the local address and {@code -1} as its arguments to see
 * if the operation is allowed. If the operation is not allowed,
 * the {@link InetAddress#getLoopbackAddress loopback} address is returned.
 *
 * @return  the address to which this socket is bound,
 *          or the loopback address if denied by the security manager,
 *          or {@code null} if the socket is unbound.
 *
 * @see SecurityManager#checkConnect
 */
public InetAddress getInetAddress() {
    if (!isBound())
        return null;
    try {
        InetAddress in = getImpl().getInetAddress();
        SecurityManager sm = System.getSecurityManager();
        if (sm != null)
            sm.checkConnect(in.getHostAddress(), -1);
        return in;
    } catch (SecurityException e) {
        return InetAddress.getLoopbackAddress();
    } catch (SocketException e) {
    // nothing
    // If we're bound, the impl has been created
    // so we shouldn't get here
    }
    return null;
}