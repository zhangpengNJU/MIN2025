/**
 * Retrieve the cached response based on the requesting uri,
 * request method and request headers. Typically this method is
 * called by the protocol handler before it sends out the request
 * to get the network resource. If a cached response is returned,
 * that resource is used instead.
 *
 * @param uri a {@code URI} used to reference the requested
 *            network resource
 * @param rqstMethod a {@code String} representing the request
 *            method
 * @param rqstHeaders - a Map from request header
 *            field names to lists of field values representing
 *            the current request headers
 * @return a {@code CacheResponse} instance if available
 *          from cache, or null otherwise
 * @throws  IOException if an I/O error occurs
 * @throws  IllegalArgumentException if any one of the arguments is null
 *
 * @see     java.net.URLConnection#setUseCaches(boolean)
 * @see     java.net.URLConnection#getUseCaches()
 * @see     java.net.URLConnection#setDefaultUseCaches(boolean)
 * @see     java.net.URLConnection#getDefaultUseCaches()
 */
public abstract CacheResponse get(URI uri, String rqstMethod, Map<String, List<String>> rqstHeaders) throws IOException;