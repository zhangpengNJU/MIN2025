/**
 * Returns a {@link java.net.URLConnection URLConnection} instance that
 * represents a connection to the remote object referred to by the
 * {@code URL}.
 *
 * <P>A new instance of {@linkplain java.net.URLConnection URLConnection} is
 * created every time when invoking the
 * {@linkplain java.net.URLStreamHandler#openConnection(URL)
 * URLStreamHandler.openConnection(URL)} method of the protocol handler for
 * this URL.</P>
 *
 * <P>It should be noted that a URLConnection instance does not establish
 * the actual network connection on creation. This will happen only when
 * calling {@linkplain java.net.URLConnection#connect() URLConnection.connect()}.</P>
 *
 * <P>If for the URL's protocol (such as HTTP or JAR), there
 * exists a public, specialized URLConnection subclass belonging
 * to one of the following packages or one of their subpackages:
 * java.lang, java.io, java.util, java.net, the connection
 * returned will be of that subclass. For example, for HTTP an
 * HttpURLConnection will be returned, and for JAR a
 * JarURLConnection will be returned.</P>
 *
 * @return     a {@link java.net.URLConnection URLConnection} linking
 *             to the URL.
 * @exception  IOException  if an I/O exception occurs.
 * @see        java.net.URL#URL(java.lang.String, java.lang.String,
 *             int, java.lang.String)
 */
public URLConnection openConnection() throws java.io.IOException {
    return handler.openConnection(this);
}