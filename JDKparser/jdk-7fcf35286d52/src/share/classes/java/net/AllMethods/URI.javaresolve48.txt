// RFC2396 5.2
private static URI resolve(URI base, URI child) {
    // check if child if opaque first so that NPE is thrown
    // if child is null.
    if (child.isOpaque() || base.isOpaque())
        return child;
    // 5.2 (2): Reference to current document (lone fragment)
    if ((child.scheme == null) && (child.authority == null) && child.path.equals("") && (child.fragment != null) && (child.query == null)) {
        if ((base.fragment != null) && child.fragment.equals(base.fragment)) {
            return base;
        }
        URI ru = new URI();
        ru.scheme = base.scheme;
        ru.authority = base.authority;
        ru.userInfo = base.userInfo;
        ru.host = base.host;
        ru.port = base.port;
        ru.path = base.path;
        ru.fragment = child.fragment;
        ru.query = base.query;
        return ru;
    }
    // 5.2 (3): Child is absolute
    if (child.scheme != null)
        return child;
    // Resolved URI
    URI ru = new URI();
    ru.scheme = base.scheme;
    ru.query = child.query;
    ru.fragment = child.fragment;
    // 5.2 (4): Authority
    if (child.authority == null) {
        ru.authority = base.authority;
        ru.host = base.host;
        ru.userInfo = base.userInfo;
        ru.port = base.port;
        String cp = (child.path == null) ? "" : child.path;
        if ((cp.length() > 0) && (cp.charAt(0) == '/')) {
            // 5.2 (5): Child path is absolute
            ru.path = child.path;
        } else {
            // 5.2 (6): Resolve relative path
            ru.path = resolvePath(base.path, cp, base.isAbsolute());
        }
    } else {
        ru.authority = child.authority;
        ru.host = child.host;
        ru.userInfo = child.userInfo;
        ru.host = child.host;
        ru.port = child.port;
        ru.path = child.path;
    }
    // 5.2 (7): Recombine (nothing to do here)
    return ru;
}