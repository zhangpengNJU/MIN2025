/**
 * Sets the {@link SocketOptions#SO_SNDBUF SO_SNDBUF} option to the
 * specified value for this {@code Socket}.
 * The {@link SocketOptions#SO_SNDBUF SO_SNDBUF} option is used by the
 * platform's networking code as a hint for the size to set the underlying
 * network I/O buffers.
 *
 * <p>Because {@link SocketOptions#SO_SNDBUF SO_SNDBUF} is a hint,
 * applications that want to verify what size the buffers were set to
 * should call {@link #getSendBufferSize()}.
 *
 * @exception SocketException if there is an error
 * in the underlying protocol, such as a TCP error.
 *
 * @param size the size to which to set the send buffer
 * size. This value must be greater than 0.
 *
 * @exception IllegalArgumentException if the
 * value is 0 or is negative.
 *
 * @see #getSendBufferSize()
 * @since 1.2
 */
public synchronized void setSendBufferSize(int size) throws SocketException {
    if (!(size > 0)) {
        throw new IllegalArgumentException("negative send size");
    }
    if (isClosed())
        throw new SocketException("Socket is closed");
    getImpl().setOption(SocketOptions.SO_SNDBUF, new Integer(size));
}