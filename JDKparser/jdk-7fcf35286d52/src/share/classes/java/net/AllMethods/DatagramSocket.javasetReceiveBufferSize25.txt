/**
 * Sets the SO_RCVBUF option to the specified value for this
 * {@code DatagramSocket}. The SO_RCVBUF option is used by the
 * the network implementation as a hint to size the underlying
 * network I/O buffers. The SO_RCVBUF setting may also be used
 * by the network implementation to determine the maximum size
 * of the packet that can be received on this socket.
 * <p>
 * Because SO_RCVBUF is a hint, applications that want to
 * verify what size the buffers were set to should call
 * {@link #getReceiveBufferSize()}.
 * <p>
 * Increasing SO_RCVBUF may allow the network implementation
 * to buffer multiple packets when packets arrive faster than
 * are being received using {@link #receive(DatagramPacket)}.
 * <p>
 * Note: It is implementation specific if a packet larger
 * than SO_RCVBUF can be received.
 *
 * @param size the size to which to set the receive buffer
 * size. This value must be greater than 0.
 *
 * @exception SocketException if there is an error in
 * the underlying protocol, such as an UDP error.
 * @exception IllegalArgumentException if the value is 0 or is
 * negative.
 * @see #getReceiveBufferSize()
 */
public synchronized void setReceiveBufferSize(int size) throws SocketException {
    if (size <= 0) {
        throw new IllegalArgumentException("invalid receive size");
    }
    if (isClosed())
        throw new SocketException("Socket is closed");
    getImpl().setOption(SocketOptions.SO_RCVBUF, new Integer(size));
}