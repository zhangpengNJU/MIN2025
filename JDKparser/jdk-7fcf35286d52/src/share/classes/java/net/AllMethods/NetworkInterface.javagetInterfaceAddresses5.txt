/**
 * Get a List of all or a subset of the {@code InterfaceAddresses}
 * of this network interface.
 * <p>
 * If there is a security manager, its {@code checkConnect}
 * method is called with the InetAddress for each InterfaceAddress.
 * Only InterfaceAddresses where the {@code checkConnect} doesn't throw
 * a SecurityException will be returned in the List.
 *
 * @return a {@code List} object with all or a subset of the
 *         InterfaceAddresss of this network interface
 * @since 1.6
 */
public java.util.List<InterfaceAddress> getInterfaceAddresses() {
    java.util.List<InterfaceAddress> lst = new java.util.ArrayList<InterfaceAddress>(1);
    SecurityManager sec = System.getSecurityManager();
    for (int j = 0; j < bindings.length; j++) {
        try {
            if (sec != null) {
                sec.checkConnect(bindings[j].getAddress().getHostAddress(), -1);
            }
            lst.add(bindings[j]);
        } catch (SecurityException e) {
        }
    }
    return lst;
}