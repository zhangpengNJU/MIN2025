@Override
public long getLong(TemporalField field) {
    if (field instanceof ChronoField) {
        switch((ChronoField) field) {
            case DAY_OF_WEEK:
                return getDayOfWeek();
            case ALIGNED_DAY_OF_WEEK_IN_MONTH:
                return ((getDayOfWeek() - 1) % 7) + 1;
            case ALIGNED_DAY_OF_WEEK_IN_YEAR:
                return ((getDayOfYear() - 1) % 7) + 1;
            case DAY_OF_MONTH:
                return this.dayOfMonth;
            case DAY_OF_YEAR:
                return this.getDayOfYear();
            case EPOCH_DAY:
                return toEpochDay();
            case ALIGNED_WEEK_OF_MONTH:
                return ((dayOfMonth - 1) / 7) + 1;
            case ALIGNED_WEEK_OF_YEAR:
                return ((getDayOfYear() - 1) / 7) + 1;
            case MONTH_OF_YEAR:
                return monthOfYear;
            case PROLEPTIC_MONTH:
                return getProlepticMonth();
            case YEAR_OF_ERA:
                return prolepticYear;
            case YEAR:
                return prolepticYear;
            case ERA:
                return getEraValue();
        }
        throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    return field.getFrom(this);
}