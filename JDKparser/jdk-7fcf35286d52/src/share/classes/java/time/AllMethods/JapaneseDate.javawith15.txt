// -----------------------------------------------------------------------
@Override
public JapaneseDate with(TemporalField field, long newValue) {
    if (field instanceof ChronoField) {
        ChronoField f = (ChronoField) field;
        if (getLong(f) == newValue) {
            // getLong() validates for supported fields
            return this;
        }
        switch(f) {
            case YEAR_OF_ERA:
            case YEAR:
            case ERA:
                {
                    int nvalue = getChronology().range(f).checkValidIntValue(newValue, f);
                    switch(f) {
                        case YEAR_OF_ERA:
                            return this.withYear(nvalue);
                        case YEAR:
                            return with(isoDate.withYear(nvalue));
                        case ERA:
                            {
                                return this.withYear(JapaneseEra.of(nvalue), yearOfEra);
                            }
                    }
                }
        }
        // YEAR, PROLEPTIC_MONTH and others are same as ISO
        return with(isoDate.with(field, newValue));
    }
    return super.with(field, newValue);
}