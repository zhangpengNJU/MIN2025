// -------------------------------------------------------------------------
/**
 * Returns an adjusted copy of this instant.
 * <p>
 * This returns an {@code Instant}, based on this one, with the instant adjusted.
 * The adjustment takes place using the specified adjuster strategy object.
 * Read the documentation of the adjuster to understand what adjustment will be made.
 * <p>
 * The result of this method is obtained by invoking the
 * {@link TemporalAdjuster#adjustInto(Temporal)} method on the
 * specified adjuster passing {@code this} as the argument.
 * <p>
 * This instance is immutable and unaffected by this method call.
 *
 * @param adjuster the adjuster to use, not null
 * @return an {@code Instant} based on {@code this} with the adjustment made, not null
 * @throws DateTimeException if the adjustment cannot be made
 * @throws ArithmeticException if numeric overflow occurs
 */
@Override
public Instant with(TemporalAdjuster adjuster) {
    return (Instant) adjuster.adjustInto(this);
}