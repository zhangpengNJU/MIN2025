@Override
public int parse(DateTimeParseContext context, CharSequence text, int position) {
    int length = text.length();
    int noOffsetLen = noOffsetText.length();
    if (noOffsetLen == 0) {
        if (position == length) {
            return context.setParsedField(OFFSET_SECONDS, 0, position, position);
        }
    } else {
        if (position == length) {
            return ~position;
        }
        if (context.subSequenceEquals(text, position, noOffsetText, 0, noOffsetLen)) {
            return context.setParsedField(OFFSET_SECONDS, 0, position, position + noOffsetLen);
        }
    }
    // parse normal plus/minus offset
    // IOOBE if invalid position
    char sign = text.charAt(position);
    if (sign == '+' || sign == '-') {
        // starts
        int negative = (sign == '-' ? -1 : 1);
        int[] array = new int[4];
        array[0] = position + 1;
        if ((parseNumber(array, 1, text, true) || parseNumber(array, 2, text, type >= 3) || parseNumber(array, 3, text, false)) == false) {
            // success
            long offsetSecs = negative * (array[1] * 3600L + array[2] * 60L + array[3]);
            return context.setParsedField(OFFSET_SECONDS, offsetSecs, position, array[0]);
        }
    }
    // handle special case of empty no offset text
    if (noOffsetLen == 0) {
        return context.setParsedField(OFFSET_SECONDS, 0, position, position + noOffsetLen);
    }
    return ~position;
}