// -----------------------------------------------------------------------
/**
 * Converts this date-time to an {@code Instant}.
 * <p>
 * This combines this local date-time and the specified offset to form
 * an {@code Instant}.
 * <p>
 * This default implementation calculates from the epoch-day of the date and the
 * second-of-day of the time.
 *
 * @param offset  the offset to use for the conversion, not null
 * @return an {@code Instant} representing the same instant, not null
 */
default Instant toInstant(ZoneOffset offset) {
    return Instant.ofEpochSecond(toEpochSecond(offset), toLocalTime().getNano());
}