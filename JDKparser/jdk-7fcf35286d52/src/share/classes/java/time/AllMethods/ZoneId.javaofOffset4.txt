/**
 * Obtains an instance of {@code ZoneId} wrapping an offset.
 * <p>
 * If the prefix is "GMT", "UTC", or "UT" a {@code ZoneId}
 * with the prefix and the non-zero offset is returned.
 * If the prefix is empty {@code ""} the {@code ZoneOffset} is returned.
 *
 * @param prefix  the time-zone ID, not null
 * @param offset  the offset, not null
 * @return the zone ID, not null
 * @throws IllegalArgumentException if the prefix is not one of
 *     "GMT", "UTC", or "UT", or ""
 */
public static ZoneId ofOffset(String prefix, ZoneOffset offset) {
    Objects.requireNonNull(prefix, "prefix");
    Objects.requireNonNull(offset, "offset");
    if (prefix.length() == 0) {
        return offset;
    }
    if (!prefix.equals("GMT") && !prefix.equals("UTC") && !prefix.equals("UT")) {
        throw new IllegalArgumentException("prefix should be GMT, UTC or UT, is: " + prefix);
    }
    if (offset.getTotalSeconds() != 0) {
        prefix = prefix.concat(offset.getId());
    }
    return new ZoneRegion(prefix, offset.getRules());
}