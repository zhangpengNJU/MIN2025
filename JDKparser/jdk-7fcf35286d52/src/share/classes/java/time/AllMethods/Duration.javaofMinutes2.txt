/**
 * Obtains a {@code Duration} representing a number of standard minutes.
 * <p>
 * The seconds are calculated based on the standard definition of a minute,
 * where each minute is 60 seconds.
 * The nanosecond in second field is set to zero.
 *
 * @param minutes  the number of minutes, positive or negative
 * @return a {@code Duration}, not null
 * @throws ArithmeticException if the input minutes exceeds the capacity of {@code Duration}
 */
public static Duration ofMinutes(long minutes) {
    return create(Math.multiplyExact(minutes, SECONDS_PER_MINUTE), 0);
}