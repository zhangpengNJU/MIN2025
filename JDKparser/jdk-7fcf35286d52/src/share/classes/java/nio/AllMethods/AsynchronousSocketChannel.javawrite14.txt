/**
 * Writes a sequence of bytes to this channel from the given buffer.
 *
 * <p> This method initiates an asynchronous write operation to write a
 * sequence of bytes to this channel from the given buffer. The {@code
 * handler} parameter is a completion handler that is invoked when the write
 * operation completes (or fails). The result passed to the completion
 * handler is the number of bytes written.
 *
 * <p> If a timeout is specified and the timeout elapses before the operation
 * completes then it completes with the exception {@link
 * InterruptedByTimeoutException}. Where a timeout occurs, and the
 * implementation cannot guarantee that bytes have not been written, or will
 * not be written to the channel from the given buffer, then further attempts
 * to write to the channel will cause an unspecific runtime exception to be
 * thrown.
 *
 * <p> Otherwise this method works in the same manner as the {@link
 * AsynchronousByteChannel#write(ByteBuffer,Object,CompletionHandler)}
 * method.
 *
 * @param   <A>
 *          The type of the attachment
 * @param   src
 *          The buffer from which bytes are to be retrieved
 * @param   timeout
 *          The maximum time for the I/O operation to complete
 * @param   unit
 *          The time unit of the {@code timeout} argument
 * @param   attachment
 *          The object to attach to the I/O operation; can be {@code null}
 * @param   handler
 *          The handler for consuming the result
 *
 * @throws  WritePendingException
 *          If a write operation is already in progress on this channel
 * @throws  NotYetConnectedException
 *          If this channel is not yet connected
 * @throws  ShutdownChannelGroupException
 *          If the channel group has terminated
 */
public abstract <A> void write(ByteBuffer src, long timeout, TimeUnit unit, A attachment, CompletionHandler<Integer, ? super A> handler);