/**
 * Returns the remote address to which this channel's socket is connected.
 *
 * <p> Where the channel is bound and connected to an Internet Protocol
 * socket address then the return value from this method is of type {@link
 * java.net.InetSocketAddress}.
 *
 * @return  The remote address; {@code null} if the channel's socket is not
 *          connected
 *
 * @throws  ClosedChannelException
 *          If the channel is closed
 * @throws  IOException
 *          If an I/O error occurs
 *
 * @since 1.7
 */
public abstract SocketAddress getRemoteAddress() throws IOException;