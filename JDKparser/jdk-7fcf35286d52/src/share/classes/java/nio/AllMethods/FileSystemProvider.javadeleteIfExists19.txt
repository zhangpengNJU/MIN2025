/**
 * Deletes a file if it exists. This method works in exactly the manner
 * specified by the {@link Files#deleteIfExists} method.
 *
 * <p> The default implementation of this method simply invokes {@link
 * #delete} ignoring the {@code NoSuchFileException} when the file does not
 * exist. It may be overridden where appropriate.
 *
 * @param   path
 *          the path to the file to delete
 *
 * @return  {@code true} if the file was deleted by this method; {@code
 *          false} if the file could not be deleted because it did not
 *          exist
 *
 * @throws  DirectoryNotEmptyException
 *          if the file is a directory and could not otherwise be deleted
 *          because the directory is not empty <i>(optional specific
 *          exception)</i>
 * @throws  IOException
 *          if an I/O error occurs
 * @throws  SecurityException
 *          In the case of the default provider, and a security manager is
 *          installed, the {@link SecurityManager#checkDelete(String)} method
 *          is invoked to check delete access to the file
 */
public boolean deleteIfExists(Path path) throws IOException {
    try {
        delete(path);
        return true;
    } catch (NoSuchFileException ignore) {
        return false;
    }
}