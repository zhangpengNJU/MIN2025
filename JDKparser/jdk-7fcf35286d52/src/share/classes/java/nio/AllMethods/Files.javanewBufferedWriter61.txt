/**
 * Opens or creates a file for writing, returning a {@code BufferedWriter}
 * to write text to the file in an efficient manner. The text is encoded
 * into bytes for writing using the {@link StandardCharsets#UTF_8 UTF-8}
 * {@link Charset charset}.
 *
 * <p> This method works as if invoking it were equivalent to evaluating the
 * expression:
 * <pre>{@code
 * Files.newBufferedWriter(path, StandardCharsets.UTF_8, options)
 * }</pre>
 *
 * @param   path
 *          the path to the file
 * @param   options
 *          options specifying how the file is opened
 *
 * @return  a new buffered writer, with default buffer size, to write text
 *          to the file
 *
 * @throws  IOException
 *          if an I/O error occurs opening or creating the file
 * @throws  UnsupportedOperationException
 *          if an unsupported option is specified
 * @throws  SecurityException
 *          In the case of the default provider, and a security manager is
 *          installed, the {@link SecurityManager#checkWrite(String) checkWrite}
 *          method is invoked to check write access to the file.
 *
 * @since 1.8
 */
public static BufferedWriter newBufferedWriter(Path path, OpenOption... options) throws IOException {
    return newBufferedWriter(path, StandardCharsets.UTF_8, options);
}