/**
 * Write lines of text to a file. Characters are encoded into bytes using
 * the {@link StandardCharsets#UTF_8 UTF-8} {@link Charset charset}.
 *
 * <p> This method works as if invoking it were equivalent to evaluating the
 * expression:
 * <pre>{@code
 * Files.write(path, lines, StandardCharsets.UTF_8, options);
 * }</pre>
 *
 * @param   path
 *          the path to the file
 * @param   lines
 *          an object to iterate over the char sequences
 * @param   options
 *          options specifying how the file is opened
 *
 * @return  the path
 *
 * @throws  IOException
 *          if an I/O error occurs writing to or creating the file, or the
 *          text cannot be encoded as {@code UTF-8}
 * @throws  UnsupportedOperationException
 *          if an unsupported option is specified
 * @throws  SecurityException
 *          In the case of the default provider, and a security manager is
 *          installed, the {@link SecurityManager#checkWrite(String) checkWrite}
 *          method is invoked to check write access to the file.
 *
 * @since 1.8
 */
public static Path write(Path path, Iterable<? extends CharSequence> lines, OpenOption... options) throws IOException {
    return write(path, lines, StandardCharsets.UTF_8, options);
}