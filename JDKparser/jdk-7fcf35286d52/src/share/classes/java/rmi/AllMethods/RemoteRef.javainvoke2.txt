/**
 * Executes the remote call.
 *
 * Invoke will raise any "user" exceptions which
 * should pass through and not be caught by the stub.  If any
 * exception is raised during the remote invocation, invoke should
 * take care of cleaning up the connection before raising the
 * "user" or remote exception.
 *
 * @since JDK1.1
 * @deprecated 1.2 style stubs no longer use this method. Instead of
 * using a sequence of method calls to the remote reference
 * (<code>newCall</code>, <code>invoke</code>, and <code>done</code>), a
 * stub uses a single method, <code>invoke(Remote, Method, Object[],
 * int)</code>, on the remote reference to carry out parameter
 * marshalling, remote method executing and unmarshalling of the return
 * value.
 *
 * @param call object representing remote call
 * @throws Exception if any exception occurs during remote method
 * @see #invoke(Remote,java.lang.reflect.Method,Object[],long)
 */
@Deprecated
void invoke(RemoteCall call) throws Exception;